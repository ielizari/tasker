[{"/home/ielizari/proyectos/tasker/src/index.tsx":"1","/home/ielizari/proyectos/tasker/src/reportWebVitals.ts":"2","/home/ielizari/proyectos/tasker/src/tests/mocks/browser.js":"3","/home/ielizari/proyectos/tasker/src/front/styles/globalStyles.ts":"4","/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/browser.js":"5","/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/browserdb.ts":"6","/home/ielizari/proyectos/tasker/src/front/App.tsx":"7","/home/ielizari/proyectos/tasker/src/front/application/contexts/dbSyncContext.tsx":"8","/home/ielizari/proyectos/tasker/src/tests/mocks/handlers.ts":"9","/home/ielizari/proyectos/tasker/src/front/styles/reset.ts":"10","/home/ielizari/proyectos/tasker/src/front/styles/reboot.ts":"11","/home/ielizari/proyectos/tasker/src/front/styles/theme.ts":"12","/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/handlers.ts":"13","/home/ielizari/proyectos/tasker/src/front/application/existsDatabase.ts":"14","/home/ielizari/proyectos/tasker/src/api/application/dtos/dbToApiDto.ts":"15","/home/ielizari/proyectos/tasker/src/api/application/taskerRepository.tsx":"16","/home/ielizari/proyectos/tasker/src/front/infrastructure/views/home.component.tsx":"17","/home/ielizari/proyectos/tasker/src/front/infrastructure/views/tasks.view.component.tsx":"18","/home/ielizari/proyectos/tasker/src/front/infrastructure/views/worklog.view.component.tsx":"19","/home/ielizari/proyectos/tasker/src/front/infrastructure/views/setup-app.component.tsx":"20","/home/ielizari/proyectos/tasker/src/front/infrastructure/views/settings.component.tsx":"21","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/db-sync.tsx":"22","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/spinner.tsx":"23","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/header.tsx":"24","/home/ielizari/proyectos/tasker/src/api/domain/api-response.ts":"25","/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/handlers/worklogs.ts":"26","/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/handlers/tasks.ts":"27","/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/handlers/database.ts":"28","/home/ielizari/proyectos/tasker/src/lib/date.utils.ts":"29","/home/ielizari/proyectos/tasker/src/front/application/exportDatabase.ts":"30","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/logo.tsx":"31","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/loaddb.component.tsx":"32","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/tasks/task-list.component.tsx":"33","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/tasks/task-detail.component.tsx":"34","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/tasks/task-new.component.tsx":"35","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/worklog/worklog-list.component.tsx":"36","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/worklog/worklog-new.component.tsx":"37","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/worklog/worklog-detail.component.tsx":"38","/home/ielizari/proyectos/tasker/src/lib/orzkDatepicker/datepicker.js":"39","/home/ielizari/proyectos/tasker/src/front/application/importDatabase.ts":"40","/home/ielizari/proyectos/tasker/src/front/application/newDatabase.ts":"41","/home/ielizari/proyectos/tasker/src/front/application/deleteTask.ts":"42","/home/ielizari/proyectos/tasker/src/front/application/updateTask.ts":"43","/home/ielizari/proyectos/tasker/src/front/application/getWorklogList.ts":"44","/home/ielizari/proyectos/tasker/src/front/application/addWorklog.ts":"45","/home/ielizari/proyectos/tasker/src/front/application/updateWorklog.ts":"46","/home/ielizari/proyectos/tasker/src/front/application/getWorklog.ts":"47","/home/ielizari/proyectos/tasker/src/front/application/deleteWorklog.ts":"48","/home/ielizari/proyectos/tasker/src/front/domain/task-definitions.ts":"49","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/block.tsx":"50","/home/ielizari/proyectos/tasker/src/front/application/getTaskList.tsx":"51","/home/ielizari/proyectos/tasker/src/front/application/getTask.tsx":"52","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/block-actions.tsx":"53","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/modal.tsx":"54","/home/ielizari/proyectos/tasker/src/front/application/addTask.tsx":"55","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/icon-button.tsx":"56","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/worklog/worklog-sequence.component.tsx":"57","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/form/form.tsx":"58","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/job/job-new.component.tsx":"59","/home/ielizari/proyectos/tasker/src/front/application/addJob.ts":"60"},{"size":1106,"mtime":1609443649855,"results":"61","hashOfConfig":"62"},{"size":425,"mtime":1607530335951,"results":"63","hashOfConfig":"62"},{"size":119,"mtime":1607530335955,"results":"64","hashOfConfig":"62"},{"size":2784,"mtime":1609443649855,"results":"65","hashOfConfig":"62"},{"size":119,"mtime":1609443649826,"results":"66","hashOfConfig":"62"},{"size":12979,"mtime":1609506185358,"results":"67","hashOfConfig":"62"},{"size":2111,"mtime":1609443649826,"results":"68","hashOfConfig":"62"},{"size":785,"mtime":1609443649826,"results":"69","hashOfConfig":"62"},{"size":10505,"mtime":1609443649859,"results":"70","hashOfConfig":"62"},{"size":1759,"mtime":1609443649855,"results":"71","hashOfConfig":"62"},{"size":1322,"mtime":1609443649855,"results":"72","hashOfConfig":"62"},{"size":3981,"mtime":1609443649855,"results":"73","hashOfConfig":"62"},{"size":258,"mtime":1609443649826,"results":"74","hashOfConfig":"62"},{"size":469,"mtime":1609443649826,"results":"75","hashOfConfig":"62"},{"size":926,"mtime":1609443649814,"results":"76","hashOfConfig":"62"},{"size":1466,"mtime":1609443649826,"results":"77","hashOfConfig":"62"},{"size":228,"mtime":1609443649855,"results":"78","hashOfConfig":"62"},{"size":1041,"mtime":1609443649855,"results":"79","hashOfConfig":"62"},{"size":970,"mtime":1609443649855,"results":"80","hashOfConfig":"62"},{"size":1087,"mtime":1609443649855,"results":"81","hashOfConfig":"62"},{"size":160,"mtime":1609443649855,"results":"82","hashOfConfig":"62"},{"size":2218,"mtime":1609443649846,"results":"83","hashOfConfig":"62"},{"size":1412,"mtime":1609443649846,"results":"84","hashOfConfig":"62"},{"size":1770,"mtime":1609443649838,"results":"85","hashOfConfig":"62"},{"size":444,"mtime":1607712180534,"results":"86","hashOfConfig":"62"},{"size":4935,"mtime":1609506180510,"results":"87","hashOfConfig":"62"},{"size":3707,"mtime":1609443649826,"results":"88","hashOfConfig":"62"},{"size":2165,"mtime":1609443649826,"results":"89","hashOfConfig":"62"},{"size":3418,"mtime":1609443649859,"results":"90","hashOfConfig":"62"},{"size":447,"mtime":1609443649826,"results":"91","hashOfConfig":"62"},{"size":711,"mtime":1609443649838,"results":"92","hashOfConfig":"62"},{"size":5415,"mtime":1609443649846,"results":"93","hashOfConfig":"62"},{"size":4242,"mtime":1609443649850,"results":"94","hashOfConfig":"62"},{"size":11351,"mtime":1609443649846,"results":"95","hashOfConfig":"62"},{"size":14595,"mtime":1609443649850,"results":"96","hashOfConfig":"62"},{"size":4117,"mtime":1609443649850,"results":"97","hashOfConfig":"62"},{"size":8923,"mtime":1609443649850,"results":"98","hashOfConfig":"62"},{"size":8773,"mtime":1609443649850,"results":"99","hashOfConfig":"62"},{"size":58685,"mtime":1607530335951,"results":"100","hashOfConfig":"62"},{"size":1746,"mtime":1609443649838,"results":"101","hashOfConfig":"62"},{"size":470,"mtime":1609443649838,"results":"102","hashOfConfig":"62"},{"size":470,"mtime":1609443649826,"results":"103","hashOfConfig":"62"},{"size":609,"mtime":1609443649838,"results":"104","hashOfConfig":"62"},{"size":548,"mtime":1609443649834,"results":"105","hashOfConfig":"62"},{"size":610,"mtime":1609443649826,"results":"106","hashOfConfig":"62"},{"size":611,"mtime":1609443649838,"results":"107","hashOfConfig":"62"},{"size":433,"mtime":1609443649826,"results":"108","hashOfConfig":"62"},{"size":482,"mtime":1609443649826,"results":"109","hashOfConfig":"62"},{"size":666,"mtime":1609443649838,"results":"110","hashOfConfig":"62"},{"size":1436,"mtime":1609443649838,"results":"111","hashOfConfig":"62"},{"size":601,"mtime":1609443649826,"results":"112","hashOfConfig":"62"},{"size":421,"mtime":1609443649826,"results":"113","hashOfConfig":"62"},{"size":2767,"mtime":1609443649838,"results":"114","hashOfConfig":"62"},{"size":4390,"mtime":1609443649846,"results":"115","hashOfConfig":"62"},{"size":604,"mtime":1609443649826,"results":"116","hashOfConfig":"62"},{"size":2610,"mtime":1609443649838,"results":"117","hashOfConfig":"62"},{"size":4790,"mtime":1609506608523,"results":"118","hashOfConfig":"62"},{"size":19549,"mtime":1609443649838,"results":"119","hashOfConfig":"62"},{"size":4170,"mtime":1609506472243,"results":"120","hashOfConfig":"62"},{"size":581,"mtime":1609462402582,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1r8py3i",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"124"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"124"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"129"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"124"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"124"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"124"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ielizari/proyectos/tasker/src/index.tsx",[],["265","266"],"/home/ielizari/proyectos/tasker/src/reportWebVitals.ts",[],"/home/ielizari/proyectos/tasker/src/tests/mocks/browser.js",[],["267","268"],"/home/ielizari/proyectos/tasker/src/front/styles/globalStyles.ts",[],"/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/browser.js",[],"/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/browserdb.ts",["269","270","271"],"/home/ielizari/proyectos/tasker/src/front/App.tsx",["272"],"import React from 'react';\nimport './App.css';\nimport {  \n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { SyncStateContext } from './application/contexts/dbSyncContext'\n\nimport { Spinner } from './infrastructure/components/common/spinner'\nimport { Home } from './infrastructure/views/home.component'\nimport { Header } from './infrastructure/components/common/header'\nimport { DbSync } from './infrastructure/components/db-sync'\nimport { TasksView } from './infrastructure/views/tasks.view.component'\nimport { WorklogView } from './infrastructure/views/worklog.view.component'\nimport { SetupApp } from './infrastructure/views/setup-app.component'\nimport { Settings } from './infrastructure/views/settings.component'\n\nimport { existsDb } from './application/existsDatabase'\n\n\nfunction App() {\n  const syncCtx = React.useContext(SyncStateContext)\n  const {sync, setSync} = syncCtx\n  const [loading, setLoading] = React.useState<boolean>(false)\n  \n  React.useEffect(()=>{\n      setLoading(true)\n      existsDb().then(\n          result => {\n              if(!result.hasError){\n                  setSync({sync:true, existsDb: result.data})\n              }else{\n                  setSync({sync:true, existsDb: false})\n              }\n              setLoading(false)\n          },\n          error => {\n            console.log(error)\n            setSync({sync:true, existsDb: false})\n            setLoading(false)\n          }\n      )\n  }, [])\n\n  return (\n    <>\n    {loading ? <Spinner /> : ''}     \n\n    {!sync.existsDb ?\n      <SetupApp />\n    :\n      <>\n      <DbSync />\n      <Header/>\n      <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>    \n          <Route path=\"/settings\">\n            <Settings />\n          </Route>           \n          <Route path=\"/tasks\">\n            <TasksView />\n          </Route>\n          <Route path=\"/worklogs\">\n            <WorklogView />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n      </Switch>\n      </>\n    }\n    </>\n  );\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nexport default App;\n","/home/ielizari/proyectos/tasker/src/front/application/contexts/dbSyncContext.tsx",[],"/home/ielizari/proyectos/tasker/src/tests/mocks/handlers.ts",["273","274","275","276","277","278"],"import { rest } from 'msw'\nimport taskData from './tasks.json'\nimport { TaskDetail, TaskObject } from '../../front/domain/task-detail'\nimport { Worklog, WorklogObject} from '../../front/domain/worklog'\nimport { Job, JobObject } from '../../front/domain/job'\nimport { isEmpty } from 'lodash'\nimport  {Datepicker}  from '../../lib/orzkDatepicker/datepicker'\nimport { ApiResponseBuilder, ApiResponse} from '../../api/domain/api-response'\n\nexport const handlers = [\n    rest.post('http://localhost:3000/api/tasks',(req, res, ctx) => {       \n        const filters : Partial<TaskDetail> = req.body ? JSON.parse(req.body as string) : {}\n         \n        if(filters.title === 'Hacer la compra'){   \n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,taskData.tasks.filter((task)=>task.title === filters.title),false))\n            )\n        }else if(filters.title === 'Tarea que no existe'){\n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,[],false))\n            )\n        }else{ \n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,taskData.tasks,false))\n            )\n        }\n    }),\n    // Tarea inexistente\n    rest.get('http://localhost:3000/api/tasks/1111',(req, res, ctx) => {  \n        return res(\n            ctx.status(404, 'La tarea no existe'),\n            ctx.json(ApiResponseBuilder(200,{},true,'La tarea no existe'))\n        )         \n    }),\n    rest.get('http://localhost:3000/api/tasks/1',(req, res, ctx) => {          \n        const task: TaskDetail = {            \n            \"id\":\"1\",\n            \"parent\":\"\",\n            \"title\":\"Hacer la compra\",\n            \"description\": \"Comprar huevos, leche, cebollas\",\n            \"createdDate\": \"2020-11-10T10:45:01+0200\",\n            \"limitDate\": \"2020-12-01T10:45+0200\",\n            \"author\": \"Iñaki\",\n            \"authorId\": \"1\",\n            \"status\": \"1\",\n            \"priority\": \"3\",\n            \"tags\": [\"compra\",\"casa\",\"comida\"]            \n        }\n        const parentTask = null\n        const childTasks = []\n\n        const taskObject : TaskObject= {\n            task: task,\n            parentTask: parentTask,\n            childTasks: childTasks\n        }\n        \n        return res(\n            ctx.status(200),\n            ctx.json(ApiResponseBuilder(200,taskObject,false))\n        )        \n    }),\n    rest.post('http://localhost:3000/api/tasks/add',(req,res,ctx) =>{\n        const task: TaskDetail = req.body as TaskDetail        \n        \n        task.createdDate = \"2000-01-01T00:00:00+0200\"\n        const taskresponse: TaskObject = {\n            task: task,\n            childTasks: [],\n            parentTask: null\n        }\n        if(task.description === 'success'){\n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,taskresponse,false))\n            )\n        }else if(task.description == 'error'){\n            return res(\n                ctx.status(500),\n                ctx.json(ApiResponseBuilder(500,taskresponse,true,'Error al crear la tarea'))\n            )\n        }\n        \n    }),\n    \n    rest.put('http://localhost:3000/api/tasks/update', (req, res, ctx) => {\n        \n        const taskobject: TaskObject = {\n            task: null,\n            childTasks: [],\n            parentTask: null\n        }\n        taskobject.task = req.body as TaskDetail                                     \n        \n        return res(                \n            ctx.status(200),\n            ctx.json(ApiResponseBuilder(200,taskobject,false))            \n        )\n        \n    }),\n\n    rest.delete('http://localhost:3000/api/tasks/delete/1', (req,res,ctx) => {\n            const task: TaskDetail = {            \n                \"id\":\"1\",\n                \"parent\":\"\",\n                \"title\":\"Hacer la compra\",\n                \"description\": \"Comprar huevos, leche, cebollas\",\n                \"createdDate\": \"2020-11-10T10:45:01+0200\",\n                \"limitDate\": \"2020-12-01T10:45:01+0200\",\n                \"author\": \"Iñaki\",\n                \"authorId\": \"1\",\n                \"status\": \"1\",\n                \"priority\": \"3\",\n                \"tags\": [\"compra\",\"casa\",\"comida\"]            \n            }\n            \n            return res(\n                    ctx.status(200),\n                    ctx.json(ApiResponseBuilder(200,task,false))\n                )\n            \n        \n    }),\n\n    rest.post('http://localhost:3000/api/worklogs',(req, res, ctx) => {       \n        const filters : Partial<Worklog> = req.body ? JSON.parse(req.body as string) : {}\n        \n        if(filters.title === 'Compra 15-11-20'){\n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,taskData.worklogs.filter((worklog)=>worklog.title === filters.title),false))\n            )\n        }else if(filters.title === 'Parte que no existe'){\n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,[],false))\n            )\n        }else{\n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,taskData.worklogs,false))\n            )        \n        }\n    }),\n\n    rest.get('http://localhost:3000/api/worklogs/1',(req, res, ctx) => {     \n        const worklog: Worklog = {            \n            \"id\":\"1\",\n            \"createdDate\": \"05/11/2020 08:00\",\n            \"startDatetime\":\"05/11/2020 09:00\",\n            \"endDatetime\":\"05/11/2020 16:30\",\n            \"title\":\"Compra 05-11-20\",\n            \"tags\": []\n        }\n        const childJobs: Array<JobObject> = [\n            // {\n            //     \"id\":\"1\",\n            //     \"worklog\":\"1\",\n            //     \"task\":\"1\",\n            //     \"startDatetime\":\"2020-11-05T08:00:00.000Z\",\n            //     \"endDatetime\":\"2020-11-05T09:30:00.000Z\",\n            //     \"title\":\"Carnicería\",\n            //     \"description\":\"Jamón serrano, pechugas de pollo\",\n            //     \"type\":\"Análisis\",\n            //     \"tags\": [\"Jamón serrano\", \"pechugas de pollo\"]\n            // },\n            // {\n            //     \"id\":\"2\",\n            //     \"worklog\":\"1\",\n            //     \"task\":\"1\",\n            //     \"startDatetime\":\"2020-11-05T09:30:00.000Z\",\n            //     \"endDatetime\":\"2020-11-05T10:30:00.000Z\",\n            //     \"title\":\"Frutería\",\n            //     \"description\":\"Manzanas, Plátanos, Mandarinas\",\n            //     \"type\":\"Análisis\",\n            //     \"tags\": [\"Manzanas\", \"Plátanos\", \"Mandarinas\"]\n            // }\n        ]\n\n        const worklogObject : WorklogObject= {\n            worklog: worklog,\n            childJobs: childJobs\n        }\n\n        return res(\n            ctx.status(200),\n            ctx.json(ApiResponseBuilder(200,worklogObject,false))\n        )        \n    }),\n\n    rest.get('http://localhost:3000/api/worklogs/1111',(req, res, ctx) => {  \n        return res(\n            ctx.status(404, 'El parte no existe'),\n            ctx.json(ApiResponseBuilder(200,{},true,'El parte no existe'))\n        )         \n    }),\n\n    rest.delete('http://localhost:3000/api/worklogs/delete/1', (req,res,ctx) => {\n        const worklog: Worklog = {            \n            \"id\":\"1\",\n            \"createdDate\": \"2020-11-05T07:00:00.000Z\",\n            \"startDatetime\":\"2020-11-05T08:00:00.000Z\",\n            \"endDatetime\":\"2020-11-05T15:30:00.000Z\",\n            \"title\":\"Compra 05-11-20\",\n            \"tags\": []\n        }\n        \n        return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,worklog,false))\n            )\n    }),\n\n    rest.post('http://localhost:3000/api/worklogs/add',(req,res,ctx) =>{\n        const worklog: Worklog = req.body as Worklog\n        \n        worklog.createdDate = \"2000-01-01T00:00:00+0200\"\n        const worklogresponse: WorklogObject = {\n            worklog: worklog,\n            childJobs: []\n        }\n        if(worklog.title === 'Parte success'){\n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,worklogresponse,false))\n            )\n        }else if(worklog.title == 'Parte error'){\n            return res(\n                ctx.status(500),\n                ctx.json(ApiResponseBuilder(500,worklog,true,'Error al crear el parte'))\n            )\n        }        \n    }),\n\n    rest.put('http://localhost:3000/api/worklogs/update', (req, res, ctx) => {\n        \n        const worklogobject: WorklogObject = {\n            worklog: null,\n            childJobs: [],\n        }\n        worklogobject.worklog = req.body as Worklog         \n        \n        return res(                \n            ctx.status(200),\n            ctx.json(ApiResponseBuilder(200,worklogobject,false))            \n        )\n        \n    }),\n\n    rest.get('http://localhost:3000/api/db/exists', (req, res, ctx) => {\n        return res(\n            ctx.status(200),\n            ctx.json(ApiResponseBuilder(200,true,false))\n        )\n    })\n/*\n    rest.get('http://localhost:3000/api/db/export', (req,res,ctx) => {\n        try{\n            const db: FileDownload = getTaskerRepository().exportDb()\n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,db,false))\n            )\n        }catch(e){\n            return res(\n                ctx.status(500),\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\n            )\n        }\n    }),\n\n    rest.post('http://localhost:3000/api/db/import', (req,res,ctx) => {\n        try{\n            const dbfile = req.body ? req.body as Schema: null \n            const db: boolean = getTaskerRepository().importDb(dbfile)\n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,db,false))\n            )\n        }catch(e){\n            return res(\n                ctx.status(500),\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\n            )\n        }\n    }),\n\n    rest.post('http://localhost:3000/api/db/new', (req,res,ctx) => {\n        try{\n            const db: boolean = getTaskerRepository().newDb()\n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,db,false))\n            )\n        }catch(e){\n            return res(\n                ctx.status(500),\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\n            )\n        }\n    })*/\n]","/home/ielizari/proyectos/tasker/src/front/styles/reset.ts",[],"/home/ielizari/proyectos/tasker/src/front/styles/reboot.ts",[],"/home/ielizari/proyectos/tasker/src/front/styles/theme.ts",[],"/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/handlers.ts",[],"/home/ielizari/proyectos/tasker/src/front/application/existsDatabase.ts",[],"/home/ielizari/proyectos/tasker/src/api/application/dtos/dbToApiDto.ts",[],"/home/ielizari/proyectos/tasker/src/api/application/taskerRepository.tsx",[],"/home/ielizari/proyectos/tasker/src/front/infrastructure/views/home.component.tsx",[],"/home/ielizari/proyectos/tasker/src/front/infrastructure/views/tasks.view.component.tsx",[],"/home/ielizari/proyectos/tasker/src/front/infrastructure/views/worklog.view.component.tsx",[],"/home/ielizari/proyectos/tasker/src/front/infrastructure/views/setup-app.component.tsx",[],"/home/ielizari/proyectos/tasker/src/front/infrastructure/views/settings.component.tsx",[],"/home/ielizari/proyectos/tasker/src/front/infrastructure/components/db-sync.tsx",["279","280"],"import React from 'react'\nimport styled from 'styled-components'\nimport { SyncStateContext } from '../../application/contexts/dbSyncContext'\nimport { exportDb } from '../../application/exportDatabase'\n\nconst SyncWarningContainer = styled.div`\n    background-color: red;\n    padding: 1rem;\n    text-align: center;\n    color: #fff;\n`\n\nconst exportDB = () => {              \n    \n    exportDb().then(\n        (result) => {\n            if(!result.hasError){\n                let blob = new Blob([JSON.parse(result.data.blob)], { type: 'text/plain;charset=utf-8;' })\n                let exportedFilename = result.data.filename\n                \n                if (navigator.msSaveBlob) { // IE 10+\n                    navigator.msSaveBlob(blob, exportedFilename)\n                } else {\n                    var link = document.createElement('a')\n                    if (link.download !== undefined) { // feature detection\n                        // Browsers that support HTML5 download attribute\n                        var url = URL.createObjectURL(blob)\n                        link.setAttribute('href', url)\n                        link.setAttribute('download', exportedFilename)\n                        link.style.visibility = 'hidden'\n                        document.body.appendChild(link)\n                        link.click()\n                        document.body.removeChild(link)\n                    }\n                }\n            }else{\n                console.log(result.error)\n            }\n        },\n        (error) => {\n            console.log(error)\n        }\n    )\n}\n\nconst importDB = () => {\n\n}\n\nexport const DbSync = () => {\n    const syncCtx = React.useContext(SyncStateContext)\n    const {sync, setSync} = syncCtx\n  \n    React.useEffect(()=>{\n        setSync({sync:true})\n    },[])\n    \n    const handleExport = () => {\n        exportDB()\n        setSync({sync:true})\n    }\n    \n    React.useEffect(()=>{\n        //console.log(sync)\n    },[sync])\n\n    return (\n        <>\n        {!sync.sync &&\n            <SyncWarningContainer>\n                Necesita sincronización\n                <button onClick={handleExport}>Download</button>\n            </SyncWarningContainer>\n        }\n        </>\n    )\n}","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/spinner.tsx",["281","282"],"import React from 'react'\nimport styled from 'styled-components'\nimport { FaSpinner } from 'react-icons/fa'\nimport { color, common, font } from '../../../styles/theme'\n\nconst Container = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0,0,0,0.6);\n`\nconst SpinnerBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 3rem;\n    background-color: ${color.white} !important;\n    border-style: solid;\n    border-width:2px;\n    border-color: ${color.orange};\n    color: ${color.darkGrey};\n    ${common.roundedCorners()};\n`\nconst SpinnerIcon = styled(FaSpinner)`\n    margin: 0 auto;\n    margin-bottom: 1rem;\n`\n\nconst Message = styled.div`\n    color: ${color.darkGrey}\n    margin-top: 1rem;\n    ${font.h3()};\n`\n\nexport const Spinner = (props) => {\n    const [message,setMessage] = React.useState<string>('Cargando ...')\n    React.useEffect(() => {\n        props.message? setMessage(props.message) : setMessage('Cargando ...')\n    },[])\n\n    return (\n        <Container>\n            <SpinnerBox aria-label=\"loading\">\n                <SpinnerIcon size={75} className='icon-spin' />\n                <Message>Cargando...</Message>\n            </SpinnerBox>            \n        </Container>\n    )\n}","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/header.tsx",[],"/home/ielizari/proyectos/tasker/src/api/domain/api-response.ts",[],"/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/handlers/worklogs.ts",["283","284"],"/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/handlers/tasks.ts",["285"],"import { rest } from 'msw'\nimport { isEmpty } from 'lodash'\nimport { TaskDetail, TaskObject } from '../../../../domain/task'\nimport { getTaskerRepository, FileDownload } from '../../../../application/taskerRepository'\nimport { ApiResponse, ApiResponseBuilder } from '../../../../domain/api-response'\n\nexport const taskHandlers = [\n    rest.post('http://localhost:3000/api/tasks',(req, res, ctx) => { \n        const filters = req.body ? req.body as Partial<TaskDetail> : {}  \n        const tasks = getTaskerRepository().getTasks(filters)\n        \n        const response : ApiResponse = {\n            status: 200,\n            hasError: false,\n            data: tasks\n        } \n        return res(\n            ctx.status(200),\n            ctx.json(response)\n        )\n    }),\n    rest.get('http://localhost:3000/api/tasks/:taskid',(req, res, ctx) => {  \n        const taskid = req.params.taskid || '';\n\n        const task = getTaskerRepository().getTaskById(taskid)\n        \n        if(task.task){            \n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,task,false))\n            )\n        }else{\n            return res(\n                ctx.status(404, 'La tarea no existe'),\n                ctx.json(ApiResponseBuilder(404,{},true,'La tarea no existe'))\n            )            \n        }\n    }),\n\n    rest.post('http://localhost:3000/api/tasks/add',(req,res,ctx) =>{\n        try{\n            const task: TaskDetail | null = req.body ? req.body as TaskDetail : null\n\n            if(isEmpty(task.id)) {\n                task.id = getTaskerRepository().newId('tasks')\n            }else{\n                throw new Error('Una tarea nueva no puede contener un valor en el campo \"id\"')\n            }\n            \n            task.createdDate = new Date().toString()\n            let result = getTaskerRepository().addTask(task)\n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,result,false))\n            )\n        }catch(e){\n            return res(\n                ctx.status(500),\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\n            )\n        }\n    }),\n\n    rest.delete('http://localhost:3000/api/tasks/delete/:taskid', (req,res,ctx) => {\n        try{\n            const taskid = req.params.taskid || '';\n            if(taskid === ''){\n                return res(\n                    ctx.status(400),\n                    ctx.json(ApiResponseBuilder(400,{},true,'Id de tarea no válida'))\n                )\n            }else{            \n                let result = getTaskerRepository().deleteTask(taskid)\n                return res(\n                    ctx.status(200),\n                    ctx.json(ApiResponseBuilder(200,result,false))\n                )\n            }\n        }catch(e){\n            return res(\n                ctx.status(500),\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\n            )\n        }\n    }),\n\n    rest.put('http://localhost:3000/api/tasks/update', (req, res, ctx) => {\n        try{\n            const task: TaskDetail | null = req.body ? req.body as TaskDetail : null\n            if(isEmpty(task.id)) {\n                throw new Error('Es necesario proporcionar el id de la tarea a editar')\n            }\n                        \n            let result: TaskObject = getTaskerRepository().updateTask(task)\n            return res(\n                ctx.status(200),\n                ctx.json(ApiResponseBuilder(200,result,false))\n            )\n        }catch(e){\n            return res(\n                ctx.status(500),\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\n            )\n        }\n    }),\n]","/home/ielizari/proyectos/tasker/src/api/infrastructure/repositories/browser/handlers/database.ts",[],"/home/ielizari/proyectos/tasker/src/lib/date.utils.ts",[],"/home/ielizari/proyectos/tasker/src/front/application/exportDatabase.ts",[],"/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/logo.tsx",[],"/home/ielizari/proyectos/tasker/src/front/infrastructure/components/loaddb.component.tsx",["286","287","288","289"],"import React from 'react'\nimport styled from 'styled-components'\nimport '../../App.css';\nimport { font, color } from '../../styles/theme';\nimport { Spinner } from '../components/common/spinner'\nimport { BlockContainer, BlockHeaderComponent} from '../components/common/block'\nimport { FormBuilder } from '../components/common/form/form'\nimport { FaCheck, FaArrowLeft} from 'react-icons/fa'\nimport { importDb, importForm } from '../../application/importDatabase'\nimport { newDb } from '../../application/newDatabase'\nimport { SyncStateContext } from '../../application/contexts/dbSyncContext'\n\nconst SetupButtons = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n    padding: 1.5rem;\n`\nconst Button = styled.button`\n    padding: 1rem;\n    justify-content: center;\n    background-color: ${color.lightBlue};\n    color: ${color.white};\n    min-width: 30%;\n`\nexport const LoadDB = () => {\n    const syncCtx = React.useContext(SyncStateContext)\n    const {setSync} = syncCtx\n\n    const [title, setTitle] = React.useState<string>('Base de datos')\n    const [error, setError] = React.useState<Error | null>(null)\n    const [loading, setLoading] = React.useState<boolean>(false)\n    const [submitSuccess, setSubmitSuccess] = React.useState<boolean>(false)\n    const [submitError, setSubmitError] = React.useState<Error | null>(null)\n    const [setupView, setSetupView] = React.useState<string>('select')\n\n    const renderView = (): string => {\n        if(setupView === 'newDB'){\n            return 'newDB'\n        }else if(setupView === 'importDB'){\n            return 'importDB'\n        }else{\n            return 'select'\n        }\n    } \n    \n    const backButton = () => {\n        setSetupView('select')\n    }\n\n    const newEmptyDatabase = () => {\n        setLoading(true)\n        newDb().then(\n            result => {\n                setLoading(false)\n                if(result.hasError){\n                    setSubmitError(error)                    \n                }else{\n                    setSubmitSuccess(true)\n                    setSync({existsDb: true})\n                    \n                }                \n            },\n            error => {\n                setSubmitError(error)\n                setLoading(false)\n            }\n        )\n    }\n    let formItems = \n         [            \n            {\n                type: 'file',\n                id: 'dbfile',\n                label: 'Importar database'\n            },            \n            {\n                type: 'buttons',\n                buttons: [\n                    {        \n                        id: 'submitBtn',\n                        type: 'submit',\n                        icon: FaCheck,\n                        label: 'Guardar',\n                        className: 'form-button-submit button-icon'\n                    },\n                    {        \n                        id: 'cancelBtn',\n                        type: 'button',\n                        icon: FaArrowLeft,\n                        label: 'Volver',\n                        onClick: backButton,\n                        className: 'button-icon'\n                    }\n                ]\n            }            \n         ]\n\n    let initialValues = {dbfile: null}\n\n    \n    const validate = (values: Partial<importForm>) => {\n        const errors: any = {}\n        if(!values.dbfile){\n            errors.dbfile = 'Debes seleccionar un archivo'\n        }\n       \n        return errors\n    }\n\n    const onSubmit = (values: importForm) => {\n        setLoading(true)\n        importDb(values).then(\n            result => {\n                setLoading(false)\n                if(result.hasError){\n                    setSubmitError(error)\n                }else{\n                    setSubmitSuccess(true)\n                    setSync({existsDb: true})\n                }                \n            },\n            error => {\n                setSubmitError(error)\n                setLoading(false)\n            }\n        )\n    }\n    return (\n        <>            \n            <BlockContainer> \n            <BlockHeaderComponent \n                title=\"Crear base de datos\"\n            />  \n            {loading ? <Spinner /> : ''}            \n           \n            {submitSuccess &&                \n                <div aria-label='success-message' className='message-success'>                    \n                    La base de datos se ha importado correctamente\n                </div>  \n            }\n            {submitError &&\n                <div aria-label='error-message' className='message-error'>{submitError.message}</div>\n            }\n            \n            {renderView() === 'select' &&\n                <SetupButtons>\n                    <Button onClick={newEmptyDatabase}>Nueva base de datos</Button>\n                    <Button onClick={() => {setSetupView('importDB')}}>Importar base de datos</Button>\n                </SetupButtons>\n                \n            }\n\n            {renderView() === 'importDB' &&\n                <FormBuilder \n                    key = \"setupForm\"\n                    formView = \"form\"\n                    formItems = {formItems}\n                    initValues = {initialValues}\n                    validation = {validate}\n                    onSubmit = {onSubmit}\n                />\n            }\n            \n        </BlockContainer>\n        </>\n    )\n}","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/tasks/task-list.component.tsx",["290"],"import React from 'react'\nimport { TaskItem } from '../../../domain/task-list'\nimport { getTaskList } from '../../../application/getTaskList'\nimport styled from 'styled-components'\nimport { color, common } from '../../../styles/theme';\nimport { Link } from \"react-router-dom\";\n\nimport { Spinner } from '../common/spinner'\n\nimport { BlockHeaderComponent, BlockContainer, BlockEmptyComponent } from '../common/block'\nimport { FaPlus, FaFilter } from 'react-icons/fa'\nimport { TaskDetail } from '../../../domain/task-detail'\n\n\nconst ListItem = styled.li`\n    list-style: none;\n    padding: 1rem;\n    margin: 1rem;\n    border-style: solid;\n    border-width: 1px;\n    border-color: ${color.orange};\n    background-color: ${color.orange};\n    color: ${color.white};\n    ${common.roundedCorners()};\n`\n\nconst TaskListItem = (props: {task: TaskItem } ) => {    \n    \n    return(\n        <ul>\n            <Link to={`/tasks/${props.task.id}`}>\n                <ListItem>{props.task.title}</ListItem>\n            </Link>\n        </ul>\n    )\n}\nexport const TaskListComponent = (props) => {\n    const [tasks, setTasks] = React.useState<Array<TaskItem>>([])\n    const [error, setError] = React.useState<Error | null>(null)\n    const [loading, setLoading] = React.useState<boolean>(false)\n    const [actions, setActions] = React.useState<Array<any>>([])\n    const [filters, setFilters ] = React.useState<Partial<TaskDetail>>(props.filter ||{parent: ''})\n\n    \n\n    const searchHandler = (values) => {\n        const filter: Partial<TaskDetail> = {\n            parent: ''\n        }\n        if(values.actionBarSearch){\n            filter.title = values.actionBarSearch\n        }\n        setFilters(filter)\n    }\n\n    const validation = (values) => {\n        const errors = []\n        return errors\n    }\n\n    React.useEffect(() => {  \n        let cancelled = false\n        setLoading(true)\n        setActions(actionItems)\n        getTaskList(filters)\n            .then(\n                (result) => {\n                    if(!cancelled){\n                        if(result.hasError){\n                            setError(new Error(result.error));\n                            setTasks([])\n                        }else{\n                            setTasks(result.data); \n                            setError(null);\n                        }\n                        \n                        setLoading(false)    \n                    }\n                },\n                (error) => {\n                    if(!cancelled){\n                        setError(error)\n                        setLoading(false)   \n                    } \n                }\n            )\n        \n        return () => cancelled = true\n    },[filters])    \n    \n    let actionItems = [\n        {\n            icon: FaPlus,\n            text: 'Nueva tarea',\n            route: `/tasks/new`,\n            type: 'link'\n        },\n        {\n            view: 'actionBar',\n            type: 'form',         \n            key: 'actionBarFilterForm',   \n            initValues: {actionBarSearch: ''},\n            onSubmit: searchHandler,\n            validation: validation,\n            items: [\n                {\n                    type: 'text',\n                    id: 'actionBarSearch',\n                    placeholder: 'Buscar...'\n                },\n                {        \n                    id: 'filterBtn',\n                    type: 'submit',\n                    icon: FaFilter,\n                    label: 'Filtrar',\n                    className: 'button-icon'\n                }\n            ]\n            \n        },\n        \n    ]\n     return (\n        <BlockContainer>\n            <BlockHeaderComponent \n                title='Tareas'\n                actions={actions}\n            />\n            {loading && <Spinner />}            \n            \n            {tasks.length ? \n                (error!==null ? \n                    <div>Error: {error.message?error.message:'unknown error'}</div> \n                    :\n                    tasks.map((item: TaskItem) => (\n                        <TaskListItem key={item.id} task={item} />\n                    ))\n                )\n                :\n                <BlockEmptyComponent />\n            }\n        </BlockContainer>\n        )\n        \n}","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/tasks/task-detail.component.tsx",["291","292","293","294","295","296"],"import React, { Children } from 'react'\nimport styled from 'styled-components'\nimport { color, common } from '../../../styles/theme'\nimport { useParams} from 'react-router-dom'\nimport { TaskDetail, TaskObject } from '../../../domain/task-detail'\nimport { TaskPriority, TaskStatus, ConstObjectToSelectOptionsArray } from '../../../domain/task-definitions'\nimport { getTask } from '../../../application/getTask'\nimport { deleteTask } from '../../../application/deleteTask'\nimport { Spinner } from '../common/spinner'\nimport { BlockActions } from '../common/block-actions'\nimport { FaEdit, FaTrashAlt, FaPlus } from 'react-icons/fa'\nimport { Modal } from '../common/modal'\nimport { Link } from 'react-router-dom'\nimport { dateToFormattedDate } from '../../../../lib/date.utils'\nimport { BlockContainer, BlockHeaderComponent } from '../common/block'\n \nconst TaskDetailContainer = styled.ul`\n`;\nconst TaskDetailKey = styled.div`\n    font-weight: bold;\n    color: ${color.black};\n    flex-basis: 10rem;\n`;\nconst TaskDetailValue = styled.div`\n    color: ${color.black}\n`;\n\nconst TaskDetailItem = styled.li`\n    display: flex;\n    flex-direction: vertical;\n    margin: 1rem;\n`;\n\nconst ErrorMessage = styled.div`\n    background-color: ${color.lightRed};\n    padding: 1rem;\n    text-align: center;\n    color: ${color.white};\n    margin: 0.5rem;\n`;\n\nconst TaskChildrenContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n\n    & a{\n        display: inline-flex;\n        background-color: ${color.orange};\n        ${common.roundedCorners()};\n        padding: 0.5rem;\n    }\n\n    & a:hover {\n        background-color: ${color.lightOrange};\n    }    \n`\n\nconst TaskTagsContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 0.5rem;\n\n    & div{\n        display: inline-flex;\n        background-color: rgba(0,0,0,0.7);\n        color: ${color.white};        \n        ${common.roundedCorners()};\n        padding: 0.5rem;\n    }\n`\n\nexport interface TaskProps {\n    taskid: string,\n}\nexport const TaskDetailComponent = (props) => {\n    let { taskid } = useParams<TaskProps>()\n   \n    const [task, setTask] = React.useState<TaskObject | null>(null)        \n    const [error, setError] = React.useState<Error | null>(null)\n    const [deleteSuccess, setDeleteSuccess] = React.useState<string | null>(null)\n    const [loading, setLoading] = React.useState<boolean>(false)\n    const [actions, setActions] = React.useState<Array<any>>([])\n    const [isOpened, setOpened] = React.useState(false)\n    const [statusLabel, setStatusLabel ] = React.useState<string>('')\n    const [priorityLabel, setPriorityLabel ] = React.useState<string>('')\n    const [confirmedDelete, setConfirmedDelete ] = React.useState<boolean>(false)\n    \n    const confirmDelete = () =>{\n        openModal()        \n    }\n    const handleDelete = () => {\n        setOpened(false)\n        setLoading(true)\n        setConfirmedDelete(true)   \n    }\n\n    const childHandler = () => {\n\n    }\n\n    React.useEffect(() => {\n        let cancelled = false\n        if(confirmedDelete){\n            deleteTask(taskid)\n            .then(\n                result => {\n                    if(!cancelled){\n                        if(!result.hasError){\n                            setDeleteSuccess('La tarea se ha eliminado con éxito')\n                        }else{\n                            setError(new Error('Ha ocurrido un error al eliminar la tarea.'))\n                        }\n                        setLoading(false)\n                    }\n                },\n                error => {\n                    console.log(\"Error: \", error)\n                    setError(new Error('Ha ocurrido un error al eliminar la tarea.'))\n                    setLoading(false)\n                }\n            )\n        }\n\n        return () => cancelled = true;\n    },[confirmedDelete])\n\n    const closeModal = () => {  setOpened(false)}\n    const openModal = () => { setOpened(true)}\n\n    let actionItems = [\n        {\n            icon: FaEdit,\n            text: 'Editar',\n            route: `/tasks/edit/${taskid}`,\n            type: 'link'\n        },\n        {\n            icon: FaTrashAlt,\n            text: 'Borrar',\n            type: 'button',\n            handler: confirmDelete\n        },\n        {\n            icon: FaPlus,\n            text: 'Subtarea',\n            route: `/tasks/new/${taskid}`,\n            type: 'link'\n        }\n    ]\n\n    React.useEffect(() => {\n        let cancelled = false;\n        setActions(actionItems)\n        setLoading(true)\n        getTask(taskid)\n            .then(\n                (result) => {\n                    if(!cancelled){\n                        if(result.hasError){\n                            setError(new Error(result.error))\n                            setTask(null)\n                        }else{\n                            let status = ConstObjectToSelectOptionsArray(TaskStatus).filter(i => i.value === result.data.task.status)\n                            setStatusLabel(status.length ? status[0].label : '')\n                            let priority = ConstObjectToSelectOptionsArray(TaskPriority).filter(i => i.value === result.data.task.priority)\n                            setPriorityLabel(priority.length ? priority[0].label : '')\n                            setTask(result.data) \n                            setError(null)\n                        }\n                        \n                        setLoading(false)  \n                    }\n                },\n                (error) => {\n                    if(!cancelled){\n                        setError(error)\n                        setTask(null)\n                        setLoading(false)\n                    }\n                }\n            )\n        \n            return () => cancelled = true\n    },[taskid])\n    return (        \n        <BlockContainer>\n            <Modal \n                title=\"Eliminar tarea\" \n                isOpened={isOpened} \n                onClose={closeModal}\n                content=\"Esta acción es irreversible. ¿Desea continuar?\"\n                type=\"confirm\"\n                action={handleDelete} />\n            {loading ? <Spinner /> : ''}\n            <h3 className=\"section-title\">Detalle de tarea</h3>\n            {deleteSuccess !== null ? \n                <div aria-label='success-message' className='message-success'>{deleteSuccess} <Link to={'/tasks'}>Volver a la lista</Link></div>\n                :\n                <>\n                <BlockActions \n                    actions={actions}\n                />\n                {error !== null ?\n                    <ErrorMessage>{error.message}</ErrorMessage>\n                    :\n                    (task && task.task)?                \n                        <TaskDetailContainer> \n                            <TaskDetailItem>\n                                <TaskDetailKey>Título:</TaskDetailKey>\n                                <TaskDetailValue>{task.task.title}</TaskDetailValue>\n                            </TaskDetailItem>\n                            <TaskDetailItem>\n                                <TaskDetailKey>Descripción:</TaskDetailKey>\n                                <TaskDetailValue>{task.task.description}</TaskDetailValue>\n                            </TaskDetailItem>\n                            <TaskDetailItem>\n                                <TaskDetailKey>Author:</TaskDetailKey>\n                                <TaskDetailValue>{task.task.author}</TaskDetailValue>\n                            </TaskDetailItem>\n                            <TaskDetailItem>\n                                <TaskDetailKey>Estado:</TaskDetailKey>\n                                <TaskDetailValue>{statusLabel}</TaskDetailValue>\n                            </TaskDetailItem>\n                            <TaskDetailItem>\n                                <TaskDetailKey>Prioridad:</TaskDetailKey>\n                                <TaskDetailValue>{priorityLabel}</TaskDetailValue>\n                            </TaskDetailItem>\n                            <TaskDetailItem>\n                                <TaskDetailKey>Creada:</TaskDetailKey>\n                                <TaskDetailValue>{task.task.createdDate ? dateToFormattedDate(new Date(task.task.createdDate)) : '-'}</TaskDetailValue>\n                            </TaskDetailItem>\n                            <TaskDetailItem>\n                                <TaskDetailKey>Fecha límite:</TaskDetailKey>\n                                <TaskDetailValue>{task.task.limitDate ? dateToFormattedDate(new Date(task.task.limitDate)) : '-'}</TaskDetailValue>\n                            </TaskDetailItem>                            \n                            <TaskDetailItem>\n                                <TaskDetailKey>Tags:</TaskDetailKey>\n                                <TaskDetailValue>\n                                {task.task.tags.length ?\n                                    <TaskTagsContainer>\n                                    {\n                                        task.task.tags.map((tag) => {\n                                            return <div key={tag}>{tag}</div>\n                                        })\n                                    }\n                                    </TaskTagsContainer> \n                                    :\n                                    '-'\n                                }               \n                                </TaskDetailValue>\n                            </TaskDetailItem>\n                            <TaskDetailItem>\n                                <TaskDetailKey>Tarea padre:</TaskDetailKey>\n                                <TaskDetailValue>\n                                    {task.parentTask ?\n                                        <TaskChildrenContainer>\n                                            <Link to={`${task.parentTask.id}`}>{task.parentTask.title}</Link>\n                                        </TaskChildrenContainer>\n                                        :\n                                        '-'\n                                    }\n                                </TaskDetailValue>\n                            </TaskDetailItem>\n                            <TaskDetailItem>\n                                <TaskDetailKey>Subtareas:</TaskDetailKey>\n                                <TaskDetailValue>\n                                {task.childTasks.length ?\n                                    <TaskChildrenContainer>\n                                    {\n                                        task.childTasks.map((child) => {\n                                            return <Link to={`${child.id}`} key={child.title}>{child.title}</Link>\n                                        })\n                                    }\n                                    </TaskChildrenContainer> \n                                    :\n                                    '-'\n                                }                                \n                                </TaskDetailValue>\n                            </TaskDetailItem>                           \n                        </TaskDetailContainer>\n                        \n                    :   \n                        <div></div>\n                }\n                </>\n            }    \n                \n        </BlockContainer>\n    )   \n}","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/tasks/task-new.component.tsx",["297","298","299","300","301","302","303","304"],"import React from 'react'\nimport styled from 'styled-components'\nimport { color, common } from '../../../styles/theme';\nimport { FormWrapper, FormDateInput,FormSelect,FormTextInput, FormButtons} from '../common/form/form'\nimport { Formik, Form, Field, useField } from 'formik'\nimport { TaskDetail } from '../../../domain/task-detail'\nimport { TaskStatus, TaskPriority, ConstObjectToSelectOptionsArray } from '../../../domain/task-definitions'\nimport { addTask } from '../../../application/addTask'\nimport { getTask } from '../../../application/getTask'\nimport { updateTask } from '../../../application/updateTask'\nimport { Link, useParams } from 'react-router-dom'\nimport { FaCheck, FaTimes, FaRedo, FaCalendar} from 'react-icons/fa'\nimport { IconButton, IconLink } from '../common/icon-button'\nimport { Spinner } from '../common/spinner'\nimport { BlockContainer, BlockHeaderComponent} from '../common/block'\nimport { SyncStateContext} from '../../../application/contexts/dbSyncContext'\n\nimport  {Datepicker}  from '../../../../lib/orzkDatepicker/datepicker'\nimport '../../../../lib/orzkDatepicker/datepicker.css'\n\n\nconst emptyTask: TaskDetail = {\n    id: '',\n    title: '',\n    description: '',    \n    parent: '',    \n    createdDate: '',\n    limitDate: '',\n    author: '',\n    authorId: '',\n    status: TaskStatus.pending.value,\n    priority: TaskPriority.low.value,\n    tags: []\n}\n\n\n  const ParentTaskReference = styled(Link)`\n        display: flex;\n        background-color: ${color.semiLightGrey};\n        padding: 1rem;\n        margin: 1rem;\n        color: ${color.black} !important;\n        border-style: solid;\n        border-width: 1px;\n        boder-color: ${color.blue};\n        ${common.roundedCorners()};        \n  `\n\n  export interface TaskProps {\n    taskid: string,\n}\n\nexport const TaskNewComponent = (props) => {\n    let { taskid } = useParams<TaskProps>()\n\n    const syncCtx = React.useContext(SyncStateContext)\n    const {setSync} = syncCtx\n\n    const [dpLimit,setDpLimit] = React.useState<Datepicker | null>(null)\n    const [limitDate, setLimitDate] = React.useState<string>('')\n    const [submitSuccess, setSubmitSuccess] = React.useState(null)\n    const [submitError, setSubmitError] = React.useState<Error | null>(null)\n    const [mode, setMode] = React.useState(props.mode || 'new')\n    const [task, setTask] = React.useState<TaskDetail | null>(null)\n    const [error, setError] = React.useState<Error | null>(null)\n    const [loading, setLoading] = React.useState<boolean>(false)\n    const [title, setTitle] = React.useState<string>('Nueva tarea')\n    const [parentTask, setParentTask] = React.useState<TaskDetail | null>(null)\n    \n    React.useEffect(()=> {\n        if(mode === 'edit') setTitle('Editar tarea')\n        else if(mode === 'child') setTitle('Nueva subtarea')\n        else setTitle('Nueva tarea')\n    },[mode])\n\n    React.useEffect(() => {        \n        let dp = new Datepicker('limitDate','FechaLimite', {lang:'es'})\n        dp.onSubmit = () => {   \n            setLimitDate(dp.getFullDateString())         \n            dp.printDate();\n         }          \n\n        if(task && task.limitDate !== '' && new Date(task.limitDate)){\n            dp.setDate(new Date(task.limitDate))\n        }\n        setDpLimit(dp)\n\n    },[task])\n\n    React.useEffect(() => {   \n        if(dpLimit && dpLimit.getDate() !== null){    \n            setLimitDate(dpLimit.getFullDateString())\n        }\n    },[dpLimit])\n\n    React.useEffect(()=> {   \n        let cancelled = false    \n        if(taskid){\n            setLoading(true)\n            getTask(taskid)\n            .then(\n                (result) => { \n                    if(!cancelled){ \n                        if(result.hasError){\n                            setError(new Error(result.error))\n                            setTask(null)\n                        }else{\n                            if(mode === 'edit'){    \n                                setTask(result.data.task) \n                            }else{\n                                setParentTask(result.data.task)\n                                emptyTask.parent = result.data.task.id\n                                setTask(emptyTask)\n                            }\n                            setError(null)\n                            setSubmitError(null)\n                        }\n                    \n                        setLoading(false) \n                    }\n                },\n                (error) => {\n                    setSubmitSuccess(null)\n                    setSubmitError(null)\n                    setError(error)\n                    setTask(null)\n                    setLimitDate('')\n                    setLoading(false)\n                }\n            )        \n        }else{\n            setTask(emptyTask)\n        }  \n        return () => cancelled = true    \n    },[])\n\n    const dateHandler = () => {\n        dpLimit.show()\n    }\n\n    const statusItems = ConstObjectToSelectOptionsArray(TaskStatus)\n    const priorityItems = ConstObjectToSelectOptionsArray(TaskPriority)\n    return (        \n        <BlockContainer> \n            <BlockHeaderComponent \n                title={title}\n            />  \n            {loading ? <Spinner /> : ''}            \n            {submitSuccess &&                \n                <div aria-label='success-message' className='message-success'>                    \n                    La {mode=='child' ? 'subtarea' : 'tarea'} <Link to={'/tasks/'+ submitSuccess.id}>'{submitSuccess.title}'</Link> ha sido {mode === 'new' ? 'creada':'editada'} con éxito.\n                </div>  \n            }\n            {submitError &&\n                <div aria-label='error-message' className='message-error'>{submitError.message}</div>\n            }\n            {parentTask &&\n                <ParentTaskReference to={`/tasks/${parentTask.id}`}>\n                    Parent: {parentTask.title}\n                </ParentTaskReference>\n            }\n            {task &&\n                <Formik\n                    enableReinitialize\n                    initialValues={task}               \n                    validate = {values => {\n                        const errors : Partial<TaskDetail> = {}\n                        \n                        if(!values.title){                        \n                            errors.title = 'Campo obligatorio'\n                        }                    \n                        if(!values.author){\n                            errors.author = 'Campo obligatorio'\n                        }\n                        if(!values.status){\n                            errors.status = 'Campo obligatorio'\n                        }\n                        if(!values.priority){\n                            errors.priority = 'Campo obligatorio'\n                        }\n                        \n                        let datetime = values.limitDate.split(\" \")\n                        if(datetime.length > 0 && datetime.length !== 11 && datetime[0] !== ''){\n                            if(!datetime[0].match(/^(((0[1-9]|[12]\\d|3[01])\\/(0[13578]|1[02])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)\\/(0[13456789]|1[012])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])\\/02\\/((19|[2-9]\\d)\\d{2}))|(29\\/02\\/((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|(([1][26]|[2468][048]|[3579][26])00))))$/g)){\n                                errors.limitDate = 'Formato de fecha no válido'\n                            }\n                            if(datetime.length === 2 && !datetime[1].match(/^([0-1]?[0-9]|[2][0-3]):([0-5][0-9])(:[0-5][0-9])?$/)){\n                                errors.limitDate = 'Formato de hora no válido'\n                            }\n                        }\n                        return errors\n                    }}\n                    onSubmit = {(values,{setSubmitting, resetForm}) => {  \n                        if(values.limitDate !== ''){\n                            values.limitDate = (new Datepicker().createDate(values.limitDate)).toString()\n                        }\n                        \n                        setLoading(true)\n                        if(mode === 'new' || mode=='child'){\n                            addTask(values)\n                            .then(                            \n                                (result) => {\n                                    if(!result.hasError){\n                                        setSubmitSuccess(result.data.task)\n                                        setSubmitError(null)\n                                        resetForm({})\n                                        setSync({sync: false})\n                                    }else{\n                                        setSubmitSuccess(null);\n                                        setSubmitError(new Error(result.error));                                      \n                                    }\n                                    setSubmitting(false); \n                                    setLoading(false)\n                                },\n                                (error) => {\n                                    console.log(error)\n                                    setSubmitting(false);\n                                    setSubmitSuccess(null);\n                                    setSubmitError(error);\n                                    setLoading(false)\n                                }\n                            )\n                        }else if(mode === 'edit'){\n                            updateTask(values)\n                            .then(                            \n                                (result) => {\n                                    if(!result.hasError){                                        \n                                        setSubmitSuccess(result.data.task); \n                                        setTask(null)                                     \n                                        setTask(result.data.task)                                        \n                                        setSubmitError(null);\n                                        setSync({sync: false})\n                                    }else{\n                                        setSubmitSuccess(null);\n                                        setSubmitError(new Error(result.error));                                      \n                                    }\n                                    setSubmitting(false); \n                                    setLoading(false)\n                                },\n                                (error) => {\n                                    console.log(error)\n                                    setSubmitting(false);\n                                    setSubmitSuccess(null);\n                                    setSubmitError(error);\n                                    setLoading(false)\n                                }\n                            )\n                        }      \n                    }}\n                >                 \n                    {props =>  {\n                        return (      \n                        <FormWrapper>\n                            <FormTextInput \n                                label=\"Título\"\n                                name=\"title\"\n                                type=\"text\"                             \n                            />\n                            <FormTextInput \n                                label=\"Descripción\"\n                                name=\"description\"\n                                type=\"text\"                                \n                            />\n                            <FormTextInput \n                                label=\"Autor\"\n                                name=\"author\"\n                                type=\"text\"                                \n                            />   \n                            <FormDateInput \n                                label=\"Fecha límite\"\n                                name=\"limitDate\"\n                                type=\"text\"\n                                id=\"limitDate\"\n                                icon={FaCalendar}\n                                handler={dateHandler}   \n                                dateText={limitDate}                    \n                            />   \n                            <FormSelect\n                                label=\"Estado\"\n                                selOptions={statusItems}\n                                name=\"status\"                  \n                            />   \n                            <FormSelect\n                                label=\"Prioridad\"\n                                selOptions={priorityItems}\n                                name=\"priority\"\n                                type=\"text\"                            \n                            />                             \n                            <FormButtons>                                \n                                <IconButton\n                                    key=\"btnSubmit\"\n                                    text=\"Guardar\"\n                                    icon={FaCheck}\n                                    type=\"submit\"\n                                    disabled={props.isSubmitting && !props.isValidating}\n                                    className=\"form-button-submit button-icon\"\n                                />\n                                <IconButton \n                                    key=\"btnReset\"\n                                    text=\"Limpiar\"\n                                    icon={FaRedo}\n                                    type=\"reset\"\n                                    disabled={props.isSubmitting && !props.isValidating}\n                                    className=\"form-button-reset button-icon\"\n                                />\n                                <IconLink \n                                    key=\"btnCancel\"\n                                    route={taskid ? `/tasks/${taskid}` : '/tasks'}\n                                    text=\"Cancelar\"\n                                    icon={FaTimes}\n                                    type=\"button\"\n                                    disabled={props.isSubmitting && !props.isValidating}\n                                    className=\"form-button-cancel button-icon\"\n                                    />\n                            </FormButtons>\n                        </FormWrapper>               \n                    )}}  \n                </Formik>\n            }\n        </BlockContainer>\n    )\n}","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/worklog/worklog-list.component.tsx",["305"],"import React from 'react'\nimport { FaPlus, FaFilter } from 'react-icons/fa'\nimport { BlockContainer, BlockHeaderComponent, BlockEmptyComponent} from '../common/block'\nimport { Spinner } from '../common/spinner'\nimport { getWorklogList} from '../../../application/getWorklogList'\nimport { Worklog } from '../../../domain/worklog'\nimport { Link } from 'react-router-dom'\nimport { common, color } from '../../../styles/theme'\nimport styled from 'styled-components'\n\nconst ListItem = styled.li`\n    list-style: none;\n    padding: 1rem;\n    margin: 1rem;\n    border-style: solid;\n    border-width: 1px;\n    border-color: ${color.orange};\n    background-color: ${color.orange};\n    color: ${color.white};\n    ${common.roundedCorners()};\n`\n\nconst WorklogListItem = (props: {worklog: Worklog } ) => {    \n    \n    return(\n        <ul>\n            <Link to={`/worklogs/${props.worklog.id}`}>\n                <ListItem>{props.worklog.title}</ListItem>\n            </Link>\n        </ul>\n    )\n}\n\nexport const WorklogListComponent = ( props ) => {\n    const [worklogs, setWorklogs] = React.useState<Array<any>>([])\n    const [error, setError] = React.useState<Error | null>(null)\n    const [loading, setLoading] = React.useState<boolean>(false)\n    const [actions, setActions] = React.useState<Array<any>>([])\n    const [filters, setFilters ] = React.useState<Partial<any>>(props.filter ||{})\n\n    \n    React.useEffect(() => {\n        let cancelled = false\n        setLoading(true)\n        setActions(actionItems)\n        getWorklogList(filters)\n            .then(\n                (result) => {\n                    if(!cancelled){\n                        if(result.hasError){\n                            setError(new Error(result.error));\n                            setWorklogs([])\n                        }else{\n                            setWorklogs(result.data); \n                            setError(null);\n                        }\n                        \n                        setLoading(false)\n                    }\n                },\n                (error) => {\n                    if(!cancelled){\n                        setError(error)\n                        setLoading(false)\n                    }\n                }\n            )\n\n        return () => cancelled = true\n    },[filters])\n\n    const searchHandler = (values) => {\n        const filter: Partial<Worklog> = {}\n        if(values.actionBarSearch){\n            filter.title = values.actionBarSearch\n        }\n        setFilters(filter)\n    }\n\n    const validation = (values) => {\n        const errors = []\n        return errors\n    }\n    let actionItems = [\n        {\n            icon: FaPlus,\n            text: 'Nuevo parte',\n            route: `/worklogs/new`,\n            type: 'link'\n        },\n        {\n            view: 'actionBar',\n            type: 'form',         \n            key: 'actionBarFilterForm',   \n            initValues: {actionBarSearch: ''},\n            onSubmit: searchHandler,\n            validation: validation,\n            items: [\n                {\n                    type: 'text',\n                    id: 'actionBarSearch',\n                    placeholder: 'Buscar...'\n                },\n                {        \n                    id: 'filterBtn',\n                    type: 'submit',\n                    icon: FaFilter,\n                    label: 'Filtrar',\n                    className: 'button-icon'\n                }\n            ]\n            \n        },\n        \n    ]\n    return (\n        <BlockContainer>\n            <BlockHeaderComponent \n                title='Partes de trabajo'\n                actions={actions}\n            />\n            {loading && <Spinner />}\n            {worklogs.length ? \n                (error!==null ? \n                    <div>Error: {error.message?error.message:'unknown error'}</div> \n                    :\n                    worklogs.map((item: Worklog) => (\n                        <WorklogListItem key={item.id} worklog={item} />\n                    ))\n                )\n                :\n                <BlockEmptyComponent />\n            }\n        </BlockContainer>\n    )\n}","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/worklog/worklog-new.component.tsx",["306","307","308","309","310","311","312","313","314"]," import React from 'react'\nimport styled from 'styled-components'\nimport { color, common } from '../../../styles/theme';\nimport { Worklog } from '../../../domain/worklog'\nimport { addWorklog } from '../../../application/addWorklog'\nimport { updateWorklog } from '../../../application/updateWorklog'\nimport { getWorklog } from '../../../application/getWorklog'\nimport { Link, useParams } from 'react-router-dom'\nimport { FaCheck, FaTimes} from 'react-icons/fa'\nimport { Spinner } from '../common/spinner'\nimport { BlockContainer, BlockHeaderComponent} from '../common/block'\n\nimport { FormBuilder } from '../common/form/form'\n\nimport  {Datepicker}  from '../../../../lib/orzkDatepicker/datepicker'\nimport '../../../../lib/orzkDatepicker/datepicker.css'\nimport { isValidDateTime, dateToFormattedDate, formattedDateToISOString } from '../../../../lib/date.utils'\n\n\nconst emptyWorklog: Worklog = {\n    id: '',\n    title: '',\n    createdDate: '',    \n    startDatetime: '',\n    endDatetime: '',\n    tags: []\n}\n\n\nexport interface WorklogProps {\n    worklogid: string,\n}\n\nexport const WorklogNewComponent = (props) => {\n    let { worklogid } = useParams<WorklogProps>()\n    const [dpStart,setDpStart] = React.useState<Datepicker | null>(null)\n    const [startDate, setStartDate] = React.useState<string>('')\n    const [submitSuccess, setSubmitSuccess] = React.useState(null)\n    const [submitError, setSubmitError] = React.useState<Error | null>(null)\n    const [mode, setMode] = React.useState(props.mode || 'new')\n    const [worklog, setWorklog] = React.useState<Worklog | null>(emptyWorklog)\n    const [error, setError] = React.useState<Error | null>(null)\n    const [loading, setLoading] = React.useState<boolean>(false)\n    const [title, setTitle] = React.useState<string>('Nuevo parte')\n    \n    let formItems = \n         [\n            {\n                type: 'text',\n                id: 'title',\n                label: 'Título'\n            },\n            {\n                type: 'date2',\n                id: 'startDatetime',\n                label: 'Fecha y hora de inicio'\n            },\n            {\n                type: 'buttons',\n                buttons: [\n                    {        \n                        id: 'submitBtn',\n                        type: 'submit',\n                        icon: FaCheck,\n                        label: 'Guardar',\n                        className: 'form-button-submit button-icon'\n                    },\n                    {\n                        id: 'cancelBtn',\n                        type: 'link',\n                        route: '/worklogs',\n                        icon: FaTimes,\n                        label: 'Cancelar',\n                        className: 'form-button-cancel button-icon'\n                    }\n                ]\n            }            \n         ]\n    \n    const validate = (values) => {\n        const errors : Partial<Worklog> = {}\n        if(!values.title){\n            errors.title = 'Campo obligatorio'\n        }   \n        \n        if(!values.startDatetime){\n            errors.startDatetime = 'Campo obligatorio'\n        }else if(!isValidDateTime(values.startDatetime)){\n            errors.startDatetime = 'Formato de fecha y hora no válido'\n        }\n       \n        return errors\n    }\n\n    const onSubmit = (values: Worklog, helpers) => {\n                        \n        setLoading(true)\n            if(mode === 'new'){\n                addWorklog(values)\n                .then(                            \n                    (result) => {\n                        if(!result.hasError){\n                            setSubmitSuccess(result.data.worklog);                                        \n                            setSubmitError(null);\n                            helpers.resetForm({})\n                        }else{\n\n                            setSubmitSuccess(null);\n                            setSubmitError(new Error(result.error));                                      \n                        }\n                        helpers.setSubmitting(false); \n                        setLoading(false)\n                    },\n                    (error) => {\n                        console.log(error)\n                        helpers.setSubmitting(false);\n                        setSubmitSuccess(null);\n                        setSubmitError(error);\n                        setLoading(false)\n                    }\n                )\n            }else if(mode === 'edit'){\n                updateWorklog(values)\n                .then(                            \n                    (result) => {\n                        if(!result.hasError){                                        \n                            setSubmitSuccess(result.data.worklog); \n                            setWorklog(null)                                     \n                            setWorklog(result.data.worklog)                                        \n                            setSubmitError(null);\n                        }else{\n                            setSubmitSuccess(null);\n                            setSubmitError(new Error(result.error));                                      \n                        }\n                        helpers.setSubmitting(false); \n                        setLoading(false)\n                    },\n                    (error) => {\n                        console.log(error)\n                        helpers.setSubmitting(false);\n                        setSubmitSuccess(null);\n                        setSubmitError(error);\n                        setLoading(false)\n                    }\n                )\n            }      \n    }\n\n    React.useEffect(()=> {\n        console.log(mode)\n        if(mode === 'edit'){\n            setTitle('Editar parte')\n        } else {\n            setTitle('Nuevo parte')\n        }\n    },[mode])\n\n    React.useEffect(() => {      \n        let dp = new Datepicker('startDatetime','StartDate', {lang:'es'})\n        dp.onSubmit = () => {   \n            setStartDate(dp.getFullDateString())         \n            dp.printDate()\n         }          \n\n        if(worklog && worklog.startDatetime !== '' && new Date(worklog.startDatetime)){\n            dp.setDate(new Date(worklog.startDatetime))\n        }\n        setDpStart(dp)\n\n    },[worklog])\n\n    React.useEffect(() => {   \n        if(dpStart && dpStart.getDate() !== null){    \n            setStartDate(dpStart.getFullDateString())\n        }\n    },[dpStart])\n\n    React.useEffect(()=> {          \n        let cancelled = false    \n        if(worklogid){       \n            setLoading(true)\n            getWorklog(worklogid)\n            .then(\n                (result) => { \n                    if(!cancelled){ \n                        if(result.hasError){\n                            setError(new Error(result.error))\n                            setWorklog(null)\n                        }else{\n                            if(mode === 'edit'){                      \n                                setWorklog(result.data.worklog) \n                            }else{                                \n                                setWorklog(emptyWorklog)\n                            }\n                            setError(null)\n                            setSubmitError(null)\n                        }\n                    \n                        setLoading(false) \n                    }\n                },\n                (error) => {\n                    console.log(\"error\",error)\n                    setSubmitSuccess(null)\n                    setSubmitError(null)\n                    setError(error)\n                    setWorklog(null)\n                    setStartDate('')\n                    setLoading(false)\n                }\n            )        \n        }else{\n            setWorklog(emptyWorklog)\n        }  \n        return () => cancelled = true    \n    },[])\n\n    return (        \n        <BlockContainer> \n            <BlockHeaderComponent \n                title={title}\n            />  \n            {loading ? <Spinner /> : ''}            \n           \n            {submitSuccess &&                \n                <div aria-label='success-message' className='message-success'>                    \n                    El parte <Link to={'/worklogs/'+ submitSuccess.id}>'{submitSuccess.title}'</Link> ha sido {mode === 'new' ? 'creado':'editado'} con éxito.\n                </div>  \n            }\n\n            {submitError &&\n                <div aria-label='error-message' className='message-error'>{submitError.message}</div>\n            }\n            \n            {worklog &&\n                <FormBuilder \n                    key = \"newWorklogForm\"\n                    formView = \"form\"\n                    formItems = {formItems}\n                    initValues = {worklog}\n                    validation = {validate}\n                    onSubmit = {onSubmit}\n            />\n            }\n        </BlockContainer>\n    )\n}","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/worklog/worklog-detail.component.tsx",["315","316","317","318","319","320","321","322"],"import React, { Children } from 'react'\nimport styled from 'styled-components'\nimport { color, common } from '../../../styles/theme'\nimport { useParams} from 'react-router-dom'\nimport { Worklog, WorklogObject } from '../../../domain/worklog'\nimport { getWorklog } from '../../../application/getWorklog'\nimport { deleteWorklog } from '../../../application/deleteWorklog'\nimport { Spinner } from '../common/spinner'\nimport { BlockActions } from '../common/block-actions'\nimport { FaEdit, FaTrashAlt, FaPlus } from 'react-icons/fa'\nimport { Modal } from '../common/modal'\nimport { Link } from 'react-router-dom'\nimport { ISOStringToFormatedDate } from '../../../../lib/date.utils'\nimport { BlockContainer, BlockHeaderComponent } from '../common/block'\nimport { WorklogSequence } from './worklog-sequence.component'\n \nconst WorklogDetailContainer = styled.ul`\n`;\nconst WorklogDetailKey = styled.div`\n    font-weight: bold;\n    color: ${color.black};\n    flex-basis: 10rem;\n`;\nconst WorklogDetailValue = styled.div`\n    color: ${color.black}\n`;\n\nconst WorklogDetailItem = styled.li`\n    display: flex;\n    flex-direction: vertical;\n    margin: 1rem;\n`;\n\nconst ErrorMessage = styled.div`\n    background-color: ${color.lightRed};\n    padding: 1rem;\n    text-align: center;\n    color: ${color.white};\n    margin: 0.5rem;\n`;\n\nconst WorklogChildrenContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n\n    & a{\n        display: inline-flex;\n        background-color: ${color.orange};\n        ${common.roundedCorners()};\n        padding: 0.5rem;\n    }\n\n    & a:hover {\n        background-color: ${color.lightOrange};\n    }    \n`\n\nconst WorklogTagsContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 0.5rem;\n\n    & div{\n        display: inline-flex;\n        background-color: rgba(0,0,0,0.7);\n        color: ${color.white};        \n        ${common.roundedCorners()};\n        padding: 0.5rem;\n    }\n`\n\nexport interface WorklogProps {\n    worklogid: string,\n}\nexport const WorklogDetailComponent = (props) => {\n    let { worklogid } = useParams<WorklogProps>()\n   \n    const [worklog, setWorklog] = React.useState<WorklogObject | null>(null)        \n    const [error, setError] = React.useState<Error | null>(null)\n    const [deleteSuccess, setDeleteSuccess] = React.useState<string | null>(null)\n    const [loading, setLoading] = React.useState<boolean>(false)\n    const [actions, setActions] = React.useState<Array<any>>([])\n    const [isOpened, setOpened] = React.useState(false)\n    const [confirmedDelete, setConfirmedDelete ] = React.useState<boolean>(false)\n    \n    const confirmDelete = () =>{\n        openModal()        \n    }\n    const handleDelete = () => {\n        setOpened(false)\n        setLoading(true)\n        setConfirmedDelete(true)   \n    }\n\n    const childHandler = () => {\n\n    }\n\n    React.useEffect(() => {\n        let cancelled = false\n        if(confirmedDelete){\n            deleteWorklog(worklogid)\n            .then(\n                result => {\n                    if(!cancelled){\n                        if(!result.hasError){\n                            setDeleteSuccess('El parte se ha eliminado con éxito')\n                        }else{\n                            setError(new Error('Ha ocurrido un error al eliminar el parte.'))\n                        }\n                        setLoading(false)\n                    }\n                },\n                error => {\n                    console.log(\"Error: \", error)\n                    setError(new Error('Ha ocurrido un error al eliminar el parte.'))\n                    setLoading(false)\n                }\n            )\n        }\n\n        return () => cancelled = true;\n    },[confirmedDelete])\n\n    const closeModal = () => {  setOpened(false)}\n    const openModal = () => { setOpened(true)}\n\n    let actionItems = [\n        {\n            icon: FaEdit,\n            text: 'Editar',\n            route: `/worklogs/edit/${worklogid}`,\n            type: 'link'\n        },\n        {\n            icon: FaTrashAlt,\n            text: 'Borrar',\n            type: 'button',\n            handler: confirmDelete\n        },\n        {\n            icon: FaPlus,\n            text: 'Añadir trabajo',\n            route: `/worklog/new/${worklogid}`,\n            type: 'link'\n        }\n    ]\n\n    React.useEffect(() => {\n        let cancelled = false;\n        setActions(actionItems)\n        setLoading(true)\n        getWorklog(worklogid)\n            .then(\n                (result) => {\n                    if(!cancelled){\n                        if(result.hasError){\n                            setError(new Error(result.error))\n                            setWorklog(null)\n                        }else{\n                            setWorklog(result.data) \n                            setError(null)\n                        }\n                        \n                        setLoading(false)  \n                    }\n                },\n                (error) => {\n                    if(!cancelled){\n                        setError(error)\n                        setWorklog(null)\n                        setLoading(false)\n                    }\n                }\n            )\n        \n            return () => cancelled = true\n    },[worklogid])\n    return (        \n        <BlockContainer>\n            <Modal \n                title=\"Eliminar tarea\" \n                isOpened={isOpened} \n                onClose={closeModal}\n                content=\"Esta acción es irreversible. ¿Desea continuar?\"\n                type=\"confirm\"\n                action={handleDelete} />\n            {loading ? <Spinner /> : ''}\n            <h3 className=\"section-title\">Detalle de parte</h3>\n            {deleteSuccess !== null ? \n                <div aria-label='success-message' className='message-success'>{deleteSuccess} <Link to={'/worklogs'}>Volver a la lista</Link></div>\n                :\n                <>\n                <BlockActions \n                    actions={actions}\n                />\n                {error !== null ?\n                    <ErrorMessage>{error.message}</ErrorMessage>\n                    :\n                    (worklog && worklog.worklog)?                \n                        <WorklogDetailContainer> \n                            <WorklogDetailItem>\n                                <WorklogDetailKey>Título:</WorklogDetailKey>\n                                <WorklogDetailValue>{worklog.worklog.title}</WorklogDetailValue>\n                            </WorklogDetailItem>      \n                            <WorklogDetailItem>\n                                <WorklogDetailKey>Creada:</WorklogDetailKey>\n                                <WorklogDetailValue>{worklog.worklog.createdDate ? worklog.worklog.createdDate : '-'}</WorklogDetailValue>\n                            </WorklogDetailItem>\n                            <WorklogDetailItem>\n                                <WorklogDetailKey>Inicio:</WorklogDetailKey>\n                                <WorklogDetailValue>{worklog.worklog.startDatetime ? worklog.worklog.startDatetime : '-'}</WorklogDetailValue>\n                            </WorklogDetailItem>\n                            <WorklogDetailItem>\n                                <WorklogDetailKey>Fin:</WorklogDetailKey>\n                                <WorklogDetailValue>{worklog.worklog.endDatetime ? worklog.worklog.endDatetime : '-'}</WorklogDetailValue>\n                            </WorklogDetailItem>    \n                            <WorklogDetailItem>\n                                <WorklogDetailKey>Tags:</WorklogDetailKey>\n                                <WorklogDetailValue>\n                                {worklog.worklog.tags.length ?\n                                    <WorklogTagsContainer>\n                                    {\n                                        worklog.worklog.tags.map((tag) => {\n                                            return <div key={tag}>{tag}</div>\n                                        })\n                                    }\n                                    </WorklogTagsContainer> \n                                    :\n                                    '-'\n                                }               \n                                </WorklogDetailValue>\n                            </WorklogDetailItem>    \n                            \n                            {worklog &&\n                                <WorklogSequence worklog={worklog} />  \n                            }                      \n                        </WorklogDetailContainer>\n                        \n                    :   \n                        <div></div>\n                }\n                </>\n            }    \n                \n        </BlockContainer>\n    )   \n}","/home/ielizari/proyectos/tasker/src/lib/orzkDatepicker/datepicker.js",["323","324","325","326","327","328","329","330","331","332","333","334","335","336"],"/*\n\t Options\n\t\t- showTitle Boolean [true,false] Default true\n\t \t- mode\tString [date, time, datetime]\tDefault 'datetime'\n\t\t- lang\tString [en, es, fr] Default 'en'\n\t\t- startDay Integer [0 - Sunday, 1 - Monday, ... 6 - Saturday]\tDefault 1\n\t\t- minDate\tDate [Date object] Default null\n\t\t- maxDate\tDate [Date object] Default null\n\t\t- blockWeekdays\tArray<String> [mon,tue,wed,thu,fri,sat,sun] Default []\n\t\t- blockDates\t{<Array<Date>} Default {}\tSingle date / Date range: [min date, max date]\n\t\t- display\tString [full, compact] Default 'full'\n\t\t- showMsg\tBoolean [true, false]\tDefault true\n\t\t- dateFormat\tString ['ymd[/-]','ydm[/-]','mdy[/-]','dmy[/-]'] Default 'dmy/'\n\t\t- timeFormat\tString ['h','hm','hms']\n\t\t- position\tString['free','attach','fixed']\tDefault 'free'\n\t\t- showDate\tBoolean [true,false] Default true\n\t\n\t Methods\n\t\tPublic\n\t\t\tshow()\t\t\t\t\t\t-\tDraws the datepicker DOM elements.\n\t\t\tclose()\t\t\t\t\t\t-\tRemoves the datepicker object's DOM elements. The selected date and time will be kept on the object and will be shown if the show() function is called again.\n\t\t\tgetDate()\t\t\t\t\t-\tReturns a Date object containing the selected date.\n\t\t\tsetOptions(options)\t\t\t-\tSets the options for this instance. The 'options' parameter is a javascript object containing the pairs of key:value whose default values must be overwritten.\n\t\t\tgetFullDateString()\t\t\t-\tReturns a string containing the selected date formatted based on the dateFormat and timeFormat options.\n\t\t\tsetDate(d)\t\t\t\t\t-\tSets the initial date of the datepicker object. By default, if an input DOM element id is passed as parameter on the datepicker's constructor, and it \n\t\t\t\t\t\t\t\t\t\t\tcontains a valid date string, this date will be set as the initial one. Otherwise, the initial date will be the current local date. If this date is blocked,\n\t\t\t\t\t\t\t\t\t\t\tthe initial date will be empty and the user must select one manually on the calendar widget in order to be able to push the 'OK' button.\n\t\t\tprintDate()\t\t\t\t\t-\tPrints a formatted date string based on the selected date on the input DOM element referenced by the id passed as parameter on the datepicker's constructor.\n\t\t\t\t\t\t\t\t\t\t\tIf this parameter contains null or a non valid id, nothing will be printed.\n\t\t\tonSubmit(d)\t\t\t\t\t-\tThis function is called when the user press the 'OK' button. By default it calls the printDate() function.\n\t\tPrivate\t\t\n\t\t\tupdateDisplay()\t\t\t\t-\tRedraw all the display elements \n\t\t\tdaysInMonth()\t\t\t\t-\tReturns the number of days of the selected month.\n\t\t\tfirstDay()\t\t\t\t\t-\tReturns the position on the weekdays o the month's first day. Used to calculate the first row's offset when printing the calendar. \n\t\t\tclearCalendarContainer()\t-\tRemove the elements on the calendar container.\n\t\t\tclearTimeContainer()\t\t-\tRemove the elements on the time container (Clock elements)\n\t\t\tclearMsgContainer()\t\t\t-\tRemove the elements on the debug section (errors and warnings)\n\t\t\tprintCalendar()\t\t\t\t-\tDraws the calendar\n\t\t\tprintMonthList()\t\t\t-\tDraws the month list that allows to quickly one. \n\t\t\tprintYearList(decade)\t\t-\tDraws the year list. This window allows to scroll over the years in groups of 20 and select one of them. The 'decade' parameter indicates the offset \n\t\t\t\t\t\t\t\t\t\t\tto know which group of years must be printed.\n\t\t\tprintAnalogTime(type)\t\t-\tDraws the analog clock to pick hours / minutes / seconds. The 'type' parameter indicates which one is being picked.\n\t\t\tdrawClockHand(line,x2,y2)\t-\tDraws the clock's hand, starting from the center of the widget. \n\t\t\thideClockHand(line)\t\t\t-\tHide the clock's hand passed as parameter.\n\t\t\tshowCalendar()\t\t\t\t-\tShow the calendar container window\n\t\t\tshowTime()\t\t\t\t\t-\tShow the clock container window\n\t\t\tgetDateString(d)\t\t\t-\tReturns a formatted string based on the date 'd' passed as parameter and the dateFormat option passed when the object was created.\n\t\t\tgetTimeString(d)\t\t\t-\tReturns a formatted string based on the date 'd' passed as parameter and the timeFormat option passed when the object was created.\n\t\t\tupdateTime(d)\t\t\t\t-\tRedraws the display item containing the time.\n\t\t\tcreateDate(d)\t\t\t\t-\tReturns a date object based on the string 'd' passed as parameter. If the string doesn't fit the dateFormat and timeFormat options, returns false.\n\t\t\tpadInteger(number,max)\t\t-\tReturns a string of 'max' characters containing 'number' and filled with zeros on the left. Ej. padInteger(2,4) -> '0002'\n\t\t\trad2deg(x)\t\t\t\t\t-\tConverts radians to degrees.\n\t\t\tdeg2rad(x)\t\t\t\t\t-\tConverts degrees to radians.\n\t\t\tisDate(date)\t\t\t\t-\tChecks if the 'date' parameter is a Date object. Returns a boolean.\n\t\t\tdateInRange(date,type)\t\t-\tChecks if the 'date' parameter is bigger than the minDate option and smaller than the maxDate option. The 'type' can be 'day' for the printCalendar() \n\t\t\t\t\t\t\t\t\t\t\tfunction, 'month' for the printMonthList() function or 'year' for the printYearList() function\n\t\t\tdateIsBlocked(date)\t\t\t-\tChecks if the 'date' parameter is present on the blockDates option.\n\t*/\nexport class Datepicker  {\n\tconstructor(dateField,title,options) {\t\n\t\t\n\t\tthis.setOptions = this.setOptions.bind(this)\n\t\tthis.reset = this.reset.bind(this)\n\t\tthis.show = this.show.bind(this)\n\t\tthis.updateDisplay = this.updateDisplay.bind(this)\n\t\tthis.daysInMonth = this.daysInMonth.bind(this)\n\t\tthis.firstDay = this.firstDay.bind(this)\n\t\tthis.clearCalendarContainer = this.clearCalendarContainer.bind(this)\n\t\tthis.clearTimeContainer = this.clearTimeContainer.bind(this)\n\t\tthis.clearMsgContainer = this.clearMsgContainer.bind(this)\n\t\tthis.printCalendar = this.printCalendar.bind(this)\n\t\tthis.printMonthList = this.printMonthList.bind(this)\n\t\tthis.printYearList = this.printYearList.bind(this)\n\t\tthis.printAnalogTime = this.printAnalogTime.bind(this)\n\t\tthis.drawClockHand = this.drawClockHand.bind(this)\n\t\tthis.hideClockHand = this.hideClockHand.bind(this)\n\t\tthis.close = this.close.bind(this)\n\t\tthis.printDate = this.printDate.bind(this)\n\t\tthis.getFullDateString = this.getFullDateString.bind(this)\n\t\tthis.showCalendar = this.showCalendar.bind(this)\n\t\tthis.showTime = this.showTime.bind(this)\n\t\tthis.getDateString = this.getDateString.bind(this)\n\t\tthis.getTimeString = this.getTimeString.bind(this)\n\t\tthis.updateTime = this.updateTime.bind(this)\n\t\tthis.getDate = this.getDate.bind(this)\n\t\tthis.createDate = this.createDate.bind(this)\n\t\tthis.setStartDate = this.setStartDate.bind(this)\n\t\tthis.setDate = this.setDate.bind(this)\n\t\tthis.onSubmit = this.onSubmit.bind(this)\n\t\tthis.padInteger = this.padInteger.bind(this)\n\t\tthis.rad2deg = this.rad2deg.bind(this)\n\t\tthis.deg2rad = this.deg2rad.bind(this)\n\t\tthis.isDate = this.isDate.bind(this)\n\t\tthis.dateInRange = this.dateInRange.bind(this)\n\t\tthis.dateIsBlocked = this.dateIsBlocked.bind(this)\n\t\n\t\tthis.initialized = false;\t\n\t\tthis._version = '0.1';\n\t\t\n\t\tthis.defOptions = options;\n\t\tthis.dpMode = \"datetime\";\t\n\t\tthis.inputDate = null;\n\t\tthis.showDate = true;\n\t\tthis.language = \"en\";\n\t\tthis.startDay = 1;\t// Monday\n\t\tthis.minDate = null;\n\t\tthis.maxDate = null;\n\t\tthis.showTitle = true;\n\t\tthis.blockdays = [];\n\t\tthis.display = \"full\";\n\t\tthis.showMsg = true;\n\t\tthis.blockDates = [];\n\t\tthis.dateFormat = \"dmy/\";\n\t\tthis.timeFormat = \"hm\";\n\t\tthis.position = \"free\";\n\t\t\n\t\tthis.error = [];\n\t\tthis.warning = [];\n\t\tthis.info = [];\n\t\t\n\t\tthis.lang = {\n\t\t\t\"en\":\t{\n\t\t\t\tmonth:\t\t[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n\t\t\t\tmonthShort:\t[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\n\t\t\t\tday:\t\t[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\n\t\t\t\tdayShort:\t[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],\n\t\t\t\tbtncancel:\t\"Cancel\",\n\t\t\t\tbtnok:\t\t\"OK\",\n\t\t\t\terrTitle:\t\"Invalid 'showTitle' value. Default value will be used.\",\n\t\t\t\terrMode:\t\"Unknown 'mode' value. Default value will be used.\",\n\t\t\t\terrLang:\t\"Unknown 'lang' value. Default value will be used.\",\n\t\t\t\terrStart:\t\"Invalid 'startDay' value. Default value will be used.\",\n\t\t\t\terrMin:\t\t\"Invalid minimum date. This parameter will be ignored.\",\n\t\t\t\terrMax:\t\t\"Invalid maximum date. This parameter will be ignored.\",\n\t\t\t\terrMinMax:\t\"Minimun date is higher than maximum date. Both will be ignored.\",\n\t\t\t\terrDisplay:\t\"Invalid 'display' value. This parameter will be ignored.\",\n\t\t\t\terrMsg:\t\t\"Invalid 'showMsg' value. Default value will be used.\",\n\t\t\t\terrWeekDay:\t\"Unknown 'blockWeekdays' argument on position \",\n\t\t\t\terrWeekDay2:\"The 'blockWeekdays' parameter expects an array as argument.\",\n\t\t\t\terrInputField:\t\"DOM element not found\",\n\t\t\t\terrDateFormat:\t\"Invalid date format\",\t\t\t\n\t\t\t\terrBlockDate:\t\"Invalid date in 'blockDates' parameter at position \",\n\t\t\t\terrFormat:\t\t\"Invalid 'dateFormat' value. Default value will be used: 'mdy/'\",\n\t\t\t\terrTimeFormat:\t\"Invalid 'timeFormat' value. Default value will be used: 'hm'\",\n\t\t\t\terrPosition:\t\"Invalid element id to bind the widget position. Default value will be used: 'free'\",\n\t\t\t\terrPosition2:\t\"Ivalid 'position' value. Default value will be used: 'free'\",\n\t\t\t\terrShowDate:\t\"Invalid 'showDate' value. Default value will be used: 'true'\"\n\t\t\t\t\n\t\t\t},\n\t\t\t\"es\":\t{\n\t\t\t\tmonth:\t\t[\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"],\n\t\t\t\tmonthShort:\t[\"Ene\",\"Feb\",\"Mar\",\"Abr\",\"May\",\"Jun\",\"Jul\",\"Ago\",\"Sep\",\"Oct\",\"Nov\",\"Dic\"],\n\t\t\t\tday:\t\t[\"Domingo\",\"Lunes\",\"Martes\",\"Mi\\xe9rcoles\",\"Jueves\",\"Viernes\",\"S\\xe1bado\"],\n\t\t\t\tdayShort:\t[\"Do\",\"Lu\",\"Ma\",\"Mi\",\"Ju\",\"Vi\",\"S\\xe1\"],\n\t\t\t\tbtncancel:\t\"Cancelar\",\n\t\t\t\tbtnok:\t\t\"OK\",\n\t\t\t\terrTitle:\t\"Valor de 'showTitle' no v\\xe1lido. Se usar\\xe1 el valor por defecto.\",\n\t\t\t\terrMode:\t\"Valor de 'mode' desconocido. Se usar\\xe1 el valor por defecto.\",\n\t\t\t\terrLang:\t\"Valor de 'lang' desconocido. Se usar\\xe1 el valor por defecto.\",\n\t\t\t\terrStart:\t\"Valor de 'startDay' no v\\xe1lido. Se usar\\xe1 el valor por defecto.\",\n\t\t\t\terrMin:\t\t\"Fecha m\\xednima no v\\xe1lida. Este par\\xe1metro ser\\xe1 ignorado.\",\n\t\t\t\terrMax:\t\t\"Fecha m\\xe1xima no v\\xe1lida. Este par\\xe1metro ser\\xe1 ignorado.\",\n\t\t\t\terrMinMax:\t\"La fecha m\\xednima es posterior a la fecha m\\xe1xima. Ambos par\\xe1metros ser\\xe1n ignorados.\",\n\t\t\t\terrDisplay:\t\"Valor de 'display' no v\\xe1lido. Este par\\xe1metro ser\\xe1 ignorado.\",\n\t\t\t\terrMsg:\t\t\"Valor de 'showMsg' no v\\xe1lido. Se usar\\xe1 el valor por defecto.\",\n\t\t\t\terrWeekDay:\t\"Valor de 'blockWeekdays' desconocido en la posici\\xf3n \",\n\t\t\t\terrWeekDay2:\"El par\\xe1metro 'blockWeekdays' debe ser un array.\",\n\t\t\t\terrInputField:\t\"No se ha encontrado el campo de entrada en la p\\xe1gina.\",\n\t\t\t\terrDateFormat:\t\"Formato de fecha no v\\xe1lido.\",\t\t\t\n\t\t\t\terrBlockDate:\t\"Fecha no v\\xe1lida en el par\\xe1metro 'blockDates' en la posici\\xf3n \",\n\t\t\t\terrFormat:\t\t\"Valor de 'dateFormat' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'mdy/'\",\n\t\t\t\terrTimeFormat:\t\"Valor de 'timeFormat' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'hm'\",\n\t\t\t\terrPosition:\t\"ID del elemento no v\\xe1lida. No se puede enlazar el objeto con este valor de 'position'. Se usar\\xe1 el valor por defecto: 'free'\",\n\t\t\t\terrPosition2:\t\"Valor de 'position' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'free'\",\n\t\t\t\terrShowDate:\t\"Valor de 'showDate' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'true'\"\n\t\t\t}\t\t\n\t\t};\n\t\t\n\t\t// Set input/output field\n\t\tif(typeof(dateField) != \"undefined\" && dateField != null){\n\t\t\tthis.inputDate = document.getElementById(dateField);\n\t\t\tif(this.inputDate == null){\n\t\t\t\tthis.error.push(this.lang[this.language].errInputField);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.setOptions(options);\n\t\t\n\t\t\t\n\t\tthis.fecha = null;\n\t\tthis.nuevaFecha = null;\n\t\t\n\t\tthis.contenedor = null;\n\t\tthis.dp = null;\n\t\t\n\t\tthis.titleContainer = null;\n\t\tthis.titleTxt = null;\n\t\tthis.title = title;\n\t\t\n\t\tthis.ymcontainer = null;\n\t\tthis.yearContainer = null;\n\t\tthis.year = null;\n\t\tthis.yearTxt = null;\n\t\tthis.yearPrev = null;\n\t\tthis.yearNext = null;\n\t\t\n\t\tthis.monthContainer = null;\n\t\tthis.month = null;\n\t\tthis.monthTxt = null;\n\t\t\n\t\tthis.daySelected = null;\n\t\tthis.daySelectedTxt = null;\n\t\t\n\t\tthis.dayWeek = null;\n\t\tthis.dayWeekTxt = null;\t\n\t\t\n\t\tthis.timeTxt = null;\t\n\t\t\n\t\tthis.btnCalendar = null;\n\t\tthis.btnHour = null;\n\t\t\n\t\tthis.msgContainer = null;\n\t\tthis.msgTxt = null;\n\t\tthis.msgList = null;\n\t\tthis.msgArrow = null;\n\t\t\n\t\tthis.tableContainer = null;\n\t\tthis.dpCurrWindow = \"calendar\";\t// calendar / time\n\t\t\n\t\tthis.calendarContainer = null;\n\t\tthis.calendar = null;\n\t\tthis.monthList = null;\n\t\tthis.yearList = null;\n\t\tthis.decadeListContainer = null;\n\t\tthis.decadeList = null;\n\t\tthis.decadeShift = 0;\n\t\t\n\t\tthis.timeContainer = null;\n\t\tthis.clockType = \"analog\";\n\t\t// Analog clock variables\n\t\tthis.timeWindow = null;\n\t\tthis.timeMinutesContainer = null;\n\t\tthis.svgNS = null;\n\t\tthis.analogClockSVG = null;\n\t\tthis.clockHandSelected = null;\n\t\tthis.clockHand = null;\t\n\t\t\n\t\t// Digital clock variables\n\t\tthis.dcHour = null;\n\t\tthis.dcbtnHourUp = null;\n\t\tthis.dcbtnHourDown = null;\n\t\tthis.dcMinute = null;\n\t\tthis.dcbtnMinUp = null;\n\t\tthis.dcbtnMinDown = null;\n\t\t\n\t\tthis.btnCancel = null;\n\t\tthis.btnOK = null;\n\t}\n\n\tsetOptions(options){\t\n\t\n\t\t// Validate the options passed as argument and load them.\n\t\tif(typeof(options) != \"undefined\" && options != null){\n\t\t\tvar tmplang = options['lang'];\n\t\t\tvar tmptitle = options['showTitle'];\n\t\t\tvar tmpmode = options['mode'];\n\t\t\tvar tmpdateformat = options['dateFormat'];\n\t\t\tvar tmptimeformat = options['timeFormat'];\n\t\t\tvar tmpstartday = options['startDay'];\n\t\t\tvar tmpmindate = options['minDate'];\n\t\t\tvar tmpmaxdate = options['maxDate'];\n\t\t\tvar tmpdisplay = options['display'];\n\t\t\tvar tmpshowmsg = options['showMsg'];\n\t\t\tvar tmpblockweekdays = options['blockWeekdays'];\n\t\t\tvar tmpblockdates = options['blockDates'];\n\t\t\tvar tmpposition = options['position'];\n\t\t\tvar tmpshowdate = options['showDate'];\n\t\t\t\n\t\t\t// Select language\n\t\t\tif(typeof(tmplang) != \"undefined\" && tmplang != null){\t\t\t\n\t\t\t\tif(this.lang[tmplang] == null){\t\t\t\t\n\t\t\t\t\tthis.language = \"en\";\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errLang);\n\t\t\t\t}else{\t\t\t\t\t\t\n\t\t\t\t\tthis.language = tmplang;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Print the date in the input field on submit\n\t\t\tif(typeof(tmpshowdate) != \"undefined\" && tmpshowdate != null){\t\t\t\n\t\t\t\tif(typeof(tmpshowdate) === 'boolean'){\t\t\t\t\n\t\t\t\t\tthis.showDate = tmpshowdate;\n\t\t\t\t}else{\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errShowDate);\n\t\t\t\t\tthis.showDate = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Show/hide title\t\t\n\t\t\tif(typeof(tmptitle) != \"undefined\" && tmptitle != null){\n\t\t\t\tif(typeof(tmptitle) === 'boolean'){\n\t\t\t\t\tthis.showTitle = tmptitle;\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errTitle);\n\t\t\t\t\tthis.showTitle = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Set the datepicker mode\n\t\t\tif(typeof(tmpmode) != \"undefined\" && tmpmode != null){\n\t\t\t\tif(tmpmode === \"date\"){\n\t\t\t\t\tthis.dpMode = \"date\";\n\t\t\t\t}else if(tmpmode === \"time\"){\n\t\t\t\t\tthis.dpMode = \"time\";\n\t\t\t\t}else if(tmpmode === \"datetime\"){\n\t\t\t\t\tthis.dpMode = \"datetime\";\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\tthis.dpMode = \"datetime\";\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMode);\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t\t\n\t\t\t// Set date format\n\t\t\tif(typeof(tmpdateformat) != \"undefined\" && tmpdateformat != null){\t\t\t\n\t\t\t\tif(typeof(tmpdateformat) === 'string' && tmpdateformat.length === 4){\t\t\t\t\n\t\t\t\t\tvar sep = tmpdateformat.substr(3);\n\t\t\t\t\tif(sep !== '/' && sep !== '-'){\t\t\t\t\t\n\t\t\t\t\t\tthis.error = this.lang[this.language].errFormat;\n\t\t\t\t\t}else{\t\t\t\t\t\n\t\t\t\t\t\tvar p = tmpdateformat.substr(0,3);\t\t\t\t\t\n\t\t\t\t\t\tif(p === 'ymd' || p === 'ydm' || p === 'dmy' || p === 'mdy'){\n\t\t\t\t\t\t\tthis.dateFormat = tmpdateformat;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis.error = this.lang[this.language].errFormat;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tthis.error = this.lang[this.language].errFormat;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Set time format\n\t\t\tif(typeof(tmptimeformat) != \"undefined\" && tmptimeformat != null){\t\t\t\n\t\t\t\tif(tmptimeformat === 'h' || tmptimeformat === 'hm' || tmptimeformat === 'hms'){\n\t\t\t\t\tthis.timeFormat = tmptimeformat;\n\t\t\t\t}else{\n\t\t\t\t\tthis.error = this.lang[this.language].errTimeFormat;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t// Set the starting day of the week\n\t\t\tif(typeof(tmpstartday) != \"undefined\" && tmpstartday != null){\n\t\t\t\tif(tmpstartday >= 0 && tmpstartday < 7){\t\t\t\t\n\t\t\t\t\tthis.startDay = tmpstartday;\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errStart);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Set the minimum date that can be picked\n\t\t\tif(typeof(tmpmindate)!= \"undefined\" && tmpmindate != null && this.dpMode !== \"time\"){\n\t\t\t\t\n\t\t\t\tthis.minDate = this.createDate(tmpmindate);\n\t\t\t\tif(!this.isDate(this.minDate)){\t\t\t\t\n\t\t\t\t\tthis.minDate = null;\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMin);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Set the maximum date that can be picked\n\t\t\tif(typeof(tmpmaxdate)!= \"undefined\" && tmpmaxdate != null && this.dpMode !== \"time\"){\n\t\t\t\t\n\t\t\t\tthis.maxDate = this.createDate(tmpmaxdate);\n\t\t\t\tif(!this.isDate(this.maxDate)){\n\t\t\t\t\tthis.maxDate = null;\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMax);\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t\t\n\t\t\t// Set the type of display\n\t\t\tif(typeof(tmpdisplay)!= \"undefined\" && tmpdisplay != null){\n\t\t\t\tif(tmpdisplay === \"compact\"){\t\t\t\t\n\t\t\t\t\tthis.display = \"compact\";\t\t\t\n\t\t\t\t}else if(tmpdisplay === \"full\"){\n\t\t\t\t\tthis.display = \"full\";\n\t\t\t\t}else{\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errDisplay);\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t\t\n\t\t\t// Show / hide the error and warning messages\n\t\t\tif(typeof(tmpshowmsg)!= \"undefined\" && tmpshowmsg != null){\n\t\t\t\tif(tmpshowmsg === true){\n\t\t\t\t\tthis.showMsg = true;\n\t\t\t\t}else if (tmpshowmsg === false){\n\t\t\t\t\tthis.showMsg = false;\n\t\t\t\t}else{\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMsg);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Set the position of the widget\n\t\t\tif(typeof(tmpposition)!= \"undefined\" && tmpposition != null){\n\t\t\t\tif(tmpposition === \"free\"){\n\t\t\t\t\tthis.position = tmpposition;\n\t\t\t\t}else if (tmpposition === \"attach\" || tmpposition === \"fixed\"){\n\t\t\t\t\tif(this.inputDate !== null ){\n\t\t\t\t\t\tthis.position = tmpposition;\n\t\t\t\t\t}else{\t\t\t\t\t\n\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errPosition);\n\t\t\t\t\t\tthis.position = \"free\";\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t}\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errPosition2);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Set the weekdays that are blocked\n\t\t\tif(typeof(tmpblockweekdays) != \"undefined\" && tmpblockweekdays != null && this.dpMode !== \"time\"){\n\t\t\t\t// Checks if the object passed is an array\n\t\t\t\tif(Object.prototype.toString.call(tmpblockweekdays) === '[object Array]'){\n\t\t\t\t\tthis.blockdays = [];\n\t\t\t\t\tfor(var i=0;i<tmpblockweekdays.length;i++){\n\t\t\t\t\t\tswitch(tmpblockweekdays[i]){\n\t\t\t\t\t\t\tcase \"mon\":\n\t\t\t\t\t\t\t\tthis.blockdays.push(1);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"tue\":\n\t\t\t\t\t\t\t\tthis.blockdays.push(2);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"wed\":\n\t\t\t\t\t\t\t\tthis.blockdays.push(3);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"thu\":\n\t\t\t\t\t\t\t\tthis.blockdays.push(4);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"fri\":\n\t\t\t\t\t\t\t\tthis.blockdays.push(5);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"sat\":\n\t\t\t\t\t\t\t\tthis.blockdays.push(6);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"sun\":\n\t\t\t\t\t\t\t\tthis.blockdays.push(0);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthis.error.push(this.lang[this.language].errWeekDay + i);\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tthis.error.push(this.lang[this.language].errWeekDay);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t// Set the dates blocked\n\t\t\tif(typeof(tmpblockdates) != \"undefined\" && tmpblockdates != null && this.dpMode !== \"time\"){\t\t\t\n\t\t\t\tfor(var i = 0; i< tmpblockdates.length; i++){\n\t\t\t\t\t\t\n\t\t\t\t\tif(tmpblockdates[i].length === 1){\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar d = this.createDate(tmpblockdates[i][0]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(this.isDate(d)){\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.blockDates.push([d]);\t\t\t\t\t\t\n\t\t\t\t\t\t}else{\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if(tmpblockdates[i].length === 2){\t\t\t\t\t\n\t\t\t\t\t\tvar daterange = tmpblockdates[i];\n\t\t\t\t\t\tvar d1 = this.createDate(daterange[0]);\n\t\t\t\t\t\tvar d2 = this.createDate(daterange[1]);\n\t\t\t\t\t\tif(this.isDate(d1) && this.isDate(d2)){\n\t\t\t\t\t\t\tif(d1<= d2){\n\t\t\t\t\t\t\t\tthis.blockDates.push([d1,d2]);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\t\n\t\t\n\t\t// Validates min and max dates\n\t\tif(this.minDate != null && this.maxDate != null){\n\t\t\tif(this.minDate.getTime() > this.maxDate.getTime()){\n\t\t\t\tthis.minDate = null;\n\t\t\t\tthis.maxDate = null;\n\t\t\t\tthis.warning.push(this.lang[this.language].errMinMax);\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t// Validates the block dates\n\t\tfor(var i = 0; i< this.blockDates.length; i++){\n\t\t\tif(this.blockDates[i].length === 1){\t\t\t\n\t\t\t\tif(!this.dateInRange(this.blockDates[i][0],\"day\")){\t\t\t\t\t\n\t\t\t\t\tthis.blockDates.splice(i);\t\t\t\t\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif( ( (this.maxDate != null && this.blockDates[i][0] > this.maxDate) || (this.minDate != null && this.blockDates[i][1] < this.minDate)) || \n\t\t\t\t\tthis.blockDates[i][1] < this.blockDates[i][0]\n\t\t\t\t){\t\t\t\t\t\n\t\t\t\t\tthis.blockDates.splice(i);\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\t\n\t\t// Updates the weekdays positions in the array depending on the start day.\n\t\tfor(var i=0; i<this.startDay;i++){\n\t\t\tthis.lang[this.language].day.push(this.lang[this.language].day.shift());\n\t\t\tthis.lang[this.language].dayShort.push(this.lang[this.language].dayShort.shift());\t\t\t\t\n\t\t}\t\n\t}\n\n\treset (){\n\t\tthis.dpMode = \"datetime\";\t\n\t\t//this.inputDate = null;\n\t\tthis.showDate = true;\n\t\tthis.language = \"en\";\n\t\tthis.startDay = 1;\t// Monday\n\t\tthis.minDate = null;\n\t\tthis.maxDate = null;\n\t\tthis.showTitle = true;\n\t\tthis.blockdays = [];\n\t\tthis.display = \"full\";\n\t\tthis.showMsg = true;\n\t\tthis.blockDates = [];\n\t\tthis.dateFormat = \"dmy/\";\n\t\tthis.timeFormat = \"hm\";\n\t\tthis.position = \"free\";\n\t\t\n\t\tthis.error = [];\n\t\tthis.warning = [];\n\t\tthis.info = [];\n\t\t\n\t\tthis.fecha = null;\n\t\tthis.nuevaFecha = null;\n\t\t\n\t\tthis.setOptions(this.defOptions);\n\t\tthis.dpCurrWindow = \"calendar\";\n\t\t\n\t}\n\tshow (){\n\t\tvar dpInstance = this;\t\n\t\t\n\t\tif(this.initialized){\t\t\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tthis.error = [];\n\t\t\n\t\t\n\t\tif(this.inputDate != null && this.showDate === true){\t\t\n\t\t\tthis.fecha =  this.setStartDate();\t\t\n\t\t}\n\t\t\n\t\t// Check if the setDate method returns a valid date. If the returned value is not a valid date, sets the current date.\n\t\tif(!this.isDate(this.fecha)){\n\t\t\tthis.fecha = new Date();\n\t\t}\n\t\t\n\t\tif(this.minDate != null && this.fecha < this.minDate){\n\t\t\tthis.fecha = new Date(this.minDate.getTime());\n\t\t}\n\t\tif(this.maxDate != null && this.fecha > this.maxDate){\n\t\t\tthis.fecha = new Date(this.maxDate.getTime());\n\t\t}\n\t\t\n\t\tthis.nuevaFecha = new Date(this.fecha.getTime());\n\t\t\n\t\tthis.contenedor = document.createElement(\"div\");\n\t\tif(this.position === \"attach\"){\t\t\n\t\t\tthis.contenedor.className = \"orzk-dp_contenedor_attach\";\t\t\n\t\t\tvar coord = this.inputDate.getBoundingClientRect();\t\n\t\t\t\n\t\t\t//this.contenedor.style.top = (coord.top + coord.height + (this.inputDate.offsetTop - coord.top))+'px';\t\n\t\t\tthis.contenedor.style.top = (window.scrollY + coord.top + coord.height)+'px';\n\t\t\tthis.contenedor.style.left = (window.scrollX + coord.left)+'px';\t\t\n\t\t\t\t\n\t\t}else{\n\t\t\tthis.contenedor.className = \"orzk-dp_contenedor\";\n\t\t}\n\t\tthis.contenedor.id = \"datepicker\";\n\t\tthis.contenedor.onclick = function(){\n\t\t\t//this.parentNode.removeChild(this);\n\t\t};\n\t\t\n\t\tthis.dp = document.createElement(\"div\");\n\t\tif(this.position === \"attach\"){\n\t\t\tthis.dp.className = \"orzk-dp_datepicker_attach\";\n\t\t}else{\n\t\t\tthis.dp.className = \"orzk-dp_datepicker\";\n\t\t}\n\t\t\n\t\tif(this.title != null && this.showTitle){\n\t\t\tthis.titleContainer = document.createElement(\"div\");\n\t\t\tthis.titleContainer.className = \"orzk-dp_title\";\n\t\t\tthis.titleTxt = document.createTextNode(this.title);\n\t\t\tthis.titleContainer.appendChild(this.titleTxt);\n\t\t}\n\t\t\n\t\tif(this.dpMode !== \"time\"){\n\t\t\t// Year - month container\n\t\t\tthis.ymcontainer = document.createElement(\"div\");\n\t\t\t\n\t\t\t// Year block\n\t\t\tthis.yearContainer = document.createElement(\"div\");\n\t\t\tthis.yearContainer.className = \"orzk-dp_year_month_container\";\n\t\t\t\n\t\t\tthis.yearPrev = document.createElement(\"div\");\t\t\n\t\t\tthis.yearPrev.className = \"orzk-dp_arrow orzk-dp_left\";\n\t\t\tthis.yearPrev.id = \"dp_year_prev\";\n\t\t\tthis.yearPrev.onclick = function() {\t\t\t\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear()-1;\t\n\t\t\t\t\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\n\t\t\t\t\n\t\t\t\tdpInstance.updateDisplay();\n\t\t\t};\t\n\t\t\t\n\t\t\tthis.yearNext = document.createElement(\"div\");\t\t\n\t\t\tthis.yearNext.className = \"orzk-dp_arrow orzk-dp_right\";\n\t\t\tthis.yearNext.id = \"dp_year_next\";\n\t\t\tthis.yearNext.onclick = function() {\t\t\t\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear()+1;\t\n\t\t\t\t\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\n\t\t\t\t\n\t\t\t\tdpInstance.updateDisplay();\n\t\t\t};\t\t\n\t\t\t\n\t\t\tthis.year = document.createElement(\"div\");\n\t\t\tthis.year.className = \"orzk-dp_year_month\";\n\t\t\tthis.yearTxt = document.createTextNode(this.lang[this.language].month[this.fecha.getMonth()]);\n\t\t\tthis.year.onclick = function(){\n\t\t\t\tdpInstance.showCalendar();\n\t\t\t\tif(document.getElementById(\"dp-year-list\")== null || dpInstance.dpCurrWindow === \"time\"){\t\t\t\t\n\t\t\t\t\tdpInstance.printYearList(0);\n\t\t\t\t}else{\t\t\t\t\n\t\t\t\t\tdpInstance.updateDisplay();\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.year.appendChild(this.yearTxt);\n\t\t\t\n\t\t\tthis.yearContainer.appendChild(this.yearPrev);\t\t\n\t\t\tthis.yearContainer.appendChild(this.year);\n\t\t\tthis.yearContainer.appendChild(this.yearNext);\n\t\t\t\n\t\t\t// Month block\t\t\n\t\t\tthis.monthContainer = document.createElement(\"div\");\n\t\t\tthis.monthContainer.className=\"orzk-dp_year_month_container\";\n\t\t\t\n\t\t\tthis.monthPrev = document.createElement(\"div\");\n\t\t\tthis.monthPrev.className = \"orzk-dp_arrow orzk-dp_left\";\n\t\t\tthis.monthPrev.id = \"dp_month_prev\";\n\t\t\tthis.monthPrev.onclick = function() {\n\t\t\t\tvar month = dpInstance.nuevaFecha.getMonth() - 1;\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear();\n\t\t\t\t\n\t\t\t\tif(month < 0){\n\t\t\t\t\tmonth = 11;\n\t\t\t\t\tyear--;\n\t\t\t\t}\n\t\t\t\tdpInstance.nuevaFecha.setMonth(month);\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\n\t\t\t\t\n\t\t\t\tdpInstance.updateDisplay();\t\t\t\n\t\t\t};\t\n\t\t\t\n\t\t\tthis.monthNext = document.createElement(\"div\");\n\t\t\tthis.monthNext.className = \"orzk-dp_arrow orzk-dp_right\";\n\t\t\tthis.monthNext.id = \"dp_month_next\";\t\t\n\t\t\tthis.monthNext.onclick = function() {\n\t\t\t\tvar month = dpInstance.nuevaFecha.getMonth() + 1;\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear();\n\t\t\t\t\n\t\t\t\tif(month > 11){\n\t\t\t\t\tmonth = 0;\n\t\t\t\t\tyear++;\n\t\t\t\t}\n\t\t\t\tdpInstance.nuevaFecha.setMonth(month);\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\n\t\t\t\t\n\t\t\t\tdpInstance.updateDisplay();\n\t\t\t};\t\t\n\t\t\t\n\t\t\tthis.month = document.createElement(\"div\");\n\t\t\tthis.month.className = \"orzk-dp_year_month\";\n\t\t\tthis.monthTxt = document.createTextNode(this.lang[this.language].month[this.fecha.getMonth()]);\n\t\t\tthis.month.onclick = function(){\n\t\t\t\tdpInstance.showCalendar();\n\t\t\t\t\n\t\t\t\tif(document.getElementById(\"dp-month-list\")== null || dpInstance.dpCurrWindow === \"time\"){\t\t\t\t\n\t\t\t\t\tdpInstance.printMonthList();\n\t\t\t\t}else{\t\t\t\t\n\t\t\t\t\tdpInstance.updateDisplay();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t};\n\t\t\tthis.month.appendChild(this.monthTxt);\n\t\t\t\n\t\t\tthis.monthContainer.appendChild(this.monthPrev);\n\t\t\tthis.monthContainer.appendChild(this.month);\n\t\t\tthis.monthContainer.appendChild(this.monthNext);\n\t\t\t\n\t\t\tthis.ymcontainer.appendChild(this.monthContainer);\n\t\t\tthis.ymcontainer.appendChild(this.yearContainer);\n\t\t\t\n\t\t\t\n\t\t\t// Day block\n\t\t\tthis.daySelected = document.createElement(\"div\");\n\t\t\tthis.daySelected.className=\"orzk-dp_day\";\t\t\n\t\t\tthis.daySelectedTxt = document.createTextNode(this.fecha.getDate());\n\t\t\tthis.daySelected.appendChild(this.daySelectedTxt);\n\t\t\t\n\t\t\t// Day of the week block\n\t\t\tthis.dayWeek = document.createElement(\"div\");\n\t\t\tthis.dayWeek.className=\"orzk-dp_dayweek\";\n\t\t\tthis.dayWeekTxt = document.createTextNode(this.lang[this.language].day[this.fecha.getDay()]);\n\t\t\tthis.dayWeek.appendChild(this.dayWeekTxt);\n\t\t}\n\t\t\n\t\tif(this.dpMode !== \"date\"){\n\t\t\t// Time block\t\n\t\t\tthis.timeTxt = document.createElement(\"div\");\n\t\t\tthis.timeTxt.className = \"orzk-dp_time\";\t\t\n\t\t}\n\t\t\n\t\tvar dayhourContainer = null;\n\t\tif(this.dpMode === \"datetime\"){\n\t\t\t// Calendar / hour buttons\n\t\t\tdayhourContainer = document.createElement(\"div\");\n\t\t\tdayhourContainer.className = \"orzk-dp_dayhourcontainer\";\n\t\t\tthis.btnCalendar = document.createElement(\"div\");\n\t\t\tthis.btnCalendar.className = \"orzk-dp-icon-calendar orzk-dp_calendar_button orzk-dp_dayhour_button_selected\";\n\t\t\tthis.btnCalendar.onclick = function (){\n\t\t\t\tdpInstance.showCalendar();\n\t\t\t};\n\t\t\t\n\t\t\tthis.btnHour = document.createElement(\"div\");\n\t\t\tthis.btnHour.className = \"orzk-dp-icon-time orzk-dp_hour_button\";\n\t\t\tthis.btnHour.onclick = function (){\n\t\t\t\tdpInstance.showTime();\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tdayhourContainer.appendChild(this.btnCalendar);\n\t\t\tdayhourContainer.appendChild(this.btnHour);\n\t\t}\n\t\t\n\t\t// Message block\n\t\tthis.msgContainer = document.createElement(\"div\");\n\t\tthis.msgContainer.className = \"orzk-dp_msg orzk-dp_hide\";\n\t\tthis.msgContainer.onclick = function(){\n\t\t\tif(dpInstance.msgTxt.className.indexOf(\"hide\") !== -1){\n\t\t\t\tdpInstance.msgTxt.style.top = dpInstance.msgContainer.style.top + dpInstance.msgContainer.height;\n\t\t\t\tdpInstance.msgTxt.className = dpInstance.msgTxt.className.replace(/\\borzk-dp_hide\\b/,\"\");\n\t\t\t\tdpInstance.msgArrow.className = \"orzk-dp_up\";\n\t\t\t}else{\n\t\t\t\tdpInstance.msgTxt.className += \" orzk-dp_hide\";\t\n\t\t\t\tdpInstance.msgArrow.className = \"orzk-dp_down\";\n\t\t\t}\n\t\t};\n\t\tthis.msgTxt = document.createElement(\"div\");\n\t\tthis.msgTxt.className = \"orzk-dp_msg_list orzk-dp_hide\";\n\t\tthis.msgTxt.onclick = function(){\n\t\t\tdpInstance.msgTxt.className += \" orzk-dp_hide\";\n\t\t\tdpInstance.msgArrow.className = \"orzk-dp_down\";\n\t\t};\n\t\t\n\t\t\n\t\tif(this.dpMode !== \"date\"){\n\t\t\t// Clock block\n\t\t\tthis.timeContainer = document.createElement(\"div\");\n\t\t\tthis.timeContainer.className = \"orzk-dp_time_container orzk-dp_hide\";\n\t\t\tif(this.clockType === \"analog\"){\n\t\t\t\tthis.timeWindow = \"hour\";\t\n\t\t\t\t\n\t\t\t\tthis.timeMinutesContainer = document.createElement(\"div\");\n\t\t\t\tthis.timeMinutesContainer.className = \"orzk-dp_time_minutes\";\t\t\n\t\t\t\t\n\t\t\t\tthis.analogClockSVG = document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\");\n\t\t\t\tthis.svgNS = this.analogClockSVG.namespaceURI;\n\t\t\t\tthis.analogClockSVG.setAttribute(\"class\",\"orzk-dp_clock_svg orzk-dp_hide\");\n\t\t\t\tthis.clockHand = document.createElementNS(this.svgNS,\"line\");\n\t\t\t\tthis.clockHandSelected = document.createElementNS(this.svgNS,\"line\");\t\t\t\n\t\t\t\t\n\t\t\t\tthis.analogClockSVG.appendChild(this.clockHand);\n\t\t\t\tthis.analogClockSVG.appendChild(this.clockHandSelected);\n\t\t\t\t\n\t\t\t\t\n\t\t\t}/*else if(this.clockType == \"digital\"){\n\t\t\t\t\n\t\t\t}*/\n\t\t}\n\t\t\n\t\tif(this.dpMode !== \"time\"){\n\t\t\t// Calendar block\n\t\t\tthis.calendarContainer = document.createElement(\"div\");\t\t\n\t\t\tthis.printCalendar();\n\t\t}\n\t\t\n\t\tthis.tableContainer = document.createElement(\"div\");\n\t\tthis.tableContainer.className = \"orzk-dp_table_container\";\n\t\tif(this.dpMode !== \"time\"){\n\t\t\tthis.tableContainer.appendChild(this.calendarContainer);\n\t\t}\n\t\tif(this.dpMode !== \"date\"){\n\t\t\tthis.tableContainer.appendChild(this.timeContainer);\n\t\t\tthis.tableContainer.appendChild(this.analogClockSVG);\n\t\t}\n\t\t\n\t\t// Buttons\n\t\tvar btnContainer = document.createElement(\"div\");\n\t\tbtnContainer.className = \"orzk-dp_btn_container\";\n\t\t\n\t\tthis.btnCancel = document.createElement(\"div\");\n\t\tthis.btnCancel.className = \"orzk-dp_button\";\n\t\tthis.btnCancel.appendChild(document.createTextNode(this.lang[this.language].btncancel));\n\t\tthis.btnCancel.onclick = function(){\n\t\t\tdpInstance.nuevaFecha = dpInstance.fecha;\n\t\t\tdpInstance.close();\n\t\t\t\n\t\t};\n\t\t\n\t\tthis.btnOK = document.createElement(\"div\");\n\t\tthis.btnOK.className = \"orzk-dp_button\";\n\t\tthis.btnOK.appendChild(document.createTextNode(this.lang[this.language].btnok));\n\t\tthis.btnOK.onclick = function(){\t\t\n\t\t\tdpInstance.fecha = new Date(dpInstance.nuevaFecha.getTime());\t\t\n\t\t\tdpInstance.onSubmit(dpInstance.fecha);\t\t\t\n\t\t\tdpInstance.close();\t\t\n\t\t};\n\t\t\n\t\tbtnContainer.appendChild(this.btnCancel);\n\t\tbtnContainer.appendChild(this.btnOK);\n\t\t\n\t\t\n\t\tif(this.showTitle){\n\t\t\tthis.dp.appendChild(this.titleContainer);\n\t\t}\n\t\t\n\t\tthis.dp.appendChild(this.msgContainer);\n\t\tthis.dp.appendChild(this.msgTxt);\n\t\t\n\t\tif(this.dpMode !== \"time\"){\n\t\t\tthis.dp.appendChild(this.ymcontainer);\n\t\t\tif(this.display === \"full\"){\n\t\t\t\tthis.dp.appendChild(this.dayWeek);\t\n\t\t\t\tthis.dp.appendChild(this.daySelected);\n\t\t\t}\n\t\t}\n\t\tif((this.dpMode !== \"date\") || this.dpMode === \"time\"){\t\t\n\t\t\tthis.dp.appendChild(this.timeTxt);\n\t\t}\n\t\tif(this.dpMode === \"datetime\"){\n\t\t\tthis.dp.appendChild(dayhourContainer);\n\t\t}\n\t\t\n\t\tthis.dp.appendChild(this.tableContainer);\n\t\tthis.dp.appendChild(btnContainer);\n\t\t\n\t\tif(this.position === \"attach\"){\t\t\n\t\t\tvar arrow = document.createElement(\"div\");\n\t\t\tarrow.className = \"orzk-dp_arrow_attach\";\t\t\n\t\t\tthis.contenedor.appendChild(arrow);\n\t\t}\n\t\tthis.contenedor.appendChild(this.dp);\t\n\t\t\n\t\tdocument.body.appendChild(this.contenedor);\n\t\tif(this.dpMode === \"time\"){\n\t\t\tthis.dpCurrWindow = \"time\";\n\t\t}else{\n\t\t\tthis.dpCurrWindow = \"calendar\";\n\t\t}\n\t\tthis.updateDisplay();\n\t\t\n\t\tthis.initialized = true;\n\t}\n\n\t\n\tupdateDisplay (){\t\n\t\tif(this.dpMode !== \"time\"){\n\t\t\tthis.yearTxt.nodeValue = this.nuevaFecha.getFullYear();\n\t\t\tthis.monthTxt.nodeValue = this.lang[this.language].month[this.nuevaFecha.getMonth()];\n\t\t\tif(this.dateInRange(this.nuevaFecha,\"day\") && !this.dateIsBlocked(this.nuevaFecha)){\n\t\t\t\tthis.daySelectedTxt.nodeValue = this.nuevaFecha.getDate();\n\t\t\t\tthis.dayWeekTxt.nodeValue = this.lang[this.language].day[(this.nuevaFecha.getDay()+6)%7];\n\t\t\t}else{\n\t\t\t\tthis.daySelectedTxt.nodeValue = \"--\";\n\t\t\t\tthis.dayWeekTxt.nodeValue = \"-\";\n\t\t\t}\n\t\t\t\n\t\t\tthis.printCalendar();\n\t\t\tif(this.daySelectedTxt != null && this.daySelectedTxt.nodeValue !== \"--\"){\t\t\t\n\t\t\t\tdocument.getElementById(\"datepicker_d_\"+this.daySelectedTxt.nodeValue).className = \"orzk-dp_calendar_day_selected\";\n\t\t\t}\t\t\n\t\t}\n\t\tif(this.dpMode !== \"date\"){\n\t\t\tthis.updateTime(this.nuevaFecha);\t\t\n\t\t}\n\t\t\n\t\tif(this.dpCurrWindow === \"time\"){\t\t\n\t\t\tthis.showTime();\n\t\t}\n\t\t\n\t\tif(this.dpMode === \"time\" || (this.dpMode !== \"time\" && (this.dateInRange(this.nuevaFecha,\"day\") && !this.dateIsBlocked(this.nuevaFecha))) ){\n\t\t\tthis.btnOK.className = this.btnOK.className.replace(/\\borzk-dp_invisible\\b/,\"\");\n\t\t}else{\n\t\t\tif(this.btnOK.className.indexOf(\"orzk-dp_invisible\") === -1){\n\t\t\t\tthis.btnOK.className += \" orzk-dp_invisible\";\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\tif(this.showMsg === true && (this.info.length >0 || this.error.length > 0 || this.warning.length > 0)){\n\t\t\tthis.clearMsgContainer();\t\t\n\t\t\tvar icon;\n\t\t\t/*\n\t\t\tif(this.info.length > 0){\n\t\t\t\t\n\t\t\t}*/\n\t\t\t\n\t\t\tif(this.error.length>0){\n\t\t\t\ticon = document.createElement(\"div\");\n\t\t\t\ticon.className = \"orzk-dp_error_icon\";\n\t\t\t\ticon.appendChild(document.createTextNode(this.error.length + \" error\"));\n\t\t\t\tthis.msgContainer.appendChild(icon);\t\t\t\n\t\t\t\t\n\t\t\t\tfor(var i=0; i< this.error.length; i++){\n\t\t\t\t\tvar msg = document.createElement(\"div\");\n\t\t\t\t\tmsg.className = \"orzk-dp_msg_error\";\n\t\t\t\t\tmsg.appendChild(document.createTextNode(this.error[i]));\n\t\t\t\t\tthis.msgTxt.appendChild(msg);\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif(this.warning.length > 0){\t\n\t\t\t\ticon = document.createElement(\"div\");\n\t\t\t\ticon.className = \"orzk-dp_warning_icon\";\n\t\t\t\ticon.appendChild(document.createTextNode(this.warning.length + \" warning\"));\n\t\t\t\tthis.msgContainer.appendChild(icon);\t\n\t\t\t\t\n\t\t\t\tfor(var i=0; i< this.warning.length; i++){\n\t\t\t\t\tvar msg = document.createElement(\"div\");\n\t\t\t\t\tmsg.className = \"orzk-dp_msg_warning\";\n\t\t\t\t\tmsg.appendChild(document.createTextNode(this.warning[i]));\n\t\t\t\t\tthis.msgTxt.appendChild(msg);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.msgArrow = document.createElement(\"div\");\n\t\t\tthis.msgArrow.className = \"orzk-dp_down\";\n\t\t\tthis.msgContainer.appendChild(this.msgArrow);\n\t\t\tthis.msgContainer.className = this.msgContainer.className.replace(/\\borzk-dp_hide\\b/,\"\");\t\n\t\t}\n\t}\n\t\n\tdaysInMonth(){\n\t\treturn 32 - new Date(this.nuevaFecha.getFullYear(),this.nuevaFecha.getMonth(),32).getDate();\n\t}\n\t\n\tfirstDay (){\n\t\tvar wd = new Date(this.nuevaFecha.getFullYear(),this.nuevaFecha.getMonth()).getDay();\t\n\t\treturn (wd +(7-this.startDay))%7;\n\t}\n\t\n\tclearCalendarContainer (){\n\t\t// Elimina los elementos anteriores\n\t\twhile(this.calendarContainer.firstChild){\n\t\t\tthis.calendarContainer.removeChild(this.calendarContainer.firstChild);\n\t\t}\n\t}\n\t\n\tclearTimeContainer (){\n\t\t// Elimina los elementos anteriores\n\t\twhile(this.timeContainer.firstChild){\n\t\t\tthis.timeContainer.removeChild(this.timeContainer.firstChild);\n\t\t}\n\t}\n\n\tclearMsgContainer (){\t\n\t\t// Elimina los elementos anteriores\n\t\twhile(this.msgContainer.firstChild){\n\t\t\tthis.msgContainer.removeChild(this.msgContainer.firstChild);\n\t\t}\n\t\twhile(this.msgTxt.firstChild){\n\t\t\tthis.msgTxt.removeChild(this.msgTxt.firstChild);\n\t\t}\t\t\n\t}\n\n\tprintCalendar (){\n\t\tvar dpInstance = this;\n\t\tthis.clearCalendarContainer();\n\t\t\n\t\tthis.calendar = document.createElement(\"table\");\n\t\tthis.calendar.className=\"orzk-dp_days\";\n\t\t\n\t\tvar week = document.createElement(\"tr\");\n\t\tfor(var i = 0; i< this.lang[this.language].day.length;i++){\n\t\t\tvar day = document.createElement(\"th\");\n\t\t\tday.appendChild(document.createTextNode(this.lang[this.language].dayShort[i]));\n\t\t\tday.id = \"wd_\"+i;\n\t\t\tweek.appendChild(day);\n\t\t}\n\t\tthis.calendar.appendChild(week);\n\t\t\n\t\tvar first = this.firstDay();\n\t\tvar numDays = this.daysInMonth();\t\t\t\n\t\tvar numWeeks = Math.ceil((first + numDays)/7);\n\t\t\n\t\tvar currDate = null;\n\t\tvar dayCount = 1;\n\t\tfor(var i=0;i<numWeeks;i++){\n\t\t\tweek = document.createElement(\"tr\");\n\t\t\tfor(var j=0; j<=6;j++){\n\t\t\t\tvar day = document.createElement(\"td\");\n\t\t\t\tif(\t(i===0 && first > j) ||\t\t\t\t\t\t\t\t\t\t\t\t\t\t//No imprime los días de la primera semana anteriores al día 1 del mes\n\t\t\t\t\t(i===numWeeks-1 && ((first+numDays)%7) > 0 && j >= ((first + numDays)%7))\t// No imprime los días de la última semana posteriores al último día del mes\n\t\t\t\t){\n\t\t\t\t\t\n\t\t\t\t}else{\t\t\t\t\t\t\n\t\t\t\t\tday.appendChild(document.createTextNode(dayCount));\n\t\t\t\t\tday.id = \"datepicker_d_\"+dayCount;\n\t\t\t\t\t\n\t\t\t\t\tcurrDate = new Date(this.nuevaFecha.getTime());\n\t\t\t\t\tcurrDate.setDate(dayCount);\n\t\t\t\t\tif( this.dateInRange(currDate,'day') && !this.dateIsBlocked(currDate) ){\n\t\t\t\t\t\tday.className = \"orzk-dp_pickable\";\n\t\t\t\t\t\tday.onclick = function(){\n\t\t\t\t\t\t\tvar oldDaySelected = document.getElementById(\"datepicker_d_\"+dpInstance.daySelectedTxt.nodeValue);\n\t\t\t\t\t\t\tif(oldDaySelected != null){\n\t\t\t\t\t\t\t\toldDaySelected.className = oldDaySelected.className.replace(/\\borzk-dp_calendar_day_selected\\b/g,\"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdpInstance.nuevaFecha.setDate(this.id.substr(13));\n\t\t\t\t\t\t\tdpInstance.updateDisplay();\n\t\t\t\t\t\t};\n\t\t\t\t\t}else{\n\t\t\t\t\t\tday.className = \"orzk-dp_not_pickable\";\n\t\t\t\t\t}\n\t\t\t\t\tdayCount++;\n\t\t\t\t}\n\t\t\t\tweek.appendChild(day);\n\t\t\t}\n\t\t\tthis.calendar.appendChild(week);\n\t\t}\n\t\t\n\t\tthis.calendarContainer.appendChild(this.calendar);\n\t}\n\t\n\tprintMonthList (){\n\t\tvar dpInstance = this;\n\t\tthis.clearCalendarContainer();\n\t\t\n\t\tthis.monthList = document.createElement(\"table\");\n\t\tthis.monthList.className = \"orzk-dp_days\";\n\t\tthis.monthList.id = \"dp-month-list\";\n\t\tfor(var i = 0; i < 4;i++){\n\t\t\tvar row = document.createElement(\"tr\");\n\t\t\tfor(var j = 0; j < 3; j++){\n\t\t\t\tlet currMonth = i*3 + j;\n\t\t\t\tvar element = document.createElement(\"td\");\t\t\t\t\n\t\t\t\telement.appendChild(document.createTextNode(this.lang[this.language].monthShort[currMonth]));\n\t\t\t\tif(currMonth === this.nuevaFecha.getMonth()){\n\t\t\t\t\telement.className = \"orzk-dp_calendar_day_selected\";\n\t\t\t\t}\n\t\t\t\telement.id = \"datepicker_m_\"+currMonth;\n\t\t\t\tvar currDate = new Date(this.nuevaFecha.getTime());\n\t\t\t\tcurrDate.setMonth(currMonth);\n\t\t\t\t\n\t\t\t\tif(this.dateInRange(currDate,'month')){\n\t\t\t\t\telement.className += \" orzk-dp_pickable\";\n\t\t\t\t\telement.onclick = function(){\t\t\t\t\n\t\t\t\t\t\tdpInstance.nuevaFecha.setMonth(currMonth);\t\t\t\t\n\t\t\t\t\t\tdpInstance.updateDisplay();\n\t\t\t\t\t};\n\t\t\t\t}else{\n\t\t\t\t\telement.className = \"orzk-dp_not_pickable\";\n\t\t\t\t}\n\t\t\t\trow.appendChild(element);\n\t\t\t}\n\t\t\tthis.monthList.appendChild(row);\n\t\t}\n\t\t\n\t\tthis.calendarContainer.appendChild(this.monthList);\n\t}\n\t\n\tprintYearList (decade){\n\t\tvar dpInstance = this;\n\t\tthis.clearCalendarContainer();\n\t\t\n\t\tvar decades = Math.floor(this.nuevaFecha.getFullYear() / 20);\n\t\t// Removes the effect of rounding with Math.floor, that caused to show the next twenty years block when the year is multiple of 20.\n\t\tif(this.nuevaFecha.getFullYear() % 20 === 0){\n\t\t\tdecades--;\n\t\t}\n\t\tthis.decadeShift = this.decadeShift + decade;\n\t\t\n\t\tvar minYear = (decades + this.decadeShift) * 20 + 1;\n\t\tvar currYear = minYear;\t\t\n\t\t\n\t\tthis.decadeListContainer = document.createElement(\"div\");\n\t\tthis.decadeListContainer.className = \"orzk-dp_decade_list_container\";\n\t\tthis.decadeList = document.createElement(\"div\");\n\t\tthis.decadeList.className = \"orzk-dp_decade_list\";\n\t\tvar decadeListTxt = document.createTextNode(minYear + \" - \" + (minYear+19));\n\t\tthis.decadeList.appendChild(decadeListTxt);\n\t\t\n\t\tvar decadePrev = document.createElement(\"div\");\n\t\tdecadePrev.className = \"orzk-dp_arrow orzk-dp_left\";\t\n\t\tdecadePrev.id = \"dp_decade_prev\";\n\t\tdecadePrev.onclick = function() {\n\t\t\tdpInstance.printYearList(-1);\n\t\t};\t\n\t\t\n\t\tvar decadeNext = document.createElement(\"div\");\n\t\tdecadeNext.className = \"orzk-dp_arrow orzk-dp_right\";\t\n\t\tdecadeNext.id = \"dp_decade_next\";\t\t\n\t\tdecadeNext.onclick = function() {\n\t\t\tdpInstance.printYearList(1);\n\t\t};\n\t\tthis.decadeListContainer.appendChild(decadePrev);\n\t\tthis.decadeListContainer.appendChild(this.decadeList);\n\t\tthis.decadeListContainer.appendChild(decadeNext);\n\t\t\n\t\tthis.yearList = document.createElement(\"table\");\n\t\tthis.yearList.className = \"orzk-dp_days\";\n\t\tthis.yearList.id = \"dp-year-list\";\n\t\tfor(var i = 0; i < 5; i++){\n\t\t\tvar row = document.createElement(\"tr\");\n\t\t\tfor(var j=0; j<4;j++){\n\t\t\t\tvar element = document.createElement(\"td\");\n\t\t\t\telement.appendChild(document.createTextNode(currYear));\n\t\t\t\tvar tmp = new Date(this.nuevaFecha.getTime());\n\t\t\t\ttmp.setFullYear(currYear);\n\t\t\t\tif(this.dateInRange(tmp,\"year\")){\n\t\t\t\t\telement.className = \"orzk-dp_pickable\";\n\t\t\t\t\tif(currYear === this.nuevaFecha.getFullYear()){\n\t\t\t\t\t\telement.className += \" orzk-dp_calendar_day_selected\";\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\telement.id = \"datepicker_y_\"+currYear;\n\t\t\t\t\telement.onclick = function(){\t\t\t\t\t\n\t\t\t\t\t\tdpInstance.nuevaFecha.setFullYear(this.id.substr(13));\n\t\t\t\t\t\tdpInstance.decadeShift = 0;\n\t\t\t\t\t\tdpInstance.updateDisplay();\n\t\t\t\t\t};\n\t\t\t\t}else{\n\t\t\t\t\telement.className += \" orzk-dp_not_pickable\";\n\t\t\t\t}\n\t\t\t\tcurrYear++;\n\t\t\t\trow.appendChild(element);\n\t\t\t}\n\t\t\tthis.yearList.appendChild(row);\n\t\t}\n\t\t\n\t\tthis.calendarContainer.appendChild(this.decadeListContainer);\n\t\tthis.calendarContainer.appendChild(this.yearList);\n\t\t\t\n\t}\n\n\n\tprintAnalogTime (type){\t\n\t\tvar dpInstance = this;\n\t\t\n\t\tvar pos = this.timeContainer.getBoundingClientRect();\t\t\n\t\tvar radius = 110;\n\t\tvar sradius = 70;\n\t\tvar centerX = (pos.right - pos.left)/2 - radius - 15;\n\t\tvar scenterX = (pos.right - pos.left)/2 - sradius - 15;\n\t\tvar angle = 360 / 12;\n\t\tvar selectedItem = null;\n\t\t\n\t\tvar pTop, pLeft;\n\t\t\n\t\t\n\t\tthis.clearTimeContainer();\t\n\t\tthis.hideClockHand(this.clockHand);\n\t\t\n\t\tif(type === \"hour\"){\t\t\t\n\t\t\tselectedItem = this.nuevaFecha.getHours();\n\t\t\tfor(var i = 0; i< 12; i++){\n\t\t\t\t// 12h\n\t\t\t\tvar h = document.createElement(\"div\");\n\t\t\t\th.className = \"orzk-dp_time_element\";\t\t\t\n\t\t\t\th.appendChild(document.createTextNode(i+1));\n\t\t\t\th.id = \"dp_hourelement_\"+(i+1);\n\t\t\t\tpTop = (10 + radius + -radius*Math.cos((i+1)*(angle/180)*Math.PI));\n\t\t\t\tpLeft = (centerX + radius + radius*Math.sin((i+1)*(angle/180)*Math.PI));\n\t\t\t\th.style.top = pTop+'px';\n\t\t\t\th.style.left = pLeft+'px';\n\t\t\t\t\n\t\t\t\tif(selectedItem === i+1){\n\t\t\t\t\th.className += \" orzk-dp_time_item_selected\";\n\t\t\t\t\tthis.drawClockHand(this.clockHandSelected,pLeft+15,pTop+15);\n\t\t\t\t}\n\t\t\t\th.onmouseover = function (e){\n\t\t\t\t\tvar pos = this.getBoundingClientRect();\n\t\t\t\t\tvar dims = dpInstance.timeContainer.getBoundingClientRect();\n\t\t\t\t\tvar x = (pos.left - dims.left) +((pos.right-pos.left)/2)   ;\n\t\t\t\t\tvar y = pos.top-dims.top + ((pos.bottom-pos.top)/2);\n\t\t\t\t\t\n\t\t\t\t\tdpInstance.drawClockHand(dpInstance.clockHand, x,y);\n\t\t\t\t\tvar tmpFecha = new Date(dpInstance.nuevaFecha.getTime());\t\t\t\t\t\n\t\t\t\t\ttmpFecha.setHours(this.id.substr(15));\t\t\t\t\n\t\t\t\t\tdpInstance.updateTime(tmpFecha);\n\t\t\t\t};\n\t\t\t\th.onmouseout = function(e){\n\t\t\t\t\tdpInstance.hideClockHand(dpInstance.clockHand);\n\t\t\t\t\tdpInstance.updateTime(dpInstance.nuevaFecha);\n\t\t\t\t};\n\t\t\t\th.onclick = function(){\n\t\t\t\t\tdpInstance.nuevaFecha.setHours(this.id.substr(15));\t\t\t\t\t\n\t\t\t\t\tif(dpInstance.timeFormat === 'hm' || dpInstance.timeFormat === 'hms'){\t\t\t\t\t\n\t\t\t\t\t\tdpInstance.timeWindow = \"minutes\";\t\t\t\t\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"minutes\");\n\t\t\t\t\t}else{\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\n\t\t\t\t\t}\n\t\t\t\t\tdpInstance.updateDisplay();\t\t\t\t\n\t\t\t\t};\n\t\t\t\tthis.timeContainer.appendChild(h);\n\t\t\t\t\n\t\t\t\t// 24h\n\t\t\t\th = document.createElement(\"div\");\n\t\t\t\th.className = \"orzk-dp_time_element\";\n\t\t\t\tvar value = i+13;\n\t\t\t\tif(value === 24)\n\t\t\t\t\tvalue = 0;\n\t\t\t\t\n\t\t\t\th.appendChild(document.createTextNode(this.padInteger(value,2)));\n\t\t\t\th.id = \"dp_hourelement_\"+(value);\n\t\t\t\tpTop = (50 + sradius + -sradius*Math.cos((i+1)*(angle/180)*Math.PI));\t\t\t\t\n\t\t\t\tpLeft = (scenterX + sradius + sradius*Math.sin((i+1)*(angle/180)*Math.PI));\n\t\t\t\th.style.top = pTop+'px';\n\t\t\t\th.style.left = pLeft+'px';\n\t\t\t\tif(selectedItem === value){\n\t\t\t\t\th.className += \" orzk-dp_time_item_selected\";\n\t\t\t\t\tthis.drawClockHand(this.clockHandSelected,pLeft+15,pTop+15);\n\t\t\t\t}\n\t\t\t\th.onmouseover = function (){\n\t\t\t\t\tvar pos = this.getBoundingClientRect();\n\t\t\t\t\tvar dims = dpInstance.timeContainer.getBoundingClientRect();\n\t\t\t\t\tvar x = (pos.left - dims.left) +((pos.right-pos.left)/2)   ;\n\t\t\t\t\tvar y = pos.top-dims.top + ((pos.bottom-pos.top)/2);\n\t\t\t\t\t\n\t\t\t\t\tdpInstance.drawClockHand(dpInstance.clockHand, x,y);\n\t\t\t\t\tvar tmpFecha = new Date(dpInstance.nuevaFecha.getTime());\t\t\t\t\t\n\t\t\t\t\ttmpFecha.setHours(this.id.substr(15));\t\t\t\t\n\t\t\t\t\tdpInstance.updateTime(tmpFecha);\n\t\t\t\t};\n\t\t\t\th.onmouseout = function(e){\n\t\t\t\t\tdpInstance.hideClockHand(dpInstance.clockHand);\n\t\t\t\t\tdpInstance.updateTime(dpInstance.nuevaFecha);\n\t\t\t\t};\n\t\t\t\th.onclick = function(){\n\t\t\t\t\tdpInstance.nuevaFecha.setHours(this.id.substr(15));\t\t\t\t\n\t\t\t\t\tif(dpInstance.timeFormat === 'hm' || dpInstance.timeFormat === 'hms'){\n\t\t\t\t\t\tdpInstance.timeWindow = \"minutes\";\t\t\t\t\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"minutes\");\n\t\t\t\t\t}else{\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdpInstance.updateDisplay();\n\t\t\t\t};\n\t\t\t\tthis.timeContainer.appendChild(h);\n\t\t\t}\n\t\t\t\n\t\t}else{\n\t\t\t\n\t\t\tif(type===\"minutes\"){\n\t\t\t\tselectedItem = this.nuevaFecha.getMinutes();\n\t\t\t}else if(type===\"seconds\"){\n\t\t\t\tselectedItem = this.nuevaFecha.getSeconds();\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\tfor(var i = 0; i< 60; i++){\n\t\t\t\tangle = 360/60;\t\n\t\t\t\tvar e = document.createElement(\"div\");\n\t\t\t\te.className = \"orzk-dp_time_min_element\";\n\t\t\t\te.id = \"dp_minuteelement_\"+(i);\n\t\t\t\te.style.webkitTransform = 'rotate('+(angle*i)+'deg)'; \n\t\t\t\te.style.mozTransform    = 'rotate('+(angle*i)+'deg)'; \n\t\t\t\te.style.msTransform     = 'rotate('+(angle*i)+'deg)'; \n\t\t\t\te.style.oTransform      = 'rotate('+(angle*i)+'deg)'; \n\t\t\t\te.style.transform       = 'rotate('+(angle*i)+'deg)'; \n\t\t\t\t\n\t\t\t\tif(i%5 === 0){\n\t\t\t\t\tvar h = document.createElement(\"div\");\n\t\t\t\t\th.id = \"dp_minute_\"+(i);\n\t\t\t\t\th.className = \"orzk-dp_time_element\";\t\t\t\t\n\t\t\t\t\th.appendChild(document.createTextNode(this.padInteger(i,2)));\t\n\t\t\t\t\tpTop = (10 + radius + -radius*Math.cos((i)*(angle/180)*Math.PI));\t\t\t\t\n\t\t\t\t\tpLeft = (centerX + radius + radius*Math.sin((i)*(angle/180)*Math.PI));\n\t\t\t\t\tif(selectedItem === i){\n\t\t\t\t\t\th.className += \" orzk-dp_time_item_selected\";\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\th.style.top = pTop+'px';\n\t\t\t\t\th.style.left = pLeft+'px';\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tthis.timeContainer.appendChild(h);\n\t\t\t\t}\t\t\t\n\t\t\t\t\n\t\t\t\tpTop = (5 + radius + -radius*Math.cos((i)*(angle/180)*Math.PI));\t\t\t\t\n\t\t\t\tpLeft = (centerX + 10 + radius + radius*Math.sin((i)*(angle/180)*Math.PI));\n\t\t\t\tif(selectedItem === i){\t\t\t\t\n\t\t\t\t\tthis.drawClockHand(this.clockHandSelected,pLeft+5,pTop+20);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\te.style.top = pTop+'px';\n\t\t\t\te.style.left = pLeft+'px';\n\t\t\t\te.onmouseover = function (){\n\t\t\t\t\tvar pos = this.getBoundingClientRect();\n\t\t\t\t\tvar dims = dpInstance.timeContainer.getBoundingClientRect();\n\t\t\t\t\tvar x = (pos.left - dims.left) +((pos.right-pos.left)/2)   ;\n\t\t\t\t\tvar y = pos.top-dims.top + ((pos.bottom-pos.top)/2);\n\t\t\t\t\t\n\t\t\t\t\tdpInstance.drawClockHand(dpInstance.clockHand, x,y);\n\t\t\t\t\t\n\t\t\t\t\tvar tmpFecha = new Date(dpInstance.nuevaFecha.getTime());\n\t\t\t\t\tif(type===\"minutes\"){\n\t\t\t\t\t\ttmpFecha.setMinutes(this.id.substr(17));\n\t\t\t\t\t}else if(type===\"seconds\"){\n\t\t\t\t\t\ttmpFecha.setSeconds(this.id.substr(17));\n\t\t\t\t\t}\n\t\t\t\t\tdpInstance.updateTime(tmpFecha);\n\t\t\t\t};\n\t\t\t\te.onmouseout = function(e){\n\t\t\t\t\tdpInstance.hideClockHand(dpInstance.clockHand);\t\n\t\t\t\t\tdpInstance.updateTime(dpInstance.nuevaFecha);\n\t\t\t\t};\n\t\t\t\te.onclick = function(){\n\t\t\t\t\tvar id = this.id.substr(17);\n\t\t\t\t\tif(dpInstance.timeFormat === 'hm'){\n\t\t\t\t\t\tdpInstance.nuevaFecha.setMinutes(id);\n\t\t\t\t\t\tdpInstance.timeWindow = \"hour\";\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\n\t\t\t\t\t}else if(dpInstance.timeFormat === 'hms'){\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\tif(type===\"minutes\"){\n\t\t\t\t\t\t\tdpInstance.nuevaFecha.setMinutes(id);\n\t\t\t\t\t\t\tdpInstance.timeWindow = \"seconds\";\n\t\t\t\t\t\t\tdpInstance.printAnalogTime(\"seconds\");\n\t\t\t\t\t\t}else if(type===\"seconds\"){\n\t\t\t\t\t\t\tdpInstance.nuevaFecha.setSeconds(id);\n\t\t\t\t\t\t\tdpInstance.timeWindow = \"hour\";\n\t\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\tdpInstance.updateDisplay();\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t};\n\t\t\t\tthis.timeMinutesContainer.appendChild(e);\n\t\t\t\tthis.timeContainer.appendChild(this.timeMinutesContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawClockHand (line,x2,y2){\n\t\tvar dims = this.timeContainer.getBoundingClientRect();\n\t\t\n\t\tthis.analogClockSVG.setAttribute('width',dims.right - dims.left);\n\t\tthis.analogClockSVG.setAttribute('height',dims.bottom - dims.top);\t\n\t\t\n\t\tvar x1 = (dims.right - dims.left)/2;\n\t\tvar y1 = ((dims.bottom - dims.top)/2)+5;\n\t\t\n\t\tline.setAttribute('x1',x1);\n\t\tline.setAttribute('y1',y1);\n\t\tline.setAttribute('x2',x2);\n\t\tline.setAttribute('y2',y2);\n\t\tline.setAttribute('stroke','#8bb6cf');\n\t\tline.setAttribute('stroke-width', 4);\n\t}\n\n\thideClockHand (line){\n\t\tline.setAttribute('stroke-width',0);\n\t}\n\n\tclose (){\n\t\tthis.initialized = false;\n\t\tthis.contenedor.parentNode.removeChild(this.contenedor);\n\t}\n\t\n\tprintDate (){\t\n\t\tif(this.inputDate != null && this.showDate === true){\n\t\t\tthis.inputDate.value = this.getFullDateString();\n\t\t}else{\n\t\t}\n\t}\n\n\tgetFullDateString (){\t\n\t\tif(this.dpMode === 'date'){\n\t\t\treturn this.getDateString(this.fecha);\n\t\t}else if(this.dpMode === 'time'){\t\t\t\t\n\t\t\treturn this.getTimeString(this.fecha);\n\t\t}else{\n\t\t\treturn (this.getDateString(this.fecha)+\" \"+this.getTimeString(this.fecha));\t\t\t\t\t\t\t\t\t\n\t\t}\t\t\n\t}\n\t\n\tshowCalendar (){\t\n\t\tif((this.dpMode === \"datetime\" && this.dpCurrWindow === \"time\") || this.dpMode === \"date\"){\n\t\t\tif(this.dpMode === \"datetime\"){\n\t\t\t\tthis.timeContainer.className += \" orzk-dp_hide\";\n\t\t\t\tthis.analogClockSVG.setAttribute('class','orzk-dp_clock_svg orzk-dp_hide');\n\t\t\t\tthis.btnHour.className = this.btnHour.className.replace(/\\borzk-dp_dayhour_button_selected\\b/,\"\");\n\t\t\t\tthis.btnCalendar.className += \" orzk-dp_dayhour_button_selected\";\n\t\t\t}\n\t\t\tthis.calendarContainer.className = this.calendarContainer.className.replace(/\\borzk-dp_hide\\b/,\"\");\n\t\t\tthis.dpCurrWindow = \"calendar\";\n\t\t\t//this.updateTime(this.nuevaFecha);\n\t\t\tthis.updateDisplay();\n\t\t}\n\t}\n\n\tshowTime (){\n\t\tif((this.dpMode === \"datetime\" && this.dpCurrWindow === \"calendar\") || (this.dpMode === \"time\")){\n\t\t\tif(this.dpMode === \"datetime\"){\n\t\t\t\tthis.calendarContainer.className += \" orzk-dp_hide\";\n\t\t\t\tthis.btnCalendar.className = this.btnCalendar.className.replace(/\\borzk-dp_dayhour_button_selected\\b/,\"\");\n\t\t\t\tthis.btnHour.className += \" orzk-dp_dayhour_button_selected\";\n\t\t\t}\n\t\t\tthis.timeContainer.className = this.timeContainer.className.replace(/\\borzk-dp_hide\\b/,\"\");\t\t\n\t\t\tthis.analogClockSVG.setAttribute('class','orzk-dp_clock_svg');\n\t\t\tif(this.dpMode === 'datetime'){\n\t\t\t\tthis.timeWindow = \"hour\";\n\t\t\t\tthis.printAnalogTime(\"hour\");\n\t\t\t}else{\n\t\t\t\tthis.printAnalogTime(this.timeWindow);\n\t\t\t}\n\t\t\tthis.dpCurrWindow = \"time\";\n\t\t\tthis.updateTime(this.nuevaFecha);\n\t\t}\n\t}\n\n\tgetDateString (d){\n\t\tvar sep = this.dateFormat.substr(3);\n\t\tvar year = d.getFullYear();\n\t\tvar month = this.padInteger(d.getMonth()+1,2);\n\t\tvar day = this.padInteger(d.getDate(),2);\n\t\t\n\t\tswitch(this.dateFormat.substr(0,3)){\n\t\t\tcase \"ymd\":\n\t\t\t\treturn year+sep+month+sep+day;\n\t\t\tcase \"ydm\":\n\t\t\t\treturn year+sep+day+sep+month;\n\t\t\tcase \"mdy\":\n\t\t\t\treturn month+sep+day+sep+year;\n\t\t\tcase \"dmy\":\n\t\t\t\treturn day+sep+month+sep+year;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\t\n\n\tgetTimeString (d,format=false){\n\t\tvar time = '';\n\t\tswitch (this.timeFormat.length){\t\t\n\t\t\tcase 3:\n\t\t\t\tif(format===true && this.dpCurrWindow === \"time\" && this.timeWindow===\"seconds\"){\n\t\t\t\t\ttime = ':<span class=\"orzk-dp_time_display_selected\">'+this.padInteger(d.getSeconds(),2)+'</span>';\n\t\t\t\t}else{\t\t\t\t\n\t\t\t\t\ttime = ':'+this.padInteger(d.getSeconds(),2);\n\t\t\t\t}\n\t\t\tcase 2:\n\t\t\t\tif(format===true && this.dpCurrWindow === \"time\" && this.timeWindow===\"minutes\"){\n\t\t\t\t\ttime = ':<span class=\"orzk-dp_time_display_selected\">'+this.padInteger(d.getMinutes(),2)+'</span>' + time;\n\t\t\t\t}else{\t\t\n\t\t\t\t\ttime = ':'+this.padInteger(d.getMinutes(),2) + time;\n\t\t\t\t}\n\t\t\tcase 1:\n\t\t\t\tif(this.timeFormat === 'h'){\n\t\t\t\t\ttime += \":00\";\n\t\t\t\t}\n\t\t\t\tif(format===true && this.dpCurrWindow === \"time\" && this.timeWindow===\"hour\"){\n\t\t\t\t\ttime = '<span class=\"orzk-dp_time_display_selected\">'+this.padInteger(d.getHours(),2)+'</span>'\t+ time;\n\t\t\t\t}else{\t\t\n\t\t\t\t\ttime = this.padInteger(d.getHours(),2) + time;\n\t\t\t\t}\n\t\t}\n\t\treturn time;\n\t}\n\n\tupdateTime (d){\t\n\t\tthis.timeTxt.innerHTML = this.getTimeString(d,true);\t\n\t}\n\n\tgetDate (){\n\t\tif(this.fecha !== null){\n\t\t\treturn new Date(this.fecha.getTime());\n\t\t}else{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tcreateDate (d){\n\t\tif(this.isDate(d)){\n\t\t\treturn d;\n\t\t}else{\t\t\n\t\t\tif(typeof(d) === 'string'){\n\t\t\t\tvar sep = this.dateFormat.substr(3);\t\t\t\n\t\t\t\tvar fecha = [];\n\t\t\t\tvar hora = [];\n\t\t\t\t\n\t\t\t\tif(this.dpMode === 'date'){\n\t\t\t\t\tfecha = d.split(sep);\n\t\t\t\t\tif(fecha.length !== 3){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\thora = [0,0,0,0];\n\t\t\t\t}else if(this.dpMode === 'datetime'){\n\t\t\t\t\tvar fh = d.split(\" \");\n\t\t\t\t\tif(fh.length > 2){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tfecha = fh[0].split(sep);\n\t\t\t\t\tif(fh.length === 2){\n\t\t\t\t\t\thora = fh[1].split(\":\");\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(fecha.length !== 3){\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tfor(var i = 0; i< 4; i++){\n\t\t\t\t\t\tif(typeof(hora[i]) == \"undefined\" || this.timeFormat.length <= i){\n\t\t\t\t\t\t\thora.push(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tfecha = new Date();\n\t\t\t\t\thora = d.split(\":\");\n\t\t\t\t\t\n\t\t\t\t\tfor(var i = 0; i< 4; i++){\n\t\t\t\t\t\tif(typeof(hora[i]) == \"undefined\" || this.timeFormat.length <= i){\n\t\t\t\t\t\t\thora.push(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfecha.setHours(hora[0],hora[1],hora[2],hora[3]);\t\t\t\t\n\t\t\t\t\treturn fecha;\n\t\t\t\t\t\n\t\t\t\t}\t\t\t\n\t\t\t\t\n\t\t\t\tswitch(this.dateFormat.substr(0,3)){\n\t\t\t\t\tcase \"ymd\":\t\t\t\t\t\n\t\t\t\t\t\treturn new Date(fecha[0],fecha[1]-1,fecha[2],hora[0],hora[1],hora[2],hora[3]);\n\t\t\t\t\tcase \"ydm\":\n\t\t\t\t\t\treturn new Date(fecha[0],fecha[2]-1,fecha[1],hora[0],hora[1],hora[2],hora[3]);\n\t\t\t\t\tcase \"dmy\":\t\t\t\t\t\n\t\t\t\t\t\treturn new Date(fecha[2],fecha[1]-1,fecha[0],hora[0],hora[1],hora[2],hora[3]);\n\t\t\t\t\tcase \"mdy\":\t\t\t\t\t\n\t\t\t\t\t\treturn new Date(fecha[2],fecha[0]-1,fecha[1],hora[0],hora[1],hora[2],hora[3]);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tsetStartDate (){\n\t\tvar result = new Date();\n\t\t\n\t\tif(this.inputDate !== null){\t\t\t\n\t\t\tif(this.inputDate.value.length > 0){\n\t\t\t\tvar result = this.createDate(this.inputDate.value);\t\t\t\t\n\t\t\t\tif(result !== false){\n\t\t\t\t\tif(!this.isDate(result)){\n\t\t\t\t\t\tresult = new Date();\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tthis.error.push(this.lang[this.language].errDateFormat);\n\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t}\n\t\t}\t\n\t\t\n\t\treturn result;\n\t}\n\n\tsetDate (d){\n\t\tif(this.isDate(d)){\n\t\t\tthis.fecha = new Date(d.getTime());\n\t\t\treturn true;\n\t\t}else{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tonSubmit (){\n\t\tthis.printDate();\n\t}\n\n\tpadInteger (number,max){\n\t\tif(number < Math.pow(10,(max-1))){\n\t\t\tvar z = '';\n\t\t\tfor(var i = 0;i< max; i++)\n\t\t\t\tz += '0';\n\t\t\tnumber = (z + number).slice(max*-1);\n\t\t}\n\t\treturn number;\n\t}\n\n\trad2deg (x){\n\t\treturn x * (180/Math.PI);\n\t}\n\n\tdeg2rad (x){\n\t\treturn x * (Math.PI/180);\n\t};\n\n\n\t// Checks if a date object contains is a valid date\n\tisDate (date) {\n\t\treturn date && Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date);\n\t};\n\n\t// Checks if a date is allowed comparing it with the min and max dates, and the restricted dates list\n\tdateInRange (date,type){\n\t\t\n\t\tif(type === \"year\"){\t\t\t\n\t\t\tif(\t(this.minDate == null || (this.minDate.getFullYear() <= date.getFullYear()) ) &&\n\t\t\t\t(this.maxDate == null || (this.maxDate.getFullYear() >= date.getFullYear()) ) ){\t\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t}else{\t\t\t\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif(type === 'month'){\t\t\n\t\t\t\n\t\t\tvar tmpdate = new Date(date.getFullYear(),date.getMonth());\n\t\t\tvar tmpmindate = null;\n\t\t\tvar tmpmaxdate = null;\n\t\t\t\n\t\t\tif(this.minDate !== null)\t\t\n\t\t\t\ttmpmindate = new Date(this.minDate.getFullYear(),this.minDate.getMonth());\n\t\t\t\n\t\t\tif(this.maxDate !== null)\n\t\t\t\ttmpmaxdate = new Date(this.maxDate.getFullYear(),this.maxDate.getMonth());\n\t\t\t\n\t\t\tif( (tmpmindate === null || (tmpdate >= tmpmindate)) &&\n\t\t\t\t(tmpmaxdate === null || (tmpdate <= tmpmaxdate)) )\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\n\t\t\t}\t\t\n\t\t\t\n\t\t}\n\t\tif(type === 'day'){\n\t\t\tif( (this.minDate == null || (this.minDate != null && date >= this.minDate)) && \n\t\t\t\t(this.maxDate == null || (this.maxDate != null && date <= this.maxDate)) )\n\t\t\t{\t\t\t\n\t\t\t\treturn true;\n\t\t\t}else{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n\tdateIsBlocked (date){\n\t\t// Checks if the date is one of the blocked days\n\t\tif(this.blockdays.length > 0 && this.blockdays.indexOf(date.getDay()) > -1){\n\t\t\treturn true;\n\t\t}\t\n\t\t\n\t\tvar tmpdate = new Date(date.getTime());\n\t\ttmpdate.setHours(0,0,0,0);\n\t\t\n\t\t// Checks if the date is in the list of blocked dates\n\t\tfor(var i = 0; i< this.blockDates.length; i++){\n\t\t\tif(this.blockDates[i].length === 1){\t\t\t\n\t\t\t\tvar tmp = this.blockDates[i][0];\n\t\t\t\tif (tmp.getFullYear() === date.getFullYear() &&\n\t\t\t\t\ttmp.getMonth() === date.getMonth() &&\n\t\t\t\t\ttmp.getDate() === date.getDate()){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\t\n\t\t\t\tif(tmpdate.getTime() >= this.blockDates[i][0].getTime() && (tmpdate.getTime() <= this.blockDates[i][1].getTime())){\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n}\n\n/* Exports public methods for Google Closure Compiler */\n/*\nwindow['Datepicker'] = Datepicker;\nDatepicker.prototype['show'] = Datepicker.prototype.show;\nDatepicker.prototype['reset'] = Datepicker.prototype.reset;\nDatepicker.prototype['close'] = Datepicker.prototype.close;\nDatepicker.prototype['setOptions'] = Datepicker.prototype.setOptions;\nDatepicker.prototype['getDate']\t= Datepicker.prototype.getDate;\nDatepicker.prototype['setDate']\t= Datepicker.prototype.setDate;\t\nDatepicker.prototype['setStartDate']\t= Datepicker.prototype.setStartDate;\t\nDatepicker.prototype['printDate'] =\tDatepicker.prototype.printDate;\nDatepicker.prototype['onSubmit'] = Datepicker.prototype.onSubmit;\nDatepicker.prototype['getFullDateString'] = Datepicker.prototype.getFullDateString;\nDatepicker.prototype['isDate'] = Datepicker.prototype.isDate;*/","/home/ielizari/proyectos/tasker/src/front/application/importDatabase.ts",["337"],"import { ApiResponse, ApiResponseBuilder } from '../../api/domain/api-response'\n\nexport interface importForm {\n    dbfile: File\n}\n\n// TODO: El archivo debería enviarse como tal, y la comprobación de si es una base de datos válida debería hacerse en el backend dependiendo del \n//  repositorio utilizado. Debido a problemas al enviar el archivo a través del fetch con mock service worker se pospone este cambio para poder\n//  continuar con el desarrollo\nconst readFile = (file: File): Promise<object> => {\n    return new Promise((resolve,reject) => {\n        let reader = new FileReader()\n        reader.onload = (function(theFile) {\n            return function(e) {\n                try{\n                    let res = JSON.parse(reader.result as string)\n                    resolve(res) \n                }catch(e){\n                   reject('El archivo no es una base de datos válida')\n                }\n            };\n        })(file);  \n        reader.readAsText(file as File);\n    })\n    \n}\nexport const importDb = async (db: importForm): Promise<ApiResponse> => {\n    \n    let dbfile = null\n    await readFile(db.dbfile).then(\n        result => {\n            console.log(result)\n            dbfile = result\n        },\n        error => {            \n            throw new Error(error)            \n        }\n    )\n    \n    return await fetch('http://localhost:3000/api/db/import',{\n        method: 'POST',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify(dbfile)\n    })\n        .then(res => res.json())        \n        .then(\n            (result) => {              \n                return result\n             },\n            (error) => { \n                throw new Error(error)\n            }\n        )\n}\n\n","/home/ielizari/proyectos/tasker/src/front/application/newDatabase.ts",["338"],"import { ApiResponse, ApiResponseBuilder } from '../../api/domain/api-response'\n\nexport const newDb = async (): Promise<ApiResponse> => {    \n    \n    return await fetch('http://localhost:3000/api/db/new',{\n        method: 'POST',\n    })\n        .then(res => res.json())        \n        .then(\n            (result) => {              \n                return result\n             },\n            (error) => { \n                throw new Error(error)\n            }\n        )\n}","/home/ielizari/proyectos/tasker/src/front/application/deleteTask.ts",[],"/home/ielizari/proyectos/tasker/src/front/application/updateTask.ts",[],"/home/ielizari/proyectos/tasker/src/front/application/getWorklogList.ts",[],"/home/ielizari/proyectos/tasker/src/front/application/addWorklog.ts",[],"/home/ielizari/proyectos/tasker/src/front/application/updateWorklog.ts",[],"/home/ielizari/proyectos/tasker/src/front/application/getWorklog.ts",[],"/home/ielizari/proyectos/tasker/src/front/application/deleteWorklog.ts",[],"/home/ielizari/proyectos/tasker/src/front/domain/task-definitions.ts",["339"],"export const TaskStatus = {\n    pending:        { label: \"Pendiente\",   value: \"1\"},\n    incomplete:     { label: \"Incompleto\",  value: \"2\"},\n    completed:      { label: \"Completado\",  value: \"3\"},\n    cancelled:      { label: \"Cancelado\",   value: \"4\"},\n}\n\nexport const TaskPriority = {\n    low:        { label: \"Baja\",    value: \"1\"},\n    medum:      { label: \"Media\",   value: \"2\"},\n    high:       { label: \"Alta\",    value: \"3\"},\n    extreme:    { label: \"Extrema\", value: \"4\"}\n}\n\nexport const ConstObjectToSelectOptionsArray = (object) => {\n    let result = []\n    Object.keys(object).map((item)=>{\n        result.push(object[item])\n    })\n    return result\n}","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/block.tsx",["340"],"import React from 'react'\nimport styled from 'styled-components'\nimport {common, font, color } from '../../../styles/theme'\nimport { BlockActions } from '../common/block-actions'\n\nexport const BlockContainer = styled.div`\n    margin: 1rem;\n    border-style: solid;\n    border-color: #000;\n    border-width: 1px;\n    ${common.roundedCorners()};\n`\n\nconst BlockTitle = styled.div`\n    ${font.h3()};\n    color: ${color.white};\n    background-color: ${color.orange};\n    ${common.roundedCornersTop()};\n    padding: 1rem;\n`\n\nexport const BlockEmptySet = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 1rem;\n    font-style: italic;\n    color: ${color.black}\n`\n\nexport const BlockEmptyComponent = () => {\n    return (\n        <BlockEmptySet>\n            No se han encontrado resultados\n        </BlockEmptySet>\n    )\n}\nexport const BlockHeaderComponent = (props) => {\n    const [title, setTitle] = React.useState<string>(props.title || 'Sin título')\n    const [actions, setActions] = React.useState<Array<any>>([])\n\n    React.useEffect(() => {\n        setActions(props.actions)\n    },[actions])\n\n    React.useEffect(() => {\n        setTitle(props.title)\n    },[props.title])\n\n    return (\n        <>\n            <BlockTitle>{title}</BlockTitle>     \n            {actions && actions.length > 0 &&\n                <BlockActions \n                    actions={actions}\n                />\n            }\n        </>\n    )\n}","/home/ielizari/proyectos/tasker/src/front/application/getTaskList.tsx",["341"],"import { TaskList} from './../domain/task-list'\nimport { ApiResponse } from '../../api/domain/api-response'\nimport { TaskDetail } from '../domain/task-detail'\n \nexport const getTaskList = async (filters?: Partial<TaskDetail>): Promise<ApiResponse> => {\n    return await fetch(`http://localhost:3000/api/tasks`,{\n        method: 'POST',\n        body: JSON.stringify(filters)\n    })\n        .then(res => res.json())        \n        .then(\n            (result) => {  \n                return result\n             },\n            (error) => { \n                throw new Error(error)\n            }\n        )\n}","/home/ielizari/proyectos/tasker/src/front/application/getTask.tsx",[],"/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/block-actions.tsx",["342","343","344"],"import React from 'react'\nimport styled from 'styled-components'\nimport { color, font, common } from '../../../styles/theme'\nimport { IconLink, IconButton } from '../common/icon-button'\nimport { IconType} from 'react-icons'\nimport { FormBuilder } from '../common/form/form'\n\nconst BlockActionsContainer = styled.div`\n    display: flex;\n    background-color: ${color.lightGrey};\n    padding: 0.5rem;\n    flex-wrap: wrap;\n    flex-direction: row;\n`\nexport interface Action {\n    key: string\n    route: string\n    text: string\n    icon: IconType | null\n    handler: any\n    type?: string\n    view?: string\n    items?: Array<Action>\n    initValues?: Partial<Action>\n    validation?: object\n    onSubmit?: object\n}\n\nexport const BlockActions = (props) => {\n    const [actions,setActions] = React.useState<Array<Action>>(props.actions || [])    \n  \n    React.useEffect(() => {\n        setActions(props.actions)\n    },[props.actions])\n\n    return (\n        <BlockActionsContainer>\n            {\n                (actions && actions.length > 0) ?\n                    actions.map((action: Action) => {                \n                        if(!action.type || action.type === 'link'){\n                            return (                                \n                                <IconLink \n                                    key={action.text}\n                                    route={action.route}\n                                    text={action.text}\n                                    icon={action.icon}\n                                />\n                            )\n                        }else if(action.type === 'button'){\n                            return (\n                                <IconButton \n                                    key={action.text}\n                                    text={action.text}\n                                    icon={action.icon}\n                                    onClick={action.handler}\n                                />\n                            )\n                        }else if(action.type === 'form'){\n                            return (\n                                <FormBuilder \n                                    key = {action.key }\n                                    formView = {action.view}\n                                    formItems = {action.items}\n                                    initValues = {action.initValues}\n                                    validation = {action.validation}\n                                    onSubmit = {action.onSubmit}\n                                />\n                            )\n                        }                        \n                    })\n                    :\n                    ''\n            }\n        </BlockActionsContainer>\n    )\n}","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/modal.tsx",[],"/home/ielizari/proyectos/tasker/src/front/application/addTask.tsx",[],"/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/icon-button.tsx",["345","346"],"import React from 'react'\nimport styled from 'styled-components'\nimport { color, common } from '../../../styles/theme'\nimport { Link } from 'react-router-dom'\nimport {IconType} from 'react-icons'\nimport { BlockActions } from './block-actions'\n\nconst LinkWrapper = styled(Link)`  \n    display: inline-flex;\n    align-items: center;\n    justify-content: space-between;\n    background-color: ${color.lightGrey};\n    ${common.roundedCorners()};\n    padding: 0.5rem;\n    flex-wrap: wrap;\n    color: ${color.veryDarkGrey} !important;    \n    transition: background-color .3s;\n\n    :hover, :hover span{\n        background-color: ${color.semiLightGrey};\n    }\n`;\n\nconst ButtonWrapper = styled.button`  \n    display: inline-flex;\n    align-items: center;\n    justify-content: space-between;\n    background-color: ${color.lightGrey};\n    ${common.roundedCorners()};\n    padding: 0.5rem;\n    color: ${color.veryDarkGrey} !important;\n    transition: background-color .3s;\n\n    :hover, :hover span{\n        background-color: ${color.semiLightGrey};\n    }\n`;\n\nconst IconWrapper = styled.span`\n    display: inline-flex;\n    align-items: center;\n    margin-right: 1rem;\n    transition: background-color .3s;\n`\n\nexport const IconButton = (props) => {\n    const [icon,setIcon] = React.useState(null)\n    const [text, setText] = React.useState('')  \n\n    React.useEffect(()=> {\n        setIcon(props.icon)\n    },[props.icon])\n    \n    React.useEffect(()=> {\n        setText(props.text)\n    },[props.text])\n\n    return (\n        <ButtonWrapper\n            className={props.className}\n            onClick={props.onClick}\n            role=\"button\"\n            aria-label={props.text}\n            type={props.type}\n        >\n            <IconWrapper className={props.className}>{icon}</IconWrapper>       \n            {text}\n        </ButtonWrapper>\n    )\n}\n\nexport const IconLink = (props) => {\n    const [icon,setIcon] = React.useState(null)\n    const [route, setRoute] = React.useState(props.route || '')\n    const [text, setText] = React.useState(props.text || '')\n\n   \n    React.useEffect(()=> {\n        setIcon(props.icon)\n    },[props.icon])\n\n    React.useEffect(()=> {\n        setRoute(props.route)\n    },[props.route])\n\n    React.useEffect(()=> {\n        setText(props.text)\n    },[props.text])\n\n    return (\n        <LinkWrapper \n            to={route} \n            className={props.className}\n            onClick={props.onClick}\n            role=\"button\"\n            aria-label={text}\n            >\n            <IconWrapper className={props.className}>{icon}</IconWrapper>\n            {text}\n        </LinkWrapper>\n    )\n}","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/worklog/worklog-sequence.component.tsx",["347","348","349","350","351","352","353","354"],"/home/ielizari/proyectos/tasker/src/front/infrastructure/components/common/form/form.tsx",["355","356","357","358","359","360","361","362","363","364"],"import React from 'react'\nimport styled from 'styled-components'\nimport { color, common } from '../../../../styles/theme';\nimport { Formik, Form, Field, useField, useFormikContext } from 'formik'\nimport { IconButton, IconLink } from '../icon-button'\n\nimport { FaCalendar } from 'react-icons/fa'\nimport  {Datepicker}  from '../../../../../lib/orzkDatepicker/datepicker'\nimport '../../../../../lib/orzkDatepicker/datepicker.css'\n\nexport const FormActionBarWrapper = styled(Form)`\n    display: inline-flex;\n    flex-direction: row;\n    color: ${color.black};\n`\n\nexport const FormWrapper = styled(Form)`\n    display: flex;\n    flex-direction: column;    \n    color: ${color.black};\n    margin: 1rem;\n`\nexport const FormItemWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    margin: 0.5rem;\n`\nexport const FormButtons = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin: 1rem;\n\n`\n\nexport const FormInputWithIconWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    border-width: 1px;\n    border-color: ${color.grey};\n    border-style: solid;\n    ${common.roundedCorners()};\n    \n    & > input {\n        width: 100%;\n        border-style: none !important;\n        padding: 0.5rem;\n        ${common.roundedCorners()};\n        margin: 0;\n    }\n`\nexport const FormInputIcon = styled.span`\n    display: inline-flex;\n    align-items: center;\n    padding: 0 .5rem;\n    transition: background-color .3s;\n    color: ${color.darkGrey} !important;\n    background-color: ${color.lightGrey};\n    ${common.roundedCornersLeft()}  \n    cursor: pointer;\n\n    :hover {\n        background-color: ${color.semiLightGrey};\n    }\n`\n\nexport const FormTextInput :React.FC<any> = ({label, ...props}) => {\n    const [field, meta] = useField(props)\n   \n    return (\n        <FormItemWrapper>\n            {label && <label htmlFor={props.id || props.name}>{label}</label>}\n            <Field {...field} {...props} aria-label={props.id || props.name}/>\n            {meta.touched && meta.error ? (\n                <div aria-label={'validate_' + (props.id || props.name)} className=\"form-item-error\">{meta.error}</div>\n            ): null}\n        </FormItemWrapper>\n    )\n}\n\nexport const FormDateInput2 :React.FC<any> = ({label, minDate, maxDate, ...props}) => {\n    const [field, meta, {setValue, setTouched}] = useField(props)\n    const [dp, setDp] = React.useState(null)\n    \n    const showDp = () => {\n        dp.show()\n    }\n    \n    React.useEffect(()=> {\n        let options : any = {\n            lang: 'es'\n        }\n        if(props.minDate){\n            options.minDate = props.minDate\n        }\n        if(props.maxDate){\n            options.maxDate = props.maxDate\n        }\n        let picker : Datepicker = new Datepicker(props.id,label,options)\n        picker.onSubmit = function(){\n            setValue(this.getFullDateString())\n            setTouched(true)\n        }\n        setDp(picker)\n    },[])\n    \n    return (\n        <FormItemWrapper>\n            <label htmlFor={props.id || props.name} >{label}</label>\n            <FormInputWithIconWrapper >                \n                <FormInputIcon onClick={showDp}><FaCalendar/></FormInputIcon>\n                <Field \n                    {...field} \n                    {...props}\n                    aria-label={props.id || props.name}\n                />\n            </FormInputWithIconWrapper>\n            {meta.touched && meta.error ? (\n                <div aria-label={'validate_' + (props.id || props.name)} className=\"form-item-error\">{meta.error}</div>\n            ): null}\n        </FormItemWrapper>\n    )\n}\n\nexport const FormDateInput :React.FC<any> = ({label, icon, handler, dateText, ...props}) => {\n    const [field, meta, {setValue, setTouched}] = useField(props)\n    const [inputIcon, setInputIcon] = React.useState(null)\n\n    React.useEffect(()=> {\n        setInputIcon(icon)\n    },[])\n    React.useEffect(()=>{ \n        setValue(dateText)\n        setTouched(true)\n    },[dateText])\n\n    return (\n        <FormItemWrapper>\n            <label htmlFor={props.id || props.name}>{label}</label>\n            <FormInputWithIconWrapper >\n                {inputIcon ?\n                    <FormInputIcon key={props.id || props.name + '_icon'} onClick={handler}>{inputIcon}</FormInputIcon>\n                    :\n                    ''\n                }\n                <Field \n                    {...field} \n                    {...props}    \n                    aria-label={props.id || props.name}\n                />\n            </FormInputWithIconWrapper>\n            {meta.touched && meta.error ? (\n                <div aria-label={'validate_' + (props.id || props.name)} className=\"form-item-error\">{meta.error}</div>\n            ): null}\n        </FormItemWrapper>\n    )\n}\n\nexport const FormSelect: React.FC<any> = ({ label, selOptions, ...props }) => {\n    const [field, meta] = useField(props);     \n    return ( \n        <FormItemWrapper>\n            <label htmlFor={props.id || props.name}>{label}</label> \n            <Field as=\"select\" {...field} {...props} aria-label={props.id || props.name}>\n                {\n                    selOptions.map((item) =>\n                        <option key={item.value} value={item.value}>{item.label}</option>\n                    )\n                }\n            </Field> \n            {meta.touched && meta.error ? ( \n                <div aria-label={'validate_' + (props.id || props.name)} className=\"form-item-error\">{meta.error}</div> \n            ) : null} \n        </FormItemWrapper>\n    ); \n  };\n\n  export const FormFileupload: React.FC<any> = ({label, ...props}) => {\n      const [field, meta,{setValue,setTouched}] = useField(props)\n      const {setFieldValue} = useFormikContext()\n      \n        return(\n            <FormItemWrapper>\n                {label && <label htmlFor={props.id || props.name}>{label}</label>}            \n                <input \n                    {...props}\n                    type=\"file\" \n                    onChange={(event)=>{\n                        setFieldValue(props.id,event.currentTarget.files[0])\n                    }}\n                    key={props.key}\n                    name={props.name}            \n                    aria-label={props.id || props.name} />\n                {meta.touched && meta.error ? (\n                    <div aria-label={'validate_' + (props.id || props.name)} className=\"form-item-error\">{meta.error}</div>\n                ): null}\n            </FormItemWrapper>\n        )\n  }\n  export interface TaskFilterForm {\n      search: string\n      minDate: Date\n      maxDate: Date\n      orderBy: string      \n  }\n\n  export interface FormItemType {\n        type: 'text' | 'date' | 'select' | 'button' | 'checkbox' | 'textarea' | 'number' | 'submit' | 'reset'\n        id: string\n        label: string\n        icon?: any\n        handler?: any\n        dateText?: any\n        placeholder?: string\n        selectOptions?: any\n        className?: string\n  }\n\n  export interface FormTextType extends FormItemType{\n        placeholder: string\n  }\n\n  export interface FormDateType extends FormItemType{\n        icon: any\n        handler: any\n        dateText: any\n  }\n\n  export interface FormSelectType extends FormItemType{\n        selectOptions: any      \n  }\n  export interface FormButtonType extends FormItemType{\n        className: string\n  }\n\n\n  //export const FormBuilder: React.FC<any> = ({formView, formItems, initValues, validation, onSubmit, ...props}) => {\nexport const FormBuilder: React.FC<any> = (props) => {\n      const [items, setItems] = React.useState(props.formItems || null)\n      const [view, setView ] = React.useState(props.formView || null)\n\n      React.useEffect(() => {\n        setItems(props.formItems)\n      },[])\n\n      return (\n          <>\n          {view === 'actionBar' ?\n            \n            <Formik\n                enableReinitialize\n                initialValues={props.initValues}               \n                validate = {props.validation}\n                onSubmit = {(values,{setSubmitting, resetForm}) => {  \n                    props.onSubmit(values,{setSubmitting, resetForm})\n                }}            \n            >\n                {(props) =>  {\n                    return (                           \n                        <FormActionBarWrapper>\n                            {\n                                items.map((item) => {\n                                    if(item.type === 'text'){                                        \n                                        return(\n                                            <FormTextInput \n                                                name={item.id}\n                                                id={item.id}\n                                                key={item.id}\n                                                type=\"text\"\n                                                placeholder={item.placeholder}                           \n                                            />\n                                        )\n                                    }else if(item.type === 'date'){\n                                        return (\n                                            <FormDateInput \n                                                    label={item.label}\n                                                    name={item.id}\n                                                    key={item.id}\n                                                    type=\"text\"\n                                                    id={item.id}\n                                                    icon={item.icon}\n                                                    handler={item.handler}   \n                                                    dateText={item.dateText}                    \n                                                />   \n                                        )\n                                    }else if(item.type === 'select'){\n                                        return (\n                                            <FormSelect\n                                                label={item.label}\n                                                selOptions={item.selectOptions}\n                                                name={item.id}\n                                                id={item.id}\n                                                key={item.id}        \n                                            />   \n                                        )\n                                    }else if(item.type === 'file'){\n                                        return(\n                                            <FormFileupload\n                                                label={item.label}\n                                                id={item.id}\n                                                name={item.id}\n                                                key={item.id}\n                                                onChange={item.onChange}                                      \n                                            />\n                                        )\n                                    \n                                    }else if(item.type === 'submit'){\n                                        return (\n                                            <IconButton\n                                                    key={item.id}\n                                                    text={item.label}\n                                                    icon={item.icon}\n                                                    type=\"submit\"\n                                                    className={item.className}\n                                                />\n                                        )\n                                    }\n                                })\n                            }\n                        </FormActionBarWrapper>                        \n                    )\n                }}\n            </Formik>  \n            :\n            <Formik\n                enableReinitialize\n                initialValues={props.initValues}               \n                validate = {props.validation}\n                onSubmit = {(values,{setSubmitting, resetForm}) => {\n                    props.onSubmit(values,{setSubmitting, resetForm})\n                }}            \n            >\n                {props =>  {\n                    return (                           \n                        <FormWrapper>\n                            {\n                                items.map((item) => {\n                                    if(item.type === 'text'){                                        \n                                        return(\n                                            <FormTextInput \n                                                id={item.id}\n                                                name={item.id}\n                                                key={item.id}\n                                                type=\"text\"\n                                                label={item.label}\n                                                placeholder={item.placeholder}                           \n                                            />\n                                        )\n                                    }else if(item.type === 'date'){\n                                        return (\n                                            <FormDateInput \n                                                    label={item.label}\n                                                    name={item.id}\n                                                    key={item.id}\n                                                    type=\"text\"\n                                                    id={item.id}\n                                                    icon={item.icon}\n                                                    handler={item.handler}   \n                                                    dateText={item.dateText}                    \n                                                />   \n                                        )\n                                    }else if(item.type === 'date2'){\n                                            return (\n                                                <FormDateInput2\n                                                        label={item.label}\n                                                        name={item.id}\n                                                        key={item.id}\n                                                        type=\"text\"\n                                                        id={item.id}                                                                        \n                                                    />   \n                                            )\n                                    }else if(item.type === 'select'){\n                                        return (\n                                            <FormSelect\n                                                label={item.label}\n                                                selOptions={item.selectOptions}\n                                                id={item.id}\n                                                name={item.id}\n                                                key={item.id}        \n                                            />   \n                                        )\n                                    }else if(item.type === 'file'){\n                                        return(\n                                            \n                                            <FormFileupload\n                                                label={item.label}\n                                                id={item.id}\n                                                name={item.id}\n                                                key={item.id}\n                                                onChange={item.onChange}\n                                            />\n                                        )\n                                    }else if(item.type === 'buttons'){\n                                        return (\n                                            <FormButtons key=\"form_buttons\">\n                                            {\n                                                item.buttons.map((button) => {\n                                                    if(button.type === 'submit'){\n                                                        return (\n                                                            <IconButton\n                                                                    key={button.id}\n                                                                    text={button.label}\n                                                                    icon={button.icon}\n                                                                    type=\"submit\"\n                                                                    className={button.className}\n                                                                />\n                                                        )\n                                                    }else if(button.type === 'link'){\n                                                        return (\n                                                            <IconLink \n                                                                key={button.id}\n                                                                text={button.label}\n                                                                icon={button.icon}\n                                                                route={button.route}\n                                                                type=\"button\"\n                                                                className={button.className}\n                                                            />\n                                                        )\n                                                    }else{\n                                                        return (\n                                                            <IconButton \n                                                                key={button.id}\n                                                                text={button.label}\n                                                                icon={button.icon}\n                                                                onClick={button.onClick}\n                                                                type=\"button\"\n                                                                className={button.className}\n                                                            />\n                                                        )\n                                                    }\n                                                }) \n                                            }\n                                            </FormButtons>         \n                                        )                              \n                                    }\n                                    \n                                })\n                            }\n                        </FormWrapper>                        \n                    )\n                }}\n            </Formik>  \n          }\n          </>\n      )\n  }","/home/ielizari/proyectos/tasker/src/front/infrastructure/components/job/job-new.component.tsx",["365","366","367","368","369","370","371"],"/home/ielizari/proyectos/tasker/src/front/application/addJob.ts",[],{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":93,"column":38,"nodeType":"378","messageId":"379","endLine":93,"endColumn":40},{"ruleId":"376","severity":1,"message":"377","line":160,"column":41,"nodeType":"378","messageId":"379","endLine":160,"endColumn":43},{"ruleId":"376","severity":1,"message":"377","line":234,"column":29,"nodeType":"378","messageId":"379","endLine":234,"endColumn":31},{"ruleId":"380","severity":1,"message":"381","line":44,"column":6,"nodeType":"382","endLine":44,"endColumn":8,"suggestions":"383"},{"ruleId":"384","severity":1,"message":"385","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":13},{"ruleId":"384","severity":1,"message":"388","line":6,"column":10,"nodeType":"386","messageId":"387","endLine":6,"endColumn":17},{"ruleId":"384","severity":1,"message":"389","line":7,"column":10,"nodeType":"386","messageId":"387","endLine":7,"endColumn":20},{"ruleId":"384","severity":1,"message":"390","line":8,"column":30,"nodeType":"386","messageId":"387","endLine":8,"endColumn":41},{"ruleId":"391","severity":1,"message":"392","line":80,"column":35,"nodeType":"393","messageId":"394","endLine":80,"endColumn":37},{"ruleId":"391","severity":1,"message":"392","line":230,"column":32,"nodeType":"393","messageId":"394","endLine":230,"endColumn":34},{"ruleId":"384","severity":1,"message":"395","line":46,"column":7,"nodeType":"386","messageId":"387","endLine":46,"endColumn":15},{"ruleId":"380","severity":1,"message":"381","line":56,"column":7,"nodeType":"382","endLine":56,"endColumn":9,"suggestions":"396"},{"ruleId":"384","severity":1,"message":"397","line":43,"column":12,"nodeType":"386","messageId":"387","endLine":43,"endColumn":19},{"ruleId":"380","severity":1,"message":"398","line":46,"column":7,"nodeType":"382","endLine":46,"endColumn":9,"suggestions":"399"},{"ruleId":"384","severity":1,"message":"400","line":2,"column":19,"nodeType":"386","messageId":"387","endLine":2,"endColumn":27},{"ruleId":"384","severity":1,"message":"401","line":5,"column":31,"nodeType":"386","messageId":"387","endLine":5,"endColumn":43},{"ruleId":"384","severity":1,"message":"401","line":4,"column":31,"nodeType":"386","messageId":"387","endLine":4,"endColumn":43},{"ruleId":"384","severity":1,"message":"402","line":4,"column":10,"nodeType":"386","messageId":"387","endLine":4,"endColumn":14},{"ruleId":"384","severity":1,"message":"403","line":32,"column":12,"nodeType":"386","messageId":"387","endLine":32,"endColumn":17},{"ruleId":"384","severity":1,"message":"404","line":32,"column":19,"nodeType":"386","messageId":"387","endLine":32,"endColumn":27},{"ruleId":"384","severity":1,"message":"405","line":33,"column":19,"nodeType":"386","messageId":"387","endLine":33,"endColumn":27},{"ruleId":"380","severity":1,"message":"406","line":89,"column":7,"nodeType":"382","endLine":89,"endColumn":16,"suggestions":"407"},{"ruleId":"384","severity":1,"message":"408","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":25},{"ruleId":"384","severity":1,"message":"409","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":20},{"ruleId":"384","severity":1,"message":"410","line":15,"column":26,"nodeType":"386","messageId":"387","endLine":15,"endColumn":46},{"ruleId":"384","severity":1,"message":"411","line":98,"column":11,"nodeType":"386","messageId":"387","endLine":98,"endColumn":23},{"ruleId":"380","severity":1,"message":"412","line":126,"column":7,"nodeType":"382","endLine":126,"endColumn":24,"suggestions":"413"},{"ruleId":"380","severity":1,"message":"406","line":185,"column":7,"nodeType":"382","endLine":185,"endColumn":15,"suggestions":"414"},{"ruleId":"384","severity":1,"message":"415","line":5,"column":18,"nodeType":"386","messageId":"387","endLine":5,"endColumn":22},{"ruleId":"384","severity":1,"message":"416","line":5,"column":24,"nodeType":"386","messageId":"387","endLine":5,"endColumn":29},{"ruleId":"384","severity":1,"message":"417","line":5,"column":31,"nodeType":"386","messageId":"387","endLine":5,"endColumn":39},{"ruleId":"384","severity":1,"message":"418","line":63,"column":18,"nodeType":"386","messageId":"387","endLine":63,"endColumn":25},{"ruleId":"384","severity":1,"message":"419","line":65,"column":12,"nodeType":"386","messageId":"387","endLine":65,"endColumn":17},{"ruleId":"380","severity":1,"message":"420","line":135,"column":7,"nodeType":"382","endLine":135,"endColumn":9,"suggestions":"421"},{"ruleId":"391","severity":1,"message":"392","line":151,"column":29,"nodeType":"393","messageId":"394","endLine":151,"endColumn":31},{"ruleId":"391","severity":1,"message":"392","line":199,"column":50,"nodeType":"393","messageId":"394","endLine":199,"endColumn":52},{"ruleId":"380","severity":1,"message":"406","line":70,"column":7,"nodeType":"382","endLine":70,"endColumn":16,"suggestions":"422"},{"ruleId":"384","severity":1,"message":"423","line":2,"column":8,"nodeType":"386","messageId":"387","endLine":2,"endColumn":14},{"ruleId":"384","severity":1,"message":"424","line":3,"column":10,"nodeType":"386","messageId":"387","endLine":3,"endColumn":15},{"ruleId":"384","severity":1,"message":"425","line":3,"column":17,"nodeType":"386","messageId":"387","endLine":3,"endColumn":23},{"ruleId":"384","severity":1,"message":"426","line":17,"column":27,"nodeType":"386","messageId":"387","endLine":17,"endColumn":46},{"ruleId":"384","severity":1,"message":"427","line":17,"column":48,"nodeType":"386","messageId":"387","endLine":17,"endColumn":72},{"ruleId":"384","severity":1,"message":"428","line":37,"column":12,"nodeType":"386","messageId":"387","endLine":37,"endColumn":21},{"ruleId":"384","severity":1,"message":"418","line":40,"column":18,"nodeType":"386","messageId":"387","endLine":40,"endColumn":25},{"ruleId":"384","severity":1,"message":"419","line":42,"column":12,"nodeType":"386","messageId":"387","endLine":42,"endColumn":17},{"ruleId":"380","severity":1,"message":"429","line":216,"column":7,"nodeType":"382","endLine":216,"endColumn":9,"suggestions":"430"},{"ruleId":"384","severity":1,"message":"408","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":25},{"ruleId":"384","severity":1,"message":"431","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":17},{"ruleId":"384","severity":1,"message":"432","line":13,"column":10,"nodeType":"386","messageId":"387","endLine":13,"endColumn":33},{"ruleId":"384","severity":1,"message":"410","line":14,"column":26,"nodeType":"386","messageId":"387","endLine":14,"endColumn":46},{"ruleId":"384","severity":1,"message":"433","line":42,"column":7,"nodeType":"386","messageId":"387","endLine":42,"endColumn":31},{"ruleId":"384","severity":1,"message":"411","line":96,"column":11,"nodeType":"386","messageId":"387","endLine":96,"endColumn":23},{"ruleId":"380","severity":1,"message":"434","line":124,"column":7,"nodeType":"382","endLine":124,"endColumn":24,"suggestions":"435"},{"ruleId":"380","severity":1,"message":"406","line":179,"column":7,"nodeType":"382","endLine":179,"endColumn":18,"suggestions":"436"},{"ruleId":"437","severity":1,"message":"438","line":459,"column":13,"nodeType":"386","messageId":"439","endLine":459,"endColumn":14},{"ruleId":"437","severity":1,"message":"438","line":503,"column":11,"nodeType":"386","messageId":"439","endLine":503,"endColumn":12},{"ruleId":"437","severity":1,"message":"438","line":521,"column":11,"nodeType":"386","messageId":"439","endLine":521,"endColumn":12},{"ruleId":"437","severity":1,"message":"438","line":954,"column":13,"nodeType":"386","messageId":"439","endLine":954,"endColumn":14},{"ruleId":"437","severity":1,"message":"440","line":955,"column":10,"nodeType":"386","messageId":"439","endLine":955,"endColumn":13},{"ruleId":"437","severity":1,"message":"438","line":1023,"column":11,"nodeType":"386","messageId":"439","endLine":1023,"endColumn":12},{"ruleId":"437","severity":1,"message":"441","line":1026,"column":9,"nodeType":"386","messageId":"439","endLine":1026,"endColumn":12},{"ruleId":"437","severity":1,"message":"438","line":1287,"column":12,"nodeType":"386","messageId":"439","endLine":1287,"endColumn":13},{"ruleId":"437","severity":1,"message":"442","line":1299,"column":10,"nodeType":"386","messageId":"439","endLine":1299,"endColumn":11},{"ruleId":"443","severity":1,"message":"444","line":1469,"column":3,"nodeType":"445","messageId":"446","endLine":1491,"endColumn":4},{"ruleId":"447","severity":1,"message":"448","line":1476,"column":4,"nodeType":"449","messageId":"450","endLine":1481,"endColumn":6},{"ruleId":"447","severity":1,"message":"448","line":1482,"column":4,"nodeType":"449","messageId":"450","endLine":1490,"endColumn":6},{"ruleId":"437","severity":1,"message":"438","line":1544,"column":14,"nodeType":"386","messageId":"439","endLine":1544,"endColumn":15},{"ruleId":"437","severity":1,"message":"451","line":1577,"column":9,"nodeType":"386","messageId":"439","endLine":1577,"endColumn":15},{"ruleId":"384","severity":1,"message":"452","line":1,"column":23,"nodeType":"386","messageId":"387","endLine":1,"endColumn":41},{"ruleId":"384","severity":1,"message":"452","line":1,"column":23,"nodeType":"386","messageId":"387","endLine":1,"endColumn":41},{"ruleId":"376","severity":1,"message":"377","line":17,"column":35,"nodeType":"378","messageId":"379","endLine":17,"endColumn":37},{"ruleId":"380","severity":1,"message":"453","line":43,"column":7,"nodeType":"382","endLine":43,"endColumn":16,"suggestions":"454"},{"ruleId":"384","severity":1,"message":"455","line":1,"column":10,"nodeType":"386","messageId":"387","endLine":1,"endColumn":18},{"ruleId":"384","severity":1,"message":"402","line":3,"column":17,"nodeType":"386","messageId":"387","endLine":3,"endColumn":21},{"ruleId":"384","severity":1,"message":"425","line":3,"column":23,"nodeType":"386","messageId":"387","endLine":3,"endColumn":29},{"ruleId":"376","severity":1,"message":"456","line":40,"column":50,"nodeType":"378","messageId":"457","endLine":40,"endColumn":52},{"ruleId":"384","severity":1,"message":"458","line":5,"column":9,"nodeType":"386","messageId":"387","endLine":5,"endColumn":17},{"ruleId":"384","severity":1,"message":"459","line":6,"column":10,"nodeType":"386","messageId":"387","endLine":6,"endColumn":22},{"ruleId":"384","severity":1,"message":"425","line":3,"column":17,"nodeType":"386","messageId":"387","endLine":3,"endColumn":23},{"ruleId":"384","severity":1,"message":"431","line":6,"column":25,"nodeType":"386","messageId":"387","endLine":6,"endColumn":32},{"ruleId":"384","severity":1,"message":"385","line":7,"column":10,"nodeType":"386","messageId":"387","endLine":7,"endColumn":13},{"ruleId":"384","severity":1,"message":"460","line":11,"column":10,"nodeType":"386","messageId":"387","endLine":11,"endColumn":15},{"ruleId":"384","severity":1,"message":"461","line":12,"column":10,"nodeType":"386","messageId":"387","endLine":12,"endColumn":21},{"ruleId":"384","severity":1,"message":"462","line":55,"column":18,"nodeType":"386","messageId":"387","endLine":55,"endColumn":26},{"ruleId":"380","severity":1,"message":"463","line":72,"column":10,"nodeType":"382","endLine":72,"endColumn":12,"suggestions":"464"},{"ruleId":"384","severity":1,"message":"465","line":84,"column":25,"nodeType":"386","messageId":"387","endLine":84,"endColumn":38},{"ruleId":"380","severity":1,"message":"466","line":106,"column":7,"nodeType":"382","endLine":106,"endColumn":9,"suggestions":"467"},{"ruleId":"380","severity":1,"message":"468","line":132,"column":7,"nodeType":"382","endLine":132,"endColumn":9,"suggestions":"469"},{"ruleId":"380","severity":1,"message":"470","line":136,"column":7,"nodeType":"382","endLine":136,"endColumn":17,"suggestions":"471"},{"ruleId":"384","severity":1,"message":"472","line":180,"column":14,"nodeType":"386","messageId":"387","endLine":180,"endColumn":19},{"ruleId":"384","severity":1,"message":"473","line":180,"column":27,"nodeType":"386","messageId":"387","endLine":180,"endColumn":35},{"ruleId":"384","severity":1,"message":"474","line":180,"column":36,"nodeType":"386","messageId":"387","endLine":180,"endColumn":46},{"ruleId":"384","severity":1,"message":"475","line":241,"column":20,"nodeType":"386","messageId":"387","endLine":241,"endColumn":27},{"ruleId":"380","severity":1,"message":"476","line":245,"column":9,"nodeType":"382","endLine":245,"endColumn":11,"suggestions":"477"},{"ruleId":"376","severity":1,"message":"456","line":263,"column":50,"nodeType":"378","messageId":"457","endLine":263,"endColumn":52},{"ruleId":"376","severity":1,"message":"456","line":338,"column":50,"nodeType":"378","messageId":"457","endLine":338,"endColumn":52},{"ruleId":"384","severity":1,"message":"423","line":2,"column":8,"nodeType":"386","messageId":"387","endLine":2,"endColumn":14},{"ruleId":"384","severity":1,"message":"424","line":3,"column":10,"nodeType":"386","messageId":"387","endLine":3,"endColumn":15},{"ruleId":"384","severity":1,"message":"402","line":3,"column":17,"nodeType":"386","messageId":"387","endLine":3,"endColumn":21},{"ruleId":"384","severity":1,"message":"478","line":27,"column":21,"nodeType":"386","messageId":"387","endLine":27,"endColumn":31},{"ruleId":"384","severity":1,"message":"479","line":28,"column":17,"nodeType":"386","messageId":"387","endLine":28,"endColumn":23},{"ruleId":"384","severity":1,"message":"404","line":30,"column":19,"nodeType":"386","messageId":"387","endLine":30,"endColumn":27},{"ruleId":"384","severity":1,"message":"480","line":31,"column":12,"nodeType":"386","messageId":"387","endLine":31,"endColumn":23},"no-native-reassign",["481"],"no-negated-in-lhs",["482"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'setSync'. Either include it or remove the dependency array.","ArrayExpression",["483"],"@typescript-eslint/no-unused-vars","'Job' is defined but never used.","Identifier","unusedVar","'isEmpty' is defined but never used.","'Datepicker' is defined but never used.","'ApiResponse' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'importDB' is assigned a value but never used.",["484"],"'message' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.message'. Either include it or remove the dependency array. If 'setMessage' needs the current value of 'props.message', you can also switch to useReducer instead of useState and read 'props.message' in the reducer.",["485"],"'throttle' is defined but never used.","'FileDownload' is defined but never used.","'font' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'actionItems'. Either include it or remove the dependency array.",["486"],"'Children' is defined but never used.","'TaskDetail' is defined but never used.","'BlockHeaderComponent' is defined but never used.","'childHandler' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'taskid'. Either include it or remove the dependency array.",["487"],["488"],"'Form' is defined but never used.","'Field' is defined but never used.","'useField' is defined but never used.","'setMode' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'mode' and 'taskid'. Either include them or remove the dependency array.",["489"],["490"],"'styled' is defined but never used.","'color' is defined but never used.","'common' is defined but never used.","'dateToFormattedDate' is defined but never used.","'formattedDateToISOString' is defined but never used.","'startDate' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'mode' and 'worklogid'. Either include them or remove the dependency array.",["491"],"'Worklog' is defined but never used.","'ISOStringToFormatedDate' is defined but never used.","'WorklogChildrenContainer' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'worklogid'. Either include it or remove the dependency array.",["492"],["493"],"no-redeclare","'i' is already defined.","redeclared","'msg' is already defined.","'day' is already defined.","'h' is already defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'result' is already defined.","'ApiResponseBuilder' is defined but never used.","React Hook React.useEffect has a missing dependency: 'props.actions'. Either include it or remove the dependency array. If 'setActions' needs the current value of 'props.actions', you can also switch to useReducer instead of useState and read 'props.actions' in the reducer.",["494"],"'TaskList' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'IconType' is defined but never used.","'BlockActions' is defined but never used.","'chdir' is defined but never used.","'reduceRight' is defined but never used.","'setStart' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'calculateDiff'. Either include it or remove the dependency array.",["495"],"'setWorklogObj' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'label', 'props.id', 'props.maxDate', 'props.minDate', 'setTouched', and 'setValue'. Either include them or remove the dependency array.",["496"],"React Hook React.useEffect has a missing dependency: 'icon'. Either include it or remove the dependency array. If 'setInputIcon' needs the current value of 'icon', you can also switch to useReducer instead of useState and read 'icon' in the reducer.",["497"],"React Hook React.useEffect has missing dependencies: 'setTouched' and 'setValue'. Either include them or remove the dependency array.",["498"],"'field' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setTouched' is assigned a value but never used.","'setView' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.formItems'. Either include it or remove the dependency array. If 'setItems' needs the current value of 'props.formItems', you can also switch to useReducer instead of useState and read 'props.formItems' in the reducer.",["499"],"'setWorklog' is assigned a value but never used.","'setJob' is assigned a value but never used.","'submitError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"500","fix":"501"},{"desc":"500","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},{"desc":"509","fix":"510"},{"desc":"511","fix":"512"},{"desc":"505","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},"Update the dependencies array to be: [setSync]",{"range":"532","text":"533"},{"range":"534","text":"533"},"Update the dependencies array to be: [props.message]",{"range":"535","text":"536"},"Update the dependencies array to be: [actionItems, filters]",{"range":"537","text":"538"},"Update the dependencies array to be: [confirmedDelete, taskid]",{"range":"539","text":"540"},"Update the dependencies array to be: [actionItems, taskid]",{"range":"541","text":"542"},"Update the dependencies array to be: [mode, taskid]",{"range":"543","text":"544"},{"range":"545","text":"538"},"Update the dependencies array to be: [mode, worklogid]",{"range":"546","text":"547"},"Update the dependencies array to be: [confirmedDelete, worklogid]",{"range":"548","text":"549"},"Update the dependencies array to be: [actionItems, worklogid]",{"range":"550","text":"551"},"Update the dependencies array to be: [actions, props.actions]",{"range":"552","text":"553"},"Update the dependencies array to be: [calculateDiff]",{"range":"554","text":"555"},"Update the dependencies array to be: [label, props.id, props.maxDate, props.minDate, setTouched, setValue]",{"range":"556","text":"557"},"Update the dependencies array to be: [icon]",{"range":"558","text":"559"},"Update the dependencies array to be: [dateText, setTouched, setValue]",{"range":"560","text":"561"},"Update the dependencies array to be: [props.formItems]",{"range":"562","text":"563"},[1437,1439],"[setSync]",[1795,1797],[1151,1153],"[props.message]",[2689,2698],"[actionItems, filters]",[3840,3857],"[confirmedDelete, taskid]",[5791,5799],"[actionItems, taskid]",[4836,4838],"[mode, taskid]",[2281,2290],[7850,7852],"[mode, worklogid]",[3710,3727],"[confirmedDelete, worklogid]",[5251,5262],"[actionItems, worklogid]",[1102,1111],"[actions, props.actions]",[2024,2026],"[calculateDiff]",[2988,2990],"[label, props.id, props.maxDate, props.minDate, setTouched, setValue]",[3942,3944],"[icon]",[4031,4041],"[dateText, setTouched, setValue]",[7798,7800],"[props.formItems]"]