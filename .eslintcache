[{"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\tasks\\task-new.component.tsx":"1","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\repositories\\browser\\handlers.ts":"2","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\reportWebVitals.ts":"3","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\lib\\orzkDatepicker\\datepicker.js":"4","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\tests\\mocks\\handlers.ts":"5","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\tests\\mocks\\browser.js":"6","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\index.tsx":"7","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\styles\\globalStyles.ts":"8","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\repositories\\browser\\browser.js":"9","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\repositories\\browser\\browserdb.ts":"10","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\App.tsx":"11","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\styles\\reset.ts":"12","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\application\\taskerRepository.tsx":"13","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\views\\home.component.tsx":"14","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\header.tsx":"15","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\domain\\task-definitions.ts":"16","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\block-actions.tsx":"17","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\getTaskList.tsx":"18","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\icon-button.tsx":"19","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\styles\\theme.ts":"20","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\deleteTask.ts":"21","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\tasks\\task-detail.component.tsx":"22","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\tasks\\task-list.component.tsx":"23","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\getTask.tsx":"24","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\modal.tsx":"25","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\styles\\reboot.ts":"26","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\views\\tasks.view.component.tsx":"27","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\addTask.tsx":"28","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\logo.tsx":"29","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\spinner.tsx":"30","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\domain\\api-response.ts":"31","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\updateTask.ts":"32","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\form\\form.tsx":"33","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\lib\\date.utils.ts":"34","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\worklog\\worklog-list.component.tsx":"35","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\block.tsx":"36","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\worklog\\worklog-new.component.tsx":"37","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\views\\worklog.view.component.tsx":"38","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\addWorklog.ts":"39","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\worklog\\worklog-detail.component.tsx":"40","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\getWorklogList.ts":"41"},{"size":15054,"mtime":1608009489169,"results":"42","hashOfConfig":"43"},{"size":4352,"mtime":1608187693175,"results":"44","hashOfConfig":"43"},{"size":425,"mtime":499162500000,"results":"45","hashOfConfig":"43"},{"size":60401,"mtime":1607190803281,"results":"46","hashOfConfig":"43"},{"size":3889,"mtime":1607833900423,"results":"47","hashOfConfig":"43"},{"size":122,"mtime":1606370107139,"results":"48","hashOfConfig":"43"},{"size":943,"mtime":1607585924873,"results":"49","hashOfConfig":"43"},{"size":2895,"mtime":1607886916756,"results":"50","hashOfConfig":"43"},{"size":122,"mtime":1606889256149,"results":"51","hashOfConfig":"43"},{"size":8535,"mtime":1608237074848,"results":"52","hashOfConfig":"43"},{"size":856,"mtime":1608187019430,"results":"53","hashOfConfig":"43"},{"size":1912,"mtime":1606454159380,"results":"54","hashOfConfig":"43"},{"size":1191,"mtime":1608186918733,"results":"55","hashOfConfig":"43"},{"size":237,"mtime":1606619425182,"results":"56","hashOfConfig":"43"},{"size":1718,"mtime":1608187019430,"results":"57","hashOfConfig":"43"},{"size":686,"mtime":1607244271013,"results":"58","hashOfConfig":"43"},{"size":2794,"mtime":1608009292439,"results":"59","hashOfConfig":"43"},{"size":654,"mtime":1607690991428,"results":"60","hashOfConfig":"43"},{"size":2430,"mtime":1607887973815,"results":"61","hashOfConfig":"43"},{"size":4165,"mtime":1607755103530,"results":"62","hashOfConfig":"43"},{"size":482,"mtime":1607602485714,"results":"63","hashOfConfig":"43"},{"size":11734,"mtime":1608009669308,"results":"64","hashOfConfig":"43"},{"size":4065,"mtime":1608009379618,"results":"65","hashOfConfig":"43"},{"size":471,"mtime":1607687350899,"results":"66","hashOfConfig":"43"},{"size":4516,"mtime":1607588444814,"results":"67","hashOfConfig":"43"},{"size":1364,"mtime":1606454190512,"results":"68","hashOfConfig":"43"},{"size":1073,"mtime":1607514171901,"results":"69","hashOfConfig":"43"},{"size":620,"mtime":1607603212786,"results":"70","hashOfConfig":"43"},{"size":726,"mtime":1606620276137,"results":"71","hashOfConfig":"43"},{"size":1467,"mtime":1607671026923,"results":"72","hashOfConfig":"43"},{"size":462,"mtime":1607599504457,"results":"73","hashOfConfig":"43"},{"size":625,"mtime":1607673734370,"results":"74","hashOfConfig":"43"},{"size":17191,"mtime":1608320846650,"results":"75","hashOfConfig":"43"},{"size":1281,"mtime":1608336687310,"results":"76","hashOfConfig":"43"},{"size":4084,"mtime":1608188283997,"results":"77","hashOfConfig":"43"},{"size":1410,"mtime":1608013651246,"results":"78","hashOfConfig":"43"},{"size":9847,"mtime":1608321049157,"results":"79","hashOfConfig":"43"},{"size":865,"mtime":1608268799539,"results":"80","hashOfConfig":"43"},{"size":622,"mtime":1608237074847,"results":"81","hashOfConfig":"43"},{"size":94,"mtime":1608268755318,"results":"82","hashOfConfig":"43"},{"size":601,"mtime":1608186888007,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},"11xn261",{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"87"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"87"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"87"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"87"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"131"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"87"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"87"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"87"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"87"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\tasks\\task-new.component.tsx",["186","187","188","189","190","191","192","193"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { color, common } from '../../../styles/theme';\r\nimport { FormWrapper, FormDateInput,FormSelect,FormTextInput, FormButtons} from '../common/form/form'\r\nimport { Formik, Form, Field, useField } from 'formik'\r\nimport { TaskDetail } from '../../../domain/task-detail'\r\nimport { TaskStatus, TaskPriority, ConstObjectToSelectOptionsArray } from '../../../domain/task-definitions'\r\nimport { addTask } from '../../../application/addTask'\r\nimport { getTask } from '../../../application/getTask'\r\nimport { updateTask } from '../../../application/updateTask'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { FaCheck, FaTimes, FaRedo, FaCalendar} from 'react-icons/fa'\r\nimport { IconButton, IconLink } from '../common/icon-button'\r\nimport { Spinner } from '../common/spinner'\r\nimport { BlockContainer, BlockHeaderComponent} from '../common/block'\r\n\r\nimport  {Datepicker}  from '../../../lib/orzkDatepicker/datepicker'\r\nimport '../../../lib/orzkDatepicker/datepicker.css'\r\n\r\n\r\nconst emptyTask: TaskDetail = {\r\n    id: '',\r\n    title: '',\r\n    description: '',    \r\n    parent: '',    \r\n    createdDate: '',\r\n    limitDate: '',\r\n    author: '',\r\n    authorId: '',\r\n    status: TaskStatus.pending.value,\r\n    priority: TaskPriority.low.value,\r\n    tags: []\r\n}\r\n\r\n\r\n  const ParentTaskReference = styled(Link)`\r\n        display: flex;\r\n        background-color: ${color.semiLightGrey};\r\n        padding: 1rem;\r\n        margin: 1rem;\r\n        color: ${color.black} !important;\r\n        border-style: solid;\r\n        border-width: 1px;\r\n        boder-color: ${color.blue};\r\n        ${common.roundedCorners()};        \r\n  `\r\n\r\n  export interface TaskProps {\r\n    taskid: string,\r\n}\r\n\r\nexport const TaskNewComponent = (props) => {\r\n    let { taskid } = useParams<TaskProps>()\r\n    const [dpLimit,setDpLimit] = React.useState<Datepicker | null>(null)\r\n    const [limitDate, setLimitDate] = React.useState<string>('')\r\n    const [submitSuccess, setSubmitSuccess] = React.useState(null)\r\n    const [submitError, setSubmitError] = React.useState<Error | null>(null)\r\n    const [mode, setMode] = React.useState(props.mode || 'new')\r\n    const [task, setTask] = React.useState<TaskDetail | null>(null)\r\n    const [error, setError] = React.useState<Error | null>(null)\r\n    const [loading, setLoading] = React.useState<boolean>(false)\r\n    const [title, setTitle] = React.useState<string>('Nueva tarea')\r\n    const [parentTask, setParentTask] = React.useState<TaskDetail | null>(null)\r\n    \r\n    React.useEffect(()=> {\r\n        if(mode === 'edit') setTitle('Editar tarea')\r\n        else if(mode === 'child') setTitle('Nueva subtarea')\r\n        else setTitle('Nueva tarea')\r\n    },[mode])\r\n\r\n    React.useEffect(() => {        \r\n        let dp = new Datepicker('limitDate','FechaLimite', {lang:'es'})\r\n        dp.onSubmit = () => {   \r\n            setLimitDate(dp.getFullDateString())         \r\n            dp.printDate();\r\n         }          \r\n\r\n        if(task && task.limitDate !== '' && new Date(task.limitDate)){\r\n            console.log(new Date().toString(),\"Carga en datepicker la fecha\",task.title,task.limitDate,new Date(task.limitDate))       \r\n            dp.setDate(new Date(task.limitDate))\r\n        }\r\n        setDpLimit(dp)\r\n\r\n    },[task])\r\n\r\n    React.useEffect(() => {   \r\n        if(dpLimit && dpLimit.getDate() !== null){    \r\n            setLimitDate(dpLimit.getFullDateString())\r\n        }\r\n    },[dpLimit])\r\n\r\n    React.useEffect(()=> {   \r\n        let cancelled = false    \r\n        if(taskid){\r\n            setLoading(true)\r\n            getTask(taskid)\r\n            .then(\r\n                (result) => { \r\n                    if(!cancelled){ \r\n                        if(result.hasError){\r\n                            setError(new Error(result.error))\r\n                            setTask(null)\r\n                        }else{\r\n                            if(mode === 'edit'){    \r\n                                setTask(result.data.task) \r\n                            }else{\r\n                                setParentTask(result.data.task)\r\n                                emptyTask.parent = result.data.task.id\r\n                                setTask(emptyTask)\r\n                            }\r\n                            setError(null)\r\n                            setSubmitError(null)\r\n                        }\r\n                    \r\n                        setLoading(false) \r\n                    }\r\n                },\r\n                (error) => {\r\n                    setSubmitSuccess(null)\r\n                    setSubmitError(null)\r\n                    setError(error)\r\n                    setTask(null)\r\n                    setLimitDate('')\r\n                    setLoading(false)\r\n                }\r\n            )        \r\n        }else{\r\n            setTask(emptyTask)\r\n        }  \r\n        return () => cancelled = true    \r\n    },[])\r\n\r\n    const dateHandler = () => {\r\n        dpLimit.show()\r\n    }\r\n\r\n    const statusItems = ConstObjectToSelectOptionsArray(TaskStatus)\r\n    const priorityItems = ConstObjectToSelectOptionsArray(TaskPriority)\r\n    return (        \r\n        <BlockContainer> \r\n            <BlockHeaderComponent \r\n                title={title}\r\n            />  \r\n            {loading ? <Spinner /> : ''}            \r\n            {submitSuccess &&                \r\n                <div aria-label='success-message' className='message-success'>                    \r\n                    La {mode=='child' ? 'subtarea' : 'tarea'} <Link to={'/tasks/'+ submitSuccess.id}>'{submitSuccess.title}'</Link> ha sido {mode === 'new' ? 'creada':'editada'} con éxito.\r\n                </div>  \r\n            }\r\n            {submitError &&\r\n                <div aria-label='error-message' className='message-error'>{submitError.message}</div>\r\n            }\r\n            {parentTask &&\r\n                <ParentTaskReference to={`/tasks/${parentTask.id}`}>\r\n                    Parent: {parentTask.title}\r\n                </ParentTaskReference>\r\n            }\r\n            {task &&\r\n                <Formik\r\n                    enableReinitialize\r\n                    initialValues={task}               \r\n                    validate = {values => {\r\n                        const errors : Partial<TaskDetail> = {}\r\n                        \r\n                        if(!values.title){                        \r\n                            errors.title = 'Campo obligatorio'\r\n                        }                    \r\n                        if(!values.author){\r\n                            errors.author = 'Campo obligatorio'\r\n                        }\r\n                        if(!values.status){\r\n                            errors.status = 'Campo obligatorio'\r\n                        }\r\n                        if(!values.priority){\r\n                            errors.priority = 'Campo obligatorio'\r\n                        }\r\n                        \r\n                        let datetime = values.limitDate.split(\" \")\r\n                        //console.log(limitDate,values.limitDate, datetime)\r\n                        if(datetime.length > 0 && datetime.length !== 11 && datetime[0] !== ''){\r\n                            if(!datetime[0].match(/^(((0[1-9]|[12]\\d|3[01])\\/(0[13578]|1[02])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)\\/(0[13456789]|1[012])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])\\/02\\/((19|[2-9]\\d)\\d{2}))|(29\\/02\\/((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|(([1][26]|[2468][048]|[3579][26])00))))$/g)){\r\n                                errors.limitDate = 'Formato de fecha no válido'\r\n                            }\r\n                            if(datetime.length === 2 && !datetime[1].match(/^([0-1]?[0-9]|[2][0-3]):([0-5][0-9])(:[0-5][0-9])?$/)){\r\n                                errors.limitDate = 'Formato de hora no válido'\r\n                            }\r\n                        }\r\n                        return errors\r\n                    }}\r\n                    onSubmit = {(values,{setSubmitting, resetForm}) => {  \r\n                        if(values.limitDate !== ''){\r\n                            values.limitDate = (new Datepicker().createDate(values.limitDate)).toString()\r\n                            console.log(\"Fechalimite\",(new Datepicker().createDate(values.limitDate)).toString())\r\n                        }\r\n                        \r\n                        setLoading(true)\r\n                        if(mode === 'new' || mode=='child'){\r\n                            addTask(values)\r\n                            .then(                            \r\n                                (result) => {\r\n                                    if(!result.hasError){\r\n                                        console.log(result.data.task)\r\n                                        setSubmitSuccess(result.data.task);                                        \r\n                                        setSubmitError(null);\r\n                                        resetForm({})\r\n                                    }else{\r\n                                        setSubmitSuccess(null);\r\n                                        setSubmitError(new Error(result.error));                                      \r\n                                    }\r\n                                    setSubmitting(false); \r\n                                    setLoading(false)\r\n                                },\r\n                                (error) => {\r\n                                    console.log(error)\r\n                                    setSubmitting(false);\r\n                                    setSubmitSuccess(null);\r\n                                    setSubmitError(error);\r\n                                    setLoading(false)\r\n                                }\r\n                            )\r\n                        }else if(mode === 'edit'){\r\n                            updateTask(values)\r\n                            .then(                            \r\n                                (result) => {\r\n                                    if(!result.hasError){                                        \r\n                                        setSubmitSuccess(result.data.task); \r\n                                        setTask(null)                                     \r\n                                        setTask(result.data.task)                                        \r\n                                        setSubmitError(null);\r\n                                    }else{\r\n                                        setSubmitSuccess(null);\r\n                                        setSubmitError(new Error(result.error));                                      \r\n                                    }\r\n                                    setSubmitting(false); \r\n                                    setLoading(false)\r\n                                },\r\n                                (error) => {\r\n                                    console.log(error)\r\n                                    setSubmitting(false);\r\n                                    setSubmitSuccess(null);\r\n                                    setSubmitError(error);\r\n                                    setLoading(false)\r\n                                }\r\n                            )\r\n                        }      \r\n                    }}\r\n                >                 \r\n                    {props =>  {\r\n                        return (      \r\n                        <FormWrapper>\r\n                            <FormTextInput \r\n                                label=\"Título\"\r\n                                name=\"title\"\r\n                                type=\"text\"                             \r\n                            />\r\n                            <FormTextInput \r\n                                label=\"Descripción\"\r\n                                name=\"description\"\r\n                                type=\"text\"                                \r\n                            />\r\n                            <FormTextInput \r\n                                label=\"Autor\"\r\n                                name=\"author\"\r\n                                type=\"text\"                                \r\n                            />   \r\n                            <FormDateInput \r\n                                label=\"Fecha límite\"\r\n                                name=\"limitDate\"\r\n                                type=\"text\"\r\n                                id=\"limitDate\"\r\n                                icon={FaCalendar}\r\n                                handler={dateHandler}   \r\n                                dateText={limitDate}                    \r\n                            />   \r\n                            <FormSelect\r\n                                label=\"Estado\"\r\n                                selOptions={statusItems}\r\n                                name=\"status\"                  \r\n                            />   \r\n                            <FormSelect\r\n                                label=\"Prioridad\"\r\n                                selOptions={priorityItems}\r\n                                name=\"priority\"\r\n                                type=\"text\"                            \r\n                            />                             \r\n                            <FormButtons>                                \r\n                                <IconButton\r\n                                    key=\"btnSubmit\"\r\n                                    text=\"Guardar\"\r\n                                    icon={FaCheck}\r\n                                    type=\"submit\"\r\n                                    disabled={props.isSubmitting && !props.isValidating}\r\n                                    className=\"form-button-submit button-icon\"\r\n                                />\r\n                                <IconButton \r\n                                    key=\"btnReset\"\r\n                                    text=\"Limpiar\"\r\n                                    icon={FaRedo}\r\n                                    type=\"reset\"\r\n                                    disabled={props.isSubmitting && !props.isValidating}\r\n                                    className=\"form-button-reset button-icon\"\r\n                                />\r\n                                <IconLink \r\n                                    key=\"btnCancel\"\r\n                                    route={taskid ? `/tasks/${taskid}` : '/tasks'}\r\n                                    text=\"Cancelar\"\r\n                                    icon={FaTimes}\r\n                                    type=\"button\"\r\n                                    disabled={props.isSubmitting && !props.isValidating}\r\n                                    className=\"form-button-cancel button-icon\"\r\n                                    />\r\n                            </FormButtons>\r\n                        </FormWrapper>               \r\n                    )}}  \r\n                </Formik>\r\n            }\r\n        </BlockContainer>\r\n    )\r\n}",["194","195"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\repositories\\browser\\handlers.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\reportWebVitals.ts",[],["196","197"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\lib\\orzkDatepicker\\datepicker.js",["198","199","200","201","202","203","204","205","206","207","208","209","210","211"],"/*\r\n\t Options\r\n\t\t- showTitle Boolean [true,false] Default true\r\n\t \t- mode\tString [date, time, datetime]\tDefault 'datetime'\r\n\t\t- lang\tString [en, es, fr] Default 'en'\r\n\t\t- startDay Integer [0 - Sunday, 1 - Monday, ... 6 - Saturday]\tDefault 1\r\n\t\t- minDate\tDate [Date object] Default null\r\n\t\t- maxDate\tDate [Date object] Default null\r\n\t\t- blockWeekdays\tArray<String> [mon,tue,wed,thu,fri,sat,sun] Default []\r\n\t\t- blockDates\t{<Array<Date>} Default {}\tSingle date / Date range: [min date, max date]\r\n\t\t- display\tString [full, compact] Default 'full'\r\n\t\t- showMsg\tBoolean [true, false]\tDefault true\r\n\t\t- dateFormat\tString ['ymd[/-]','ydm[/-]','mdy[/-]','dmy[/-]'] Default 'dmy/'\r\n\t\t- timeFormat\tString ['h','hm','hms']\r\n\t\t- position\tString['free','attach','fixed']\tDefault 'free'\r\n\t\t- showDate\tBoolean [true,false] Default true\r\n\t\r\n\t Methods\r\n\t\tPublic\r\n\t\t\tshow()\t\t\t\t\t\t-\tDraws the datepicker DOM elements.\r\n\t\t\tclose()\t\t\t\t\t\t-\tRemoves the datepicker object's DOM elements. The selected date and time will be kept on the object and will be shown if the show() function is called again.\r\n\t\t\tgetDate()\t\t\t\t\t-\tReturns a Date object containing the selected date.\r\n\t\t\tsetOptions(options)\t\t\t-\tSets the options for this instance. The 'options' parameter is a javascript object containing the pairs of key:value whose default values must be overwritten.\r\n\t\t\tgetFullDateString()\t\t\t-\tReturns a string containing the selected date formatted based on the dateFormat and timeFormat options.\r\n\t\t\tsetDate(d)\t\t\t\t\t-\tSets the initial date of the datepicker object. By default, if an input DOM element id is passed as parameter on the datepicker's constructor, and it \r\n\t\t\t\t\t\t\t\t\t\t\tcontains a valid date string, this date will be set as the initial one. Otherwise, the initial date will be the current local date. If this date is blocked,\r\n\t\t\t\t\t\t\t\t\t\t\tthe initial date will be empty and the user must select one manually on the calendar widget in order to be able to push the 'OK' button.\r\n\t\t\tprintDate()\t\t\t\t\t-\tPrints a formatted date string based on the selected date on the input DOM element referenced by the id passed as parameter on the datepicker's constructor.\r\n\t\t\t\t\t\t\t\t\t\t\tIf this parameter contains null or a non valid id, nothing will be printed.\r\n\t\t\tonSubmit(d)\t\t\t\t\t-\tThis function is called when the user press the 'OK' button. By default it calls the printDate() function.\r\n\t\tPrivate\t\t\r\n\t\t\tupdateDisplay()\t\t\t\t-\tRedraw all the display elements \r\n\t\t\tdaysInMonth()\t\t\t\t-\tReturns the number of days of the selected month.\r\n\t\t\tfirstDay()\t\t\t\t\t-\tReturns the position on the weekdays o the month's first day. Used to calculate the first row's offset when printing the calendar. \r\n\t\t\tclearCalendarContainer()\t-\tRemove the elements on the calendar container.\r\n\t\t\tclearTimeContainer()\t\t-\tRemove the elements on the time container (Clock elements)\r\n\t\t\tclearMsgContainer()\t\t\t-\tRemove the elements on the debug section (errors and warnings)\r\n\t\t\tprintCalendar()\t\t\t\t-\tDraws the calendar\r\n\t\t\tprintMonthList()\t\t\t-\tDraws the month list that allows to quickly one. \r\n\t\t\tprintYearList(decade)\t\t-\tDraws the year list. This window allows to scroll over the years in groups of 20 and select one of them. The 'decade' parameter indicates the offset \r\n\t\t\t\t\t\t\t\t\t\t\tto know which group of years must be printed.\r\n\t\t\tprintAnalogTime(type)\t\t-\tDraws the analog clock to pick hours / minutes / seconds. The 'type' parameter indicates which one is being picked.\r\n\t\t\tdrawClockHand(line,x2,y2)\t-\tDraws the clock's hand, starting from the center of the widget. \r\n\t\t\thideClockHand(line)\t\t\t-\tHide the clock's hand passed as parameter.\r\n\t\t\tshowCalendar()\t\t\t\t-\tShow the calendar container window\r\n\t\t\tshowTime()\t\t\t\t\t-\tShow the clock container window\r\n\t\t\tgetDateString(d)\t\t\t-\tReturns a formatted string based on the date 'd' passed as parameter and the dateFormat option passed when the object was created.\r\n\t\t\tgetTimeString(d)\t\t\t-\tReturns a formatted string based on the date 'd' passed as parameter and the timeFormat option passed when the object was created.\r\n\t\t\tupdateTime(d)\t\t\t\t-\tRedraws the display item containing the time.\r\n\t\t\tcreateDate(d)\t\t\t\t-\tReturns a date object based on the string 'd' passed as parameter. If the string doesn't fit the dateFormat and timeFormat options, returns false.\r\n\t\t\tpadInteger(number,max)\t\t-\tReturns a string of 'max' characters containing 'number' and filled with zeros on the left. Ej. padInteger(2,4) -> '0002'\r\n\t\t\trad2deg(x)\t\t\t\t\t-\tConverts radians to degrees.\r\n\t\t\tdeg2rad(x)\t\t\t\t\t-\tConverts degrees to radians.\r\n\t\t\tisDate(date)\t\t\t\t-\tChecks if the 'date' parameter is a Date object. Returns a boolean.\r\n\t\t\tdateInRange(date,type)\t\t-\tChecks if the 'date' parameter is bigger than the minDate option and smaller than the maxDate option. The 'type' can be 'day' for the printCalendar() \r\n\t\t\t\t\t\t\t\t\t\t\tfunction, 'month' for the printMonthList() function or 'year' for the printYearList() function\r\n\t\t\tdateIsBlocked(date)\t\t\t-\tChecks if the 'date' parameter is present on the blockDates option.\r\n\t*/\r\nexport class Datepicker  {\r\n\tconstructor(dateField,title,options) {\t\r\n\t\t\r\n\t\tthis.setOptions = this.setOptions.bind(this)\r\n\t\tthis.reset = this.reset.bind(this)\r\n\t\tthis.show = this.show.bind(this)\r\n\t\tthis.updateDisplay = this.updateDisplay.bind(this)\r\n\t\tthis.daysInMonth = this.daysInMonth.bind(this)\r\n\t\tthis.firstDay = this.firstDay.bind(this)\r\n\t\tthis.clearCalendarContainer = this.clearCalendarContainer.bind(this)\r\n\t\tthis.clearTimeContainer = this.clearTimeContainer.bind(this)\r\n\t\tthis.clearMsgContainer = this.clearMsgContainer.bind(this)\r\n\t\tthis.printCalendar = this.printCalendar.bind(this)\r\n\t\tthis.printMonthList = this.printMonthList.bind(this)\r\n\t\tthis.printYearList = this.printYearList.bind(this)\r\n\t\tthis.printAnalogTime = this.printAnalogTime.bind(this)\r\n\t\tthis.drawClockHand = this.drawClockHand.bind(this)\r\n\t\tthis.hideClockHand = this.hideClockHand.bind(this)\r\n\t\tthis.close = this.close.bind(this)\r\n\t\tthis.printDate = this.printDate.bind(this)\r\n\t\tthis.getFullDateString = this.getFullDateString.bind(this)\r\n\t\tthis.showCalendar = this.showCalendar.bind(this)\r\n\t\tthis.showTime = this.showTime.bind(this)\r\n\t\tthis.getDateString = this.getDateString.bind(this)\r\n\t\tthis.getTimeString = this.getTimeString.bind(this)\r\n\t\tthis.updateTime = this.updateTime.bind(this)\r\n\t\tthis.getDate = this.getDate.bind(this)\r\n\t\tthis.createDate = this.createDate.bind(this)\r\n\t\tthis.setStartDate = this.setStartDate.bind(this)\r\n\t\tthis.setDate = this.setDate.bind(this)\r\n\t\tthis.onSubmit = this.onSubmit.bind(this)\r\n\t\tthis.padInteger = this.padInteger.bind(this)\r\n\t\tthis.rad2deg = this.rad2deg.bind(this)\r\n\t\tthis.deg2rad = this.deg2rad.bind(this)\r\n\t\tthis.isDate = this.isDate.bind(this)\r\n\t\tthis.dateInRange = this.dateInRange.bind(this)\r\n\t\tthis.dateIsBlocked = this.dateIsBlocked.bind(this)\r\n\t\r\n\t\tthis.initialized = false;\t\r\n\t\tthis._version = '0.1';\r\n\t\t\r\n\t\tthis.defOptions = options;\r\n\t\tthis.dpMode = \"datetime\";\t\r\n\t\tthis.inputDate = null;\r\n\t\tthis.showDate = true;\r\n\t\tthis.language = \"en\";\r\n\t\tthis.startDay = 1;\t// Monday\r\n\t\tthis.minDate = null;\r\n\t\tthis.maxDate = null;\r\n\t\tthis.showTitle = true;\r\n\t\tthis.blockdays = [];\r\n\t\tthis.display = \"full\";\r\n\t\tthis.showMsg = true;\r\n\t\tthis.blockDates = [];\r\n\t\tthis.dateFormat = \"dmy/\";\r\n\t\tthis.timeFormat = \"hm\";\r\n\t\tthis.position = \"free\";\r\n\t\t\r\n\t\tthis.error = [];\r\n\t\tthis.warning = [];\r\n\t\tthis.info = [];\r\n\t\t\r\n\t\tthis.lang = {\r\n\t\t\t\"en\":\t{\r\n\t\t\t\tmonth:\t\t[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\r\n\t\t\t\tmonthShort:\t[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\r\n\t\t\t\tday:\t\t[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\r\n\t\t\t\tdayShort:\t[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],\r\n\t\t\t\tbtncancel:\t\"Cancel\",\r\n\t\t\t\tbtnok:\t\t\"OK\",\r\n\t\t\t\terrTitle:\t\"Invalid 'showTitle' value. Default value will be used.\",\r\n\t\t\t\terrMode:\t\"Unknown 'mode' value. Default value will be used.\",\r\n\t\t\t\terrLang:\t\"Unknown 'lang' value. Default value will be used.\",\r\n\t\t\t\terrStart:\t\"Invalid 'startDay' value. Default value will be used.\",\r\n\t\t\t\terrMin:\t\t\"Invalid minimum date. This parameter will be ignored.\",\r\n\t\t\t\terrMax:\t\t\"Invalid maximum date. This parameter will be ignored.\",\r\n\t\t\t\terrMinMax:\t\"Minimun date is higher than maximum date. Both will be ignored.\",\r\n\t\t\t\terrDisplay:\t\"Invalid 'display' value. This parameter will be ignored.\",\r\n\t\t\t\terrMsg:\t\t\"Invalid 'showMsg' value. Default value will be used.\",\r\n\t\t\t\terrWeekDay:\t\"Unknown 'blockWeekdays' argument on position \",\r\n\t\t\t\terrWeekDay2:\"The 'blockWeekdays' parameter expects an array as argument.\",\r\n\t\t\t\terrInputField:\t\"DOM element not found\",\r\n\t\t\t\terrDateFormat:\t\"Invalid date format\",\t\t\t\r\n\t\t\t\terrBlockDate:\t\"Invalid date in 'blockDates' parameter at position \",\r\n\t\t\t\terrFormat:\t\t\"Invalid 'dateFormat' value. Default value will be used: 'mdy/'\",\r\n\t\t\t\terrTimeFormat:\t\"Invalid 'timeFormat' value. Default value will be used: 'hm'\",\r\n\t\t\t\terrPosition:\t\"Invalid element id to bind the widget position. Default value will be used: 'free'\",\r\n\t\t\t\terrPosition2:\t\"Ivalid 'position' value. Default value will be used: 'free'\",\r\n\t\t\t\terrShowDate:\t\"Invalid 'showDate' value. Default value will be used: 'true'\"\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t\"es\":\t{\r\n\t\t\t\tmonth:\t\t[\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"],\r\n\t\t\t\tmonthShort:\t[\"Ene\",\"Feb\",\"Mar\",\"Abr\",\"May\",\"Jun\",\"Jul\",\"Ago\",\"Sep\",\"Oct\",\"Nov\",\"Dic\"],\r\n\t\t\t\tday:\t\t[\"Domingo\",\"Lunes\",\"Martes\",\"Mi\\xe9rcoles\",\"Jueves\",\"Viernes\",\"S\\xe1bado\"],\r\n\t\t\t\tdayShort:\t[\"Do\",\"Lu\",\"Ma\",\"Mi\",\"Ju\",\"Vi\",\"S\\xe1\"],\r\n\t\t\t\tbtncancel:\t\"Cancelar\",\r\n\t\t\t\tbtnok:\t\t\"OK\",\r\n\t\t\t\terrTitle:\t\"Valor de 'showTitle' no v\\xe1lido. Se usar\\xe1 el valor por defecto.\",\r\n\t\t\t\terrMode:\t\"Valor de 'mode' desconocido. Se usar\\xe1 el valor por defecto.\",\r\n\t\t\t\terrLang:\t\"Valor de 'lang' desconocido. Se usar\\xe1 el valor por defecto.\",\r\n\t\t\t\terrStart:\t\"Valor de 'startDay' no v\\xe1lido. Se usar\\xe1 el valor por defecto.\",\r\n\t\t\t\terrMin:\t\t\"Fecha m\\xednima no v\\xe1lida. Este par\\xe1metro ser\\xe1 ignorado.\",\r\n\t\t\t\terrMax:\t\t\"Fecha m\\xe1xima no v\\xe1lida. Este par\\xe1metro ser\\xe1 ignorado.\",\r\n\t\t\t\terrMinMax:\t\"La fecha m\\xednima es posterior a la fecha m\\xe1xima. Ambos par\\xe1metros ser\\xe1n ignorados.\",\r\n\t\t\t\terrDisplay:\t\"Valor de 'display' no v\\xe1lido. Este par\\xe1metro ser\\xe1 ignorado.\",\r\n\t\t\t\terrMsg:\t\t\"Valor de 'showMsg' no v\\xe1lido. Se usar\\xe1 el valor por defecto.\",\r\n\t\t\t\terrWeekDay:\t\"Valor de 'blockWeekdays' desconocido en la posici\\xf3n \",\r\n\t\t\t\terrWeekDay2:\"El par\\xe1metro 'blockWeekdays' debe ser un array.\",\r\n\t\t\t\terrInputField:\t\"No se ha encontrado el campo de entrada en la p\\xe1gina.\",\r\n\t\t\t\terrDateFormat:\t\"Formato de fecha no v\\xe1lido.\",\t\t\t\r\n\t\t\t\terrBlockDate:\t\"Fecha no v\\xe1lida en el par\\xe1metro 'blockDates' en la posici\\xf3n \",\r\n\t\t\t\terrFormat:\t\t\"Valor de 'dateFormat' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'mdy/'\",\r\n\t\t\t\terrTimeFormat:\t\"Valor de 'timeFormat' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'hm'\",\r\n\t\t\t\terrPosition:\t\"ID del elemento no v\\xe1lida. No se puede enlazar el objeto con este valor de 'position'. Se usar\\xe1 el valor por defecto: 'free'\",\r\n\t\t\t\terrPosition2:\t\"Valor de 'position' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'free'\",\r\n\t\t\t\terrShowDate:\t\"Valor de 'showDate' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'true'\"\r\n\t\t\t}\t\t\r\n\t\t};\r\n\t\t\r\n\t\t// Set input/output field\r\n\t\tif(typeof(dateField) != \"undefined\" && dateField != null){\r\n\t\t\tthis.inputDate = document.getElementById(dateField);\r\n\t\t\tif(this.inputDate == null){\r\n\t\t\t\tthis.error.push(this.lang[this.language].errInputField);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.setOptions(options);\r\n\t\t\r\n\t\t\t\r\n\t\tthis.fecha = null;\r\n\t\tthis.nuevaFecha = null;\r\n\t\t\r\n\t\tthis.contenedor = null;\r\n\t\tthis.dp = null;\r\n\t\t\r\n\t\tthis.titleContainer = null;\r\n\t\tthis.titleTxt = null;\r\n\t\tthis.title = title;\r\n\t\t\r\n\t\tthis.ymcontainer = null;\r\n\t\tthis.yearContainer = null;\r\n\t\tthis.year = null;\r\n\t\tthis.yearTxt = null;\r\n\t\tthis.yearPrev = null;\r\n\t\tthis.yearNext = null;\r\n\t\t\r\n\t\tthis.monthContainer = null;\r\n\t\tthis.month = null;\r\n\t\tthis.monthTxt = null;\r\n\t\t\r\n\t\tthis.daySelected = null;\r\n\t\tthis.daySelectedTxt = null;\r\n\t\t\r\n\t\tthis.dayWeek = null;\r\n\t\tthis.dayWeekTxt = null;\t\r\n\t\t\r\n\t\tthis.timeTxt = null;\t\r\n\t\t\r\n\t\tthis.btnCalendar = null;\r\n\t\tthis.btnHour = null;\r\n\t\t\r\n\t\tthis.msgContainer = null;\r\n\t\tthis.msgTxt = null;\r\n\t\tthis.msgList = null;\r\n\t\tthis.msgArrow = null;\r\n\t\t\r\n\t\tthis.tableContainer = null;\r\n\t\tthis.dpCurrWindow = \"calendar\";\t// calendar / time\r\n\t\t\r\n\t\tthis.calendarContainer = null;\r\n\t\tthis.calendar = null;\r\n\t\tthis.monthList = null;\r\n\t\tthis.yearList = null;\r\n\t\tthis.decadeListContainer = null;\r\n\t\tthis.decadeList = null;\r\n\t\tthis.decadeShift = 0;\r\n\t\t\r\n\t\tthis.timeContainer = null;\r\n\t\tthis.clockType = \"analog\";\r\n\t\t// Analog clock variables\r\n\t\tthis.timeWindow = null;\r\n\t\tthis.timeMinutesContainer = null;\r\n\t\tthis.svgNS = null;\r\n\t\tthis.analogClockSVG = null;\r\n\t\tthis.clockHandSelected = null;\r\n\t\tthis.clockHand = null;\t\r\n\t\t\r\n\t\t// Digital clock variables\r\n\t\tthis.dcHour = null;\r\n\t\tthis.dcbtnHourUp = null;\r\n\t\tthis.dcbtnHourDown = null;\r\n\t\tthis.dcMinute = null;\r\n\t\tthis.dcbtnMinUp = null;\r\n\t\tthis.dcbtnMinDown = null;\r\n\t\t\r\n\t\tthis.btnCancel = null;\r\n\t\tthis.btnOK = null;\r\n\t}\r\n\r\n\tsetOptions(options){\t\r\n\t\r\n\t\t// Validate the options passed as argument and load them.\r\n\t\tif(typeof(options) != \"undefined\" && options != null){\r\n\t\t\tvar tmplang = options['lang'];\r\n\t\t\tvar tmptitle = options['showTitle'];\r\n\t\t\tvar tmpmode = options['mode'];\r\n\t\t\tvar tmpdateformat = options['dateFormat'];\r\n\t\t\tvar tmptimeformat = options['timeFormat'];\r\n\t\t\tvar tmpstartday = options['startDay'];\r\n\t\t\tvar tmpmindate = options['minDate'];\r\n\t\t\tvar tmpmaxdate = options['maxDate'];\r\n\t\t\tvar tmpdisplay = options['display'];\r\n\t\t\tvar tmpshowmsg = options['showMsg'];\r\n\t\t\tvar tmpblockweekdays = options['blockWeekdays'];\r\n\t\t\tvar tmpblockdates = options['blockDates'];\r\n\t\t\tvar tmpposition = options['position'];\r\n\t\t\tvar tmpshowdate = options['showDate'];\r\n\t\t\t\r\n\t\t\t// Select language\r\n\t\t\tif(typeof(tmplang) != \"undefined\" && tmplang != null){\t\t\t\r\n\t\t\t\tif(this.lang[tmplang] == null){\t\t\t\t\r\n\t\t\t\t\tthis.language = \"en\";\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errLang);\r\n\t\t\t\t}else{\t\t\t\t\t\t\r\n\t\t\t\t\tthis.language = tmplang;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Print the date in the input field on submit\r\n\t\t\tif(typeof(tmpshowdate) != \"undefined\" && tmpshowdate != null){\t\t\t\r\n\t\t\t\tif(typeof(tmpshowdate) === 'boolean'){\t\t\t\t\r\n\t\t\t\t\tthis.showDate = tmpshowdate;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errShowDate);\r\n\t\t\t\t\tthis.showDate = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Show/hide title\t\t\r\n\t\t\tif(typeof(tmptitle) != \"undefined\" && tmptitle != null){\r\n\t\t\t\tif(typeof(tmptitle) === 'boolean'){\r\n\t\t\t\t\tthis.showTitle = tmptitle;\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errTitle);\r\n\t\t\t\t\tthis.showTitle = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the datepicker mode\r\n\t\t\tif(typeof(tmpmode) != \"undefined\" && tmpmode != null){\r\n\t\t\t\tif(tmpmode === \"date\"){\r\n\t\t\t\t\tthis.dpMode = \"date\";\r\n\t\t\t\t}else if(tmpmode === \"time\"){\r\n\t\t\t\t\tthis.dpMode = \"time\";\r\n\t\t\t\t}else if(tmpmode === \"datetime\"){\r\n\t\t\t\t\tthis.dpMode = \"datetime\";\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.dpMode = \"datetime\";\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMode);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\t\t\t// Set date format\r\n\t\t\tif(typeof(tmpdateformat) != \"undefined\" && tmpdateformat != null){\t\t\t\r\n\t\t\t\tif(typeof(tmpdateformat) === 'string' && tmpdateformat.length === 4){\t\t\t\t\r\n\t\t\t\t\tvar sep = tmpdateformat.substr(3);\r\n\t\t\t\t\tif(sep !== '/' && sep !== '-'){\t\t\t\t\t\r\n\t\t\t\t\t\tthis.error = this.lang[this.language].errFormat;\r\n\t\t\t\t\t}else{\t\t\t\t\t\r\n\t\t\t\t\t\tvar p = tmpdateformat.substr(0,3);\t\t\t\t\t\r\n\t\t\t\t\t\tif(p === 'ymd' || p === 'ydm' || p === 'dmy' || p === 'mdy'){\r\n\t\t\t\t\t\t\tthis.dateFormat = tmpdateformat;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.error = this.lang[this.language].errFormat;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.error = this.lang[this.language].errFormat;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set time format\r\n\t\t\tif(typeof(tmptimeformat) != \"undefined\" && tmptimeformat != null){\t\t\t\r\n\t\t\t\tif(tmptimeformat === 'h' || tmptimeformat === 'hm' || tmptimeformat === 'hms'){\r\n\t\t\t\t\tthis.timeFormat = tmptimeformat;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.error = this.lang[this.language].errTimeFormat;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the starting day of the week\r\n\t\t\tif(typeof(tmpstartday) != \"undefined\" && tmpstartday != null){\r\n\t\t\t\tif(tmpstartday >= 0 && tmpstartday < 7){\t\t\t\t\r\n\t\t\t\t\tthis.startDay = tmpstartday;\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errStart);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the minimum date that can be picked\r\n\t\t\tif(typeof(tmpmindate)!= \"undefined\" && tmpmindate != null && this.dpMode !== \"time\"){\r\n\t\t\t\t\r\n\t\t\t\tthis.minDate = this.createDate(tmpmindate);\r\n\t\t\t\tif(!this.isDate(this.minDate)){\t\t\t\t\r\n\t\t\t\t\tthis.minDate = null;\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the maximum date that can be picked\r\n\t\t\tif(typeof(tmpmaxdate)!= \"undefined\" && tmpmaxdate != null && this.dpMode !== \"time\"){\r\n\t\t\t\t\r\n\t\t\t\tthis.maxDate = this.createDate(tmpmaxdate);\r\n\t\t\t\tif(!this.isDate(this.maxDate)){\r\n\t\t\t\t\tthis.maxDate = null;\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMax);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\t\t\t// Set the type of display\r\n\t\t\tif(typeof(tmpdisplay)!= \"undefined\" && tmpdisplay != null){\r\n\t\t\t\tif(tmpdisplay === \"compact\"){\t\t\t\t\r\n\t\t\t\t\tthis.display = \"compact\";\t\t\t\r\n\t\t\t\t}else if(tmpdisplay === \"full\"){\r\n\t\t\t\t\tthis.display = \"full\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errDisplay);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\t\t\t// Show / hide the error and warning messages\r\n\t\t\tif(typeof(tmpshowmsg)!= \"undefined\" && tmpshowmsg != null){\r\n\t\t\t\tif(tmpshowmsg === true){\r\n\t\t\t\t\tthis.showMsg = true;\r\n\t\t\t\t}else if (tmpshowmsg === false){\r\n\t\t\t\t\tthis.showMsg = false;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMsg);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the position of the widget\r\n\t\t\tif(typeof(tmpposition)!= \"undefined\" && tmpposition != null){\r\n\t\t\t\tif(tmpposition === \"free\"){\r\n\t\t\t\t\tthis.position = tmpposition;\r\n\t\t\t\t}else if (tmpposition === \"attach\" || tmpposition === \"fixed\"){\r\n\t\t\t\t\tif(this.inputDate !== null ){\r\n\t\t\t\t\t\tthis.position = tmpposition;\r\n\t\t\t\t\t}else{\t\t\t\t\t\r\n\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errPosition);\r\n\t\t\t\t\t\tthis.position = \"free\";\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errPosition2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the weekdays that are blocked\r\n\t\t\tif(typeof(tmpblockweekdays) != \"undefined\" && tmpblockweekdays != null && this.dpMode !== \"time\"){\r\n\t\t\t\t// Checks if the object passed is an array\r\n\t\t\t\tif(Object.prototype.toString.call(tmpblockweekdays) === '[object Array]'){\r\n\t\t\t\t\tthis.blockdays = [];\r\n\t\t\t\t\tfor(var i=0;i<tmpblockweekdays.length;i++){\r\n\t\t\t\t\t\tswitch(tmpblockweekdays[i]){\r\n\t\t\t\t\t\t\tcase \"mon\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"tue\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(2);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"wed\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(3);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"thu\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(4);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"fri\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(5);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"sat\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(6);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"sun\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(0);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthis.error.push(this.lang[this.language].errWeekDay + i);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.error.push(this.lang[this.language].errWeekDay);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// Set the dates blocked\r\n\t\t\tif(typeof(tmpblockdates) != \"undefined\" && tmpblockdates != null && this.dpMode !== \"time\"){\t\t\t\r\n\t\t\t\tfor(var i = 0; i< tmpblockdates.length; i++){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(tmpblockdates[i].length === 1){\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar d = this.createDate(tmpblockdates[i][0]);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(this.isDate(d)){\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.blockDates.push([d]);\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tmpblockdates[i].length === 2){\t\t\t\t\t\r\n\t\t\t\t\t\tvar daterange = tmpblockdates[i];\r\n\t\t\t\t\t\tvar d1 = this.createDate(daterange[0]);\r\n\t\t\t\t\t\tvar d2 = this.createDate(daterange[1]);\r\n\t\t\t\t\t\tif(this.isDate(d1) && this.isDate(d2)){\r\n\t\t\t\t\t\t\tif(d1<= d2){\r\n\t\t\t\t\t\t\t\tthis.blockDates.push([d1,d2]);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\t\r\n\t\t\r\n\t\t// Validates min and max dates\r\n\t\tif(this.minDate != null && this.maxDate != null){\r\n\t\t\tif(this.minDate.getTime() > this.maxDate.getTime()){\r\n\t\t\t\tthis.minDate = null;\r\n\t\t\t\tthis.maxDate = null;\r\n\t\t\t\tthis.warning.push(this.lang[this.language].errMinMax);\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Validates the block dates\r\n\t\tfor(var i = 0; i< this.blockDates.length; i++){\r\n\t\t\tif(this.blockDates[i].length === 1){\t\t\t\r\n\t\t\t\tif(!this.dateInRange(this.blockDates[i][0],\"day\")){\t\t\t\t\t\r\n\t\t\t\t\tthis.blockDates.splice(i);\t\t\t\t\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif( ( (this.maxDate != null && this.blockDates[i][0] > this.maxDate) || (this.minDate != null && this.blockDates[i][1] < this.minDate)) || \r\n\t\t\t\t\tthis.blockDates[i][1] < this.blockDates[i][0]\r\n\t\t\t\t){\t\t\t\t\t\r\n\t\t\t\t\tthis.blockDates.splice(i);\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\r\n\t\t\r\n\t\t// Updates the weekdays positions in the array depending on the start day.\r\n\t\tfor(var i=0; i<this.startDay;i++){\r\n\t\t\tthis.lang[this.language].day.push(this.lang[this.language].day.shift());\r\n\t\t\tthis.lang[this.language].dayShort.push(this.lang[this.language].dayShort.shift());\t\t\t\t\r\n\t\t}\t\r\n\t}\r\n\r\n\treset (){\r\n\t\tthis.dpMode = \"datetime\";\t\r\n\t\t//this.inputDate = null;\r\n\t\tthis.showDate = true;\r\n\t\tthis.language = \"en\";\r\n\t\tthis.startDay = 1;\t// Monday\r\n\t\tthis.minDate = null;\r\n\t\tthis.maxDate = null;\r\n\t\tthis.showTitle = true;\r\n\t\tthis.blockdays = [];\r\n\t\tthis.display = \"full\";\r\n\t\tthis.showMsg = true;\r\n\t\tthis.blockDates = [];\r\n\t\tthis.dateFormat = \"dmy/\";\r\n\t\tthis.timeFormat = \"hm\";\r\n\t\tthis.position = \"free\";\r\n\t\t\r\n\t\tthis.error = [];\r\n\t\tthis.warning = [];\r\n\t\tthis.info = [];\r\n\t\t\r\n\t\tthis.fecha = null;\r\n\t\tthis.nuevaFecha = null;\r\n\t\t\r\n\t\tthis.setOptions(this.defOptions);\r\n\t\tthis.dpCurrWindow = \"calendar\";\r\n\t\t\r\n\t}\r\n\tshow (){\r\n\t\tvar dpInstance = this;\t\r\n\t\t\r\n\t\tif(this.initialized){\t\t\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tthis.error = [];\r\n\t\t\r\n\t\t\r\n\t\tif(this.inputDate != null && this.showDate === true){\t\t\r\n\t\t\tthis.fecha =  this.setStartDate();\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// Check if the setDate method returns a valid date. If the returned value is not a valid date, sets the current date.\r\n\t\tif(!this.isDate(this.fecha)){\r\n\t\t\tthis.fecha = new Date();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.minDate != null && this.fecha < this.minDate){\r\n\t\t\tthis.fecha = new Date(this.minDate.getTime());\r\n\t\t}\r\n\t\tif(this.maxDate != null && this.fecha > this.maxDate){\r\n\t\t\tthis.fecha = new Date(this.maxDate.getTime());\r\n\t\t}\r\n\t\t\r\n\t\tthis.nuevaFecha = new Date(this.fecha.getTime());\r\n\t\t\r\n\t\tthis.contenedor = document.createElement(\"div\");\r\n\t\tif(this.position === \"attach\"){\t\t\r\n\t\t\tthis.contenedor.className = \"orzk-dp_contenedor_attach\";\t\t\r\n\t\t\tvar coord = this.inputDate.getBoundingClientRect();\t\r\n\t\t\t\r\n\t\t\t//this.contenedor.style.top = (coord.top + coord.height + (this.inputDate.offsetTop - coord.top))+'px';\t\r\n\t\t\tthis.contenedor.style.top = (window.scrollY + coord.top + coord.height)+'px';\r\n\t\t\tthis.contenedor.style.left = (window.scrollX + coord.left)+'px';\t\t\r\n\t\t\t\t\r\n\t\t}else{\r\n\t\t\tthis.contenedor.className = \"orzk-dp_contenedor\";\r\n\t\t}\r\n\t\tthis.contenedor.id = \"datepicker\";\r\n\t\tthis.contenedor.onclick = function(){\r\n\t\t\t//this.parentNode.removeChild(this);\r\n\t\t};\r\n\t\t\r\n\t\tthis.dp = document.createElement(\"div\");\r\n\t\tif(this.position === \"attach\"){\r\n\t\t\tthis.dp.className = \"orzk-dp_datepicker_attach\";\r\n\t\t}else{\r\n\t\t\tthis.dp.className = \"orzk-dp_datepicker\";\r\n\t\t}\r\n\t\t\r\n\t\tif(this.title != null && this.showTitle){\r\n\t\t\tthis.titleContainer = document.createElement(\"div\");\r\n\t\t\tthis.titleContainer.className = \"orzk-dp_title\";\r\n\t\t\tthis.titleTxt = document.createTextNode(this.title);\r\n\t\t\tthis.titleContainer.appendChild(this.titleTxt);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.dpMode !== \"time\"){\r\n\t\t\t// Year - month container\r\n\t\t\tthis.ymcontainer = document.createElement(\"div\");\r\n\t\t\t\r\n\t\t\t// Year block\r\n\t\t\tthis.yearContainer = document.createElement(\"div\");\r\n\t\t\tthis.yearContainer.className = \"orzk-dp_year_month_container\";\r\n\t\t\t\r\n\t\t\tthis.yearPrev = document.createElement(\"div\");\t\t\r\n\t\t\tthis.yearPrev.className = \"orzk-dp_arrow orzk-dp_left\";\r\n\t\t\tthis.yearPrev.id = \"dp_year_prev\";\r\n\t\t\tthis.yearPrev.onclick = function() {\t\t\t\r\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear()-1;\t\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t};\t\r\n\t\t\t\r\n\t\t\tthis.yearNext = document.createElement(\"div\");\t\t\r\n\t\t\tthis.yearNext.className = \"orzk-dp_arrow orzk-dp_right\";\r\n\t\t\tthis.yearNext.id = \"dp_year_next\";\r\n\t\t\tthis.yearNext.onclick = function() {\t\t\t\r\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear()+1;\t\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t};\t\t\r\n\t\t\t\r\n\t\t\tthis.year = document.createElement(\"div\");\r\n\t\t\tthis.year.className = \"orzk-dp_year_month\";\r\n\t\t\tthis.yearTxt = document.createTextNode(this.lang[this.language].month[this.fecha.getMonth()]);\r\n\t\t\tthis.year.onclick = function(){\r\n\t\t\t\tdpInstance.showCalendar();\r\n\t\t\t\tif(document.getElementById(\"dp-year-list\")== null || dpInstance.dpCurrWindow === \"time\"){\t\t\t\t\r\n\t\t\t\t\tdpInstance.printYearList(0);\r\n\t\t\t\t}else{\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tthis.year.appendChild(this.yearTxt);\r\n\t\t\t\r\n\t\t\tthis.yearContainer.appendChild(this.yearPrev);\t\t\r\n\t\t\tthis.yearContainer.appendChild(this.year);\r\n\t\t\tthis.yearContainer.appendChild(this.yearNext);\r\n\t\t\t\r\n\t\t\t// Month block\t\t\r\n\t\t\tthis.monthContainer = document.createElement(\"div\");\r\n\t\t\tthis.monthContainer.className=\"orzk-dp_year_month_container\";\r\n\t\t\t\r\n\t\t\tthis.monthPrev = document.createElement(\"div\");\r\n\t\t\tthis.monthPrev.className = \"orzk-dp_arrow orzk-dp_left\";\r\n\t\t\tthis.monthPrev.id = \"dp_month_prev\";\r\n\t\t\tthis.monthPrev.onclick = function() {\r\n\t\t\t\tvar month = dpInstance.nuevaFecha.getMonth() - 1;\r\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear();\r\n\t\t\t\t\r\n\t\t\t\tif(month < 0){\r\n\t\t\t\t\tmonth = 11;\r\n\t\t\t\t\tyear--;\r\n\t\t\t\t}\r\n\t\t\t\tdpInstance.nuevaFecha.setMonth(month);\r\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.updateDisplay();\t\t\t\r\n\t\t\t};\t\r\n\t\t\t\r\n\t\t\tthis.monthNext = document.createElement(\"div\");\r\n\t\t\tthis.monthNext.className = \"orzk-dp_arrow orzk-dp_right\";\r\n\t\t\tthis.monthNext.id = \"dp_month_next\";\t\t\r\n\t\t\tthis.monthNext.onclick = function() {\r\n\t\t\t\tvar month = dpInstance.nuevaFecha.getMonth() + 1;\r\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear();\r\n\t\t\t\t\r\n\t\t\t\tif(month > 11){\r\n\t\t\t\t\tmonth = 0;\r\n\t\t\t\t\tyear++;\r\n\t\t\t\t}\r\n\t\t\t\tdpInstance.nuevaFecha.setMonth(month);\r\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t};\t\t\r\n\t\t\t\r\n\t\t\tthis.month = document.createElement(\"div\");\r\n\t\t\tthis.month.className = \"orzk-dp_year_month\";\r\n\t\t\tthis.monthTxt = document.createTextNode(this.lang[this.language].month[this.fecha.getMonth()]);\r\n\t\t\tthis.month.onclick = function(){\r\n\t\t\t\tdpInstance.showCalendar();\r\n\t\t\t\t\r\n\t\t\t\tif(document.getElementById(\"dp-month-list\")== null || dpInstance.dpCurrWindow === \"time\"){\t\t\t\t\r\n\t\t\t\t\tdpInstance.printMonthList();\r\n\t\t\t\t}else{\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t\tthis.month.appendChild(this.monthTxt);\r\n\t\t\t\r\n\t\t\tthis.monthContainer.appendChild(this.monthPrev);\r\n\t\t\tthis.monthContainer.appendChild(this.month);\r\n\t\t\tthis.monthContainer.appendChild(this.monthNext);\r\n\t\t\t\r\n\t\t\tthis.ymcontainer.appendChild(this.monthContainer);\r\n\t\t\tthis.ymcontainer.appendChild(this.yearContainer);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// Day block\r\n\t\t\tthis.daySelected = document.createElement(\"div\");\r\n\t\t\tthis.daySelected.className=\"orzk-dp_day\";\t\t\r\n\t\t\tthis.daySelectedTxt = document.createTextNode(this.fecha.getDate());\r\n\t\t\tthis.daySelected.appendChild(this.daySelectedTxt);\r\n\t\t\t\r\n\t\t\t// Day of the week block\r\n\t\t\tthis.dayWeek = document.createElement(\"div\");\r\n\t\t\tthis.dayWeek.className=\"orzk-dp_dayweek\";\r\n\t\t\tthis.dayWeekTxt = document.createTextNode(this.lang[this.language].day[this.fecha.getDay()]);\r\n\t\t\tthis.dayWeek.appendChild(this.dayWeekTxt);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.dpMode !== \"date\"){\r\n\t\t\t// Time block\t\r\n\t\t\tthis.timeTxt = document.createElement(\"div\");\r\n\t\t\tthis.timeTxt.className = \"orzk-dp_time\";\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar dayhourContainer = null;\r\n\t\tif(this.dpMode === \"datetime\"){\r\n\t\t\t// Calendar / hour buttons\r\n\t\t\tdayhourContainer = document.createElement(\"div\");\r\n\t\t\tdayhourContainer.className = \"orzk-dp_dayhourcontainer\";\r\n\t\t\tthis.btnCalendar = document.createElement(\"div\");\r\n\t\t\tthis.btnCalendar.className = \"orzk-dp-icon-calendar orzk-dp_calendar_button orzk-dp_dayhour_button_selected\";\r\n\t\t\tthis.btnCalendar.onclick = function (){\r\n\t\t\t\tdpInstance.showCalendar();\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.btnHour = document.createElement(\"div\");\r\n\t\t\tthis.btnHour.className = \"orzk-dp-icon-time orzk-dp_hour_button\";\r\n\t\t\tthis.btnHour.onclick = function (){\r\n\t\t\t\tdpInstance.showTime();\t\t\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tdayhourContainer.appendChild(this.btnCalendar);\r\n\t\t\tdayhourContainer.appendChild(this.btnHour);\r\n\t\t}\r\n\t\t\r\n\t\t// Message block\r\n\t\tthis.msgContainer = document.createElement(\"div\");\r\n\t\tthis.msgContainer.className = \"orzk-dp_msg orzk-dp_hide\";\r\n\t\tthis.msgContainer.onclick = function(){\r\n\t\t\tif(dpInstance.msgTxt.className.indexOf(\"hide\") !== -1){\r\n\t\t\t\tdpInstance.msgTxt.style.top = dpInstance.msgContainer.style.top + dpInstance.msgContainer.height;\r\n\t\t\t\tdpInstance.msgTxt.className = dpInstance.msgTxt.className.replace(/\\borzk-dp_hide\\b/,\"\");\r\n\t\t\t\tdpInstance.msgArrow.className = \"orzk-dp_up\";\r\n\t\t\t}else{\r\n\t\t\t\tdpInstance.msgTxt.className += \" orzk-dp_hide\";\t\r\n\t\t\t\tdpInstance.msgArrow.className = \"orzk-dp_down\";\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.msgTxt = document.createElement(\"div\");\r\n\t\tthis.msgTxt.className = \"orzk-dp_msg_list orzk-dp_hide\";\r\n\t\tthis.msgTxt.onclick = function(){\r\n\t\t\tdpInstance.msgTxt.className += \" orzk-dp_hide\";\r\n\t\t\tdpInstance.msgArrow.className = \"orzk-dp_down\";\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\tif(this.dpMode !== \"date\"){\r\n\t\t\t// Clock block\r\n\t\t\tthis.timeContainer = document.createElement(\"div\");\r\n\t\t\tthis.timeContainer.className = \"orzk-dp_time_container orzk-dp_hide\";\r\n\t\t\tif(this.clockType === \"analog\"){\r\n\t\t\t\tthis.timeWindow = \"hour\";\t\r\n\t\t\t\t\r\n\t\t\t\tthis.timeMinutesContainer = document.createElement(\"div\");\r\n\t\t\t\tthis.timeMinutesContainer.className = \"orzk-dp_time_minutes\";\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.analogClockSVG = document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\");\r\n\t\t\t\tthis.svgNS = this.analogClockSVG.namespaceURI;\r\n\t\t\t\tthis.analogClockSVG.setAttribute(\"class\",\"orzk-dp_clock_svg orzk-dp_hide\");\r\n\t\t\t\tthis.clockHand = document.createElementNS(this.svgNS,\"line\");\r\n\t\t\t\tthis.clockHandSelected = document.createElementNS(this.svgNS,\"line\");\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.analogClockSVG.appendChild(this.clockHand);\r\n\t\t\t\tthis.analogClockSVG.appendChild(this.clockHandSelected);\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}/*else if(this.clockType == \"digital\"){\r\n\t\t\t\t\r\n\t\t\t}*/\r\n\t\t}\r\n\t\t\r\n\t\tif(this.dpMode !== \"time\"){\r\n\t\t\t// Calendar block\r\n\t\t\tthis.calendarContainer = document.createElement(\"div\");\t\t\r\n\t\t\tthis.printCalendar();\r\n\t\t}\r\n\t\t\r\n\t\tthis.tableContainer = document.createElement(\"div\");\r\n\t\tthis.tableContainer.className = \"orzk-dp_table_container\";\r\n\t\tif(this.dpMode !== \"time\"){\r\n\t\t\tthis.tableContainer.appendChild(this.calendarContainer);\r\n\t\t}\r\n\t\tif(this.dpMode !== \"date\"){\r\n\t\t\tthis.tableContainer.appendChild(this.timeContainer);\r\n\t\t\tthis.tableContainer.appendChild(this.analogClockSVG);\r\n\t\t}\r\n\t\t\r\n\t\t// Buttons\r\n\t\tvar btnContainer = document.createElement(\"div\");\r\n\t\tbtnContainer.className = \"orzk-dp_btn_container\";\r\n\t\t\r\n\t\tthis.btnCancel = document.createElement(\"div\");\r\n\t\tthis.btnCancel.className = \"orzk-dp_button\";\r\n\t\tthis.btnCancel.appendChild(document.createTextNode(this.lang[this.language].btncancel));\r\n\t\tthis.btnCancel.onclick = function(){\r\n\t\t\tdpInstance.nuevaFecha = dpInstance.fecha;\r\n\t\t\tdpInstance.close();\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\tthis.btnOK = document.createElement(\"div\");\r\n\t\tthis.btnOK.className = \"orzk-dp_button\";\r\n\t\tthis.btnOK.appendChild(document.createTextNode(this.lang[this.language].btnok));\r\n\t\tthis.btnOK.onclick = function(){\t\t\r\n\t\t\tdpInstance.fecha = new Date(dpInstance.nuevaFecha.getTime());\t\t\r\n\t\t\tdpInstance.onSubmit(dpInstance.fecha);\t\t\t\r\n\t\t\tdpInstance.close();\t\t\r\n\t\t};\r\n\t\t\r\n\t\tbtnContainer.appendChild(this.btnCancel);\r\n\t\tbtnContainer.appendChild(this.btnOK);\r\n\t\t\r\n\t\t\r\n\t\tif(this.showTitle){\r\n\t\t\tthis.dp.appendChild(this.titleContainer);\r\n\t\t}\r\n\t\t\r\n\t\tthis.dp.appendChild(this.msgContainer);\r\n\t\tthis.dp.appendChild(this.msgTxt);\r\n\t\t\r\n\t\tif(this.dpMode !== \"time\"){\r\n\t\t\tthis.dp.appendChild(this.ymcontainer);\r\n\t\t\tif(this.display === \"full\"){\r\n\t\t\t\tthis.dp.appendChild(this.dayWeek);\t\r\n\t\t\t\tthis.dp.appendChild(this.daySelected);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif((this.dpMode !== \"date\") || this.dpMode === \"time\"){\t\t\r\n\t\t\tthis.dp.appendChild(this.timeTxt);\r\n\t\t}\r\n\t\tif(this.dpMode === \"datetime\"){\r\n\t\t\tthis.dp.appendChild(dayhourContainer);\r\n\t\t}\r\n\t\t\r\n\t\tthis.dp.appendChild(this.tableContainer);\r\n\t\tthis.dp.appendChild(btnContainer);\r\n\t\t\r\n\t\tif(this.position === \"attach\"){\t\t\r\n\t\t\tvar arrow = document.createElement(\"div\");\r\n\t\t\tarrow.className = \"orzk-dp_arrow_attach\";\t\t\r\n\t\t\tthis.contenedor.appendChild(arrow);\r\n\t\t}\r\n\t\tthis.contenedor.appendChild(this.dp);\t\r\n\t\t\r\n\t\tdocument.body.appendChild(this.contenedor);\r\n\t\tif(this.dpMode === \"time\"){\r\n\t\t\tthis.dpCurrWindow = \"time\";\r\n\t\t}else{\r\n\t\t\tthis.dpCurrWindow = \"calendar\";\r\n\t\t}\r\n\t\tthis.updateDisplay();\r\n\t\t\r\n\t\tthis.initialized = true;\r\n\t}\r\n\r\n\t\r\n\tupdateDisplay (){\t\r\n\t\tif(this.dpMode !== \"time\"){\r\n\t\t\tthis.yearTxt.nodeValue = this.nuevaFecha.getFullYear();\r\n\t\t\tthis.monthTxt.nodeValue = this.lang[this.language].month[this.nuevaFecha.getMonth()];\r\n\t\t\tif(this.dateInRange(this.nuevaFecha,\"day\") && !this.dateIsBlocked(this.nuevaFecha)){\r\n\t\t\t\tthis.daySelectedTxt.nodeValue = this.nuevaFecha.getDate();\r\n\t\t\t\tthis.dayWeekTxt.nodeValue = this.lang[this.language].day[(this.nuevaFecha.getDay()+6)%7];\r\n\t\t\t}else{\r\n\t\t\t\tthis.daySelectedTxt.nodeValue = \"--\";\r\n\t\t\t\tthis.dayWeekTxt.nodeValue = \"-\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.printCalendar();\r\n\t\t\tif(this.daySelectedTxt != null && this.daySelectedTxt.nodeValue !== \"--\"){\t\t\t\r\n\t\t\t\tdocument.getElementById(\"datepicker_d_\"+this.daySelectedTxt.nodeValue).className = \"orzk-dp_calendar_day_selected\";\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\tif(this.dpMode !== \"date\"){\r\n\t\t\tthis.updateTime(this.nuevaFecha);\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif(this.dpCurrWindow === \"time\"){\t\t\r\n\t\t\tthis.showTime();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.dpMode === \"time\" || (this.dpMode !== \"time\" && (this.dateInRange(this.nuevaFecha,\"day\") && !this.dateIsBlocked(this.nuevaFecha))) ){\r\n\t\t\tthis.btnOK.className = this.btnOK.className.replace(/\\borzk-dp_invisible\\b/,\"\");\r\n\t\t}else{\r\n\t\t\tif(this.btnOK.className.indexOf(\"orzk-dp_invisible\") === -1){\r\n\t\t\t\tthis.btnOK.className += \" orzk-dp_invisible\";\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\r\n\t\tif(this.showMsg === true && (this.info.length >0 || this.error.length > 0 || this.warning.length > 0)){\r\n\t\t\tthis.clearMsgContainer();\t\t\r\n\t\t\tvar icon;\r\n\t\t\t/*\r\n\t\t\tif(this.info.length > 0){\r\n\t\t\t\t\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\tif(this.error.length>0){\r\n\t\t\t\ticon = document.createElement(\"div\");\r\n\t\t\t\ticon.className = \"orzk-dp_error_icon\";\r\n\t\t\t\ticon.appendChild(document.createTextNode(this.error.length + \" error\"));\r\n\t\t\t\tthis.msgContainer.appendChild(icon);\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfor(var i=0; i< this.error.length; i++){\r\n\t\t\t\t\tvar msg = document.createElement(\"div\");\r\n\t\t\t\t\tmsg.className = \"orzk-dp_msg_error\";\r\n\t\t\t\t\tmsg.appendChild(document.createTextNode(this.error[i]));\r\n\t\t\t\t\tthis.msgTxt.appendChild(msg);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.warning.length > 0){\t\r\n\t\t\t\ticon = document.createElement(\"div\");\r\n\t\t\t\ticon.className = \"orzk-dp_warning_icon\";\r\n\t\t\t\ticon.appendChild(document.createTextNode(this.warning.length + \" warning\"));\r\n\t\t\t\tthis.msgContainer.appendChild(icon);\t\r\n\t\t\t\t\r\n\t\t\t\tfor(var i=0; i< this.warning.length; i++){\r\n\t\t\t\t\tvar msg = document.createElement(\"div\");\r\n\t\t\t\t\tmsg.className = \"orzk-dp_msg_warning\";\r\n\t\t\t\t\tmsg.appendChild(document.createTextNode(this.warning[i]));\r\n\t\t\t\t\tthis.msgTxt.appendChild(msg);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.msgArrow = document.createElement(\"div\");\r\n\t\t\tthis.msgArrow.className = \"orzk-dp_down\";\r\n\t\t\tthis.msgContainer.appendChild(this.msgArrow);\r\n\t\t\tthis.msgContainer.className = this.msgContainer.className.replace(/\\borzk-dp_hide\\b/,\"\");\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tdaysInMonth(){\r\n\t\treturn 32 - new Date(this.nuevaFecha.getFullYear(),this.nuevaFecha.getMonth(),32).getDate();\r\n\t}\r\n\t\r\n\tfirstDay (){\r\n\t\tvar wd = new Date(this.nuevaFecha.getFullYear(),this.nuevaFecha.getMonth()).getDay();\t\r\n\t\treturn (wd +(7-this.startDay))%7;\r\n\t}\r\n\t\r\n\tclearCalendarContainer (){\r\n\t\t// Elimina los elementos anteriores\r\n\t\twhile(this.calendarContainer.firstChild){\r\n\t\t\tthis.calendarContainer.removeChild(this.calendarContainer.firstChild);\r\n\t\t}\r\n\t}\r\n\t\r\n\tclearTimeContainer (){\r\n\t\t// Elimina los elementos anteriores\r\n\t\twhile(this.timeContainer.firstChild){\r\n\t\t\tthis.timeContainer.removeChild(this.timeContainer.firstChild);\r\n\t\t}\r\n\t}\r\n\r\n\tclearMsgContainer (){\t\r\n\t\t// Elimina los elementos anteriores\r\n\t\twhile(this.msgContainer.firstChild){\r\n\t\t\tthis.msgContainer.removeChild(this.msgContainer.firstChild);\r\n\t\t}\r\n\t\twhile(this.msgTxt.firstChild){\r\n\t\t\tthis.msgTxt.removeChild(this.msgTxt.firstChild);\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tprintCalendar (){\r\n\t\tvar dpInstance = this;\r\n\t\tthis.clearCalendarContainer();\r\n\t\t\r\n\t\tthis.calendar = document.createElement(\"table\");\r\n\t\tthis.calendar.className=\"orzk-dp_days\";\r\n\t\t\r\n\t\tvar week = document.createElement(\"tr\");\r\n\t\tfor(var i = 0; i< this.lang[this.language].day.length;i++){\r\n\t\t\tvar day = document.createElement(\"th\");\r\n\t\t\tday.appendChild(document.createTextNode(this.lang[this.language].dayShort[i]));\r\n\t\t\tday.id = \"wd_\"+i;\r\n\t\t\tweek.appendChild(day);\r\n\t\t}\r\n\t\tthis.calendar.appendChild(week);\r\n\t\t\r\n\t\tvar first = this.firstDay();\r\n\t\tvar numDays = this.daysInMonth();\t\t\t\r\n\t\tvar numWeeks = Math.ceil((first + numDays)/7);\r\n\t\t\r\n\t\tvar currDate = null;\r\n\t\tvar dayCount = 1;\r\n\t\tfor(var i=0;i<numWeeks;i++){\r\n\t\t\tweek = document.createElement(\"tr\");\r\n\t\t\tfor(var j=0; j<=6;j++){\r\n\t\t\t\tvar day = document.createElement(\"td\");\r\n\t\t\t\tif(\t(i===0 && first > j) ||\t\t\t\t\t\t\t\t\t\t\t\t\t\t//No imprime los días de la primera semana anteriores al día 1 del mes\r\n\t\t\t\t\t(i===numWeeks-1 && ((first+numDays)%7) > 0 && j >= ((first + numDays)%7))\t// No imprime los días de la última semana posteriores al último día del mes\r\n\t\t\t\t){\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\t\t\t\t\t\t\r\n\t\t\t\t\tday.appendChild(document.createTextNode(dayCount));\r\n\t\t\t\t\tday.id = \"datepicker_d_\"+dayCount;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcurrDate = new Date(this.nuevaFecha.getTime());\r\n\t\t\t\t\tcurrDate.setDate(dayCount);\r\n\t\t\t\t\tif( this.dateInRange(currDate,'day') && !this.dateIsBlocked(currDate) ){\r\n\t\t\t\t\t\tday.className = \"orzk-dp_pickable\";\r\n\t\t\t\t\t\tday.onclick = function(){\r\n\t\t\t\t\t\t\tvar oldDaySelected = document.getElementById(\"datepicker_d_\"+dpInstance.daySelectedTxt.nodeValue);\r\n\t\t\t\t\t\t\tif(oldDaySelected != null){\r\n\t\t\t\t\t\t\t\toldDaySelected.className = oldDaySelected.className.replace(/\\borzk-dp_calendar_day_selected\\b/g,\"\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdpInstance.nuevaFecha.setDate(this.id.substr(13));\r\n\t\t\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tday.className = \"orzk-dp_not_pickable\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdayCount++;\r\n\t\t\t\t}\r\n\t\t\t\tweek.appendChild(day);\r\n\t\t\t}\r\n\t\t\tthis.calendar.appendChild(week);\r\n\t\t}\r\n\t\t\r\n\t\tthis.calendarContainer.appendChild(this.calendar);\r\n\t}\r\n\t\r\n\tprintMonthList (){\r\n\t\tvar dpInstance = this;\r\n\t\tthis.clearCalendarContainer();\r\n\t\t\r\n\t\tthis.monthList = document.createElement(\"table\");\r\n\t\tthis.monthList.className = \"orzk-dp_days\";\r\n\t\tthis.monthList.id = \"dp-month-list\";\r\n\t\tfor(var i = 0; i < 4;i++){\r\n\t\t\tvar row = document.createElement(\"tr\");\r\n\t\t\tfor(var j = 0; j < 3; j++){\r\n\t\t\t\tlet currMonth = i*3 + j;\r\n\t\t\t\tvar element = document.createElement(\"td\");\t\t\t\t\r\n\t\t\t\telement.appendChild(document.createTextNode(this.lang[this.language].monthShort[currMonth]));\r\n\t\t\t\tif(currMonth === this.nuevaFecha.getMonth()){\r\n\t\t\t\t\telement.className = \"orzk-dp_calendar_day_selected\";\r\n\t\t\t\t}\r\n\t\t\t\telement.id = \"datepicker_m_\"+currMonth;\r\n\t\t\t\tvar currDate = new Date(this.nuevaFecha.getTime());\r\n\t\t\t\tcurrDate.setMonth(currMonth);\r\n\t\t\t\t\r\n\t\t\t\tif(this.dateInRange(currDate,'month')){\r\n\t\t\t\t\telement.className += \" orzk-dp_pickable\";\r\n\t\t\t\t\telement.onclick = function(){\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.nuevaFecha.setMonth(currMonth);\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t\t};\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.className = \"orzk-dp_not_pickable\";\r\n\t\t\t\t}\r\n\t\t\t\trow.appendChild(element);\r\n\t\t\t}\r\n\t\t\tthis.monthList.appendChild(row);\r\n\t\t}\r\n\t\t\r\n\t\tthis.calendarContainer.appendChild(this.monthList);\r\n\t}\r\n\t\r\n\tprintYearList (decade){\r\n\t\tvar dpInstance = this;\r\n\t\tthis.clearCalendarContainer();\r\n\t\t\r\n\t\tvar decades = Math.floor(this.nuevaFecha.getFullYear() / 20);\r\n\t\t// Removes the effect of rounding with Math.floor, that caused to show the next twenty years block when the year is multiple of 20.\r\n\t\tif(this.nuevaFecha.getFullYear() % 20 === 0){\r\n\t\t\tdecades--;\r\n\t\t}\r\n\t\tthis.decadeShift = this.decadeShift + decade;\r\n\t\t\r\n\t\tvar minYear = (decades + this.decadeShift) * 20 + 1;\r\n\t\tvar currYear = minYear;\t\t\r\n\t\t\r\n\t\tthis.decadeListContainer = document.createElement(\"div\");\r\n\t\tthis.decadeListContainer.className = \"orzk-dp_decade_list_container\";\r\n\t\tthis.decadeList = document.createElement(\"div\");\r\n\t\tthis.decadeList.className = \"orzk-dp_decade_list\";\r\n\t\tvar decadeListTxt = document.createTextNode(minYear + \" - \" + (minYear+19));\r\n\t\tthis.decadeList.appendChild(decadeListTxt);\r\n\t\t\r\n\t\tvar decadePrev = document.createElement(\"div\");\r\n\t\tdecadePrev.className = \"orzk-dp_arrow orzk-dp_left\";\t\r\n\t\tdecadePrev.id = \"dp_decade_prev\";\r\n\t\tdecadePrev.onclick = function() {\r\n\t\t\tdpInstance.printYearList(-1);\r\n\t\t};\t\r\n\t\t\r\n\t\tvar decadeNext = document.createElement(\"div\");\r\n\t\tdecadeNext.className = \"orzk-dp_arrow orzk-dp_right\";\t\r\n\t\tdecadeNext.id = \"dp_decade_next\";\t\t\r\n\t\tdecadeNext.onclick = function() {\r\n\t\t\tdpInstance.printYearList(1);\r\n\t\t};\r\n\t\tthis.decadeListContainer.appendChild(decadePrev);\r\n\t\tthis.decadeListContainer.appendChild(this.decadeList);\r\n\t\tthis.decadeListContainer.appendChild(decadeNext);\r\n\t\t\r\n\t\tthis.yearList = document.createElement(\"table\");\r\n\t\tthis.yearList.className = \"orzk-dp_days\";\r\n\t\tthis.yearList.id = \"dp-year-list\";\r\n\t\tfor(var i = 0; i < 5; i++){\r\n\t\t\tvar row = document.createElement(\"tr\");\r\n\t\t\tfor(var j=0; j<4;j++){\r\n\t\t\t\tvar element = document.createElement(\"td\");\r\n\t\t\t\telement.appendChild(document.createTextNode(currYear));\r\n\t\t\t\tvar tmp = new Date(this.nuevaFecha.getTime());\r\n\t\t\t\ttmp.setFullYear(currYear);\r\n\t\t\t\tif(this.dateInRange(tmp,\"year\")){\r\n\t\t\t\t\telement.className = \"orzk-dp_pickable\";\r\n\t\t\t\t\tif(currYear === this.nuevaFecha.getFullYear()){\r\n\t\t\t\t\t\telement.className += \" orzk-dp_calendar_day_selected\";\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\telement.id = \"datepicker_y_\"+currYear;\r\n\t\t\t\t\telement.onclick = function(){\t\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.nuevaFecha.setFullYear(this.id.substr(13));\r\n\t\t\t\t\t\tdpInstance.decadeShift = 0;\r\n\t\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t\t};\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.className += \" orzk-dp_not_pickable\";\r\n\t\t\t\t}\r\n\t\t\t\tcurrYear++;\r\n\t\t\t\trow.appendChild(element);\r\n\t\t\t}\r\n\t\t\tthis.yearList.appendChild(row);\r\n\t\t}\r\n\t\t\r\n\t\tthis.calendarContainer.appendChild(this.decadeListContainer);\r\n\t\tthis.calendarContainer.appendChild(this.yearList);\r\n\t\t\t\r\n\t}\r\n\r\n\r\n\tprintAnalogTime (type){\t\r\n\t\tvar dpInstance = this;\r\n\t\t\r\n\t\tvar pos = this.timeContainer.getBoundingClientRect();\t\t\r\n\t\tvar radius = 110;\r\n\t\tvar sradius = 70;\r\n\t\tvar centerX = (pos.right - pos.left)/2 - radius - 15;\r\n\t\tvar scenterX = (pos.right - pos.left)/2 - sradius - 15;\r\n\t\tvar angle = 360 / 12;\r\n\t\tvar selectedItem = null;\r\n\t\t\r\n\t\tvar pTop, pLeft;\r\n\t\t\r\n\t\t\r\n\t\tthis.clearTimeContainer();\t\r\n\t\tthis.hideClockHand(this.clockHand);\r\n\t\t\r\n\t\tif(type === \"hour\"){\t\t\t\r\n\t\t\tselectedItem = this.nuevaFecha.getHours();\r\n\t\t\tfor(var i = 0; i< 12; i++){\r\n\t\t\t\t// 12h\r\n\t\t\t\tvar h = document.createElement(\"div\");\r\n\t\t\t\th.className = \"orzk-dp_time_element\";\t\t\t\r\n\t\t\t\th.appendChild(document.createTextNode(i+1));\r\n\t\t\t\th.id = \"dp_hourelement_\"+(i+1);\r\n\t\t\t\tpTop = (10 + radius + -radius*Math.cos((i+1)*(angle/180)*Math.PI));\r\n\t\t\t\tpLeft = (centerX + radius + radius*Math.sin((i+1)*(angle/180)*Math.PI));\r\n\t\t\t\th.style.top = pTop+'px';\r\n\t\t\t\th.style.left = pLeft+'px';\r\n\t\t\t\t\r\n\t\t\t\tif(selectedItem === i+1){\r\n\t\t\t\t\th.className += \" orzk-dp_time_item_selected\";\r\n\t\t\t\t\tthis.drawClockHand(this.clockHandSelected,pLeft+15,pTop+15);\r\n\t\t\t\t}\r\n\t\t\t\th.onmouseover = function (e){\r\n\t\t\t\t\tvar pos = this.getBoundingClientRect();\r\n\t\t\t\t\tvar dims = dpInstance.timeContainer.getBoundingClientRect();\r\n\t\t\t\t\tvar x = (pos.left - dims.left) +((pos.right-pos.left)/2)   ;\r\n\t\t\t\t\tvar y = pos.top-dims.top + ((pos.bottom-pos.top)/2);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdpInstance.drawClockHand(dpInstance.clockHand, x,y);\r\n\t\t\t\t\tvar tmpFecha = new Date(dpInstance.nuevaFecha.getTime());\t\t\t\t\t\r\n\t\t\t\t\ttmpFecha.setHours(this.id.substr(15));\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateTime(tmpFecha);\r\n\t\t\t\t};\r\n\t\t\t\th.onmouseout = function(e){\r\n\t\t\t\t\tdpInstance.hideClockHand(dpInstance.clockHand);\r\n\t\t\t\t\tdpInstance.updateTime(dpInstance.nuevaFecha);\r\n\t\t\t\t};\r\n\t\t\t\th.onclick = function(){\r\n\t\t\t\t\tdpInstance.nuevaFecha.setHours(this.id.substr(15));\t\t\t\t\t\r\n\t\t\t\t\tif(dpInstance.timeFormat === 'hm' || dpInstance.timeFormat === 'hms'){\t\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.timeWindow = \"minutes\";\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"minutes\");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdpInstance.updateDisplay();\t\t\t\t\r\n\t\t\t\t};\r\n\t\t\t\tthis.timeContainer.appendChild(h);\r\n\t\t\t\t\r\n\t\t\t\t// 24h\r\n\t\t\t\th = document.createElement(\"div\");\r\n\t\t\t\th.className = \"orzk-dp_time_element\";\r\n\t\t\t\tvar value = i+13;\r\n\t\t\t\tif(value === 24)\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t\r\n\t\t\t\th.appendChild(document.createTextNode(this.padInteger(value,2)));\r\n\t\t\t\th.id = \"dp_hourelement_\"+(value);\r\n\t\t\t\tpTop = (50 + sradius + -sradius*Math.cos((i+1)*(angle/180)*Math.PI));\t\t\t\t\r\n\t\t\t\tpLeft = (scenterX + sradius + sradius*Math.sin((i+1)*(angle/180)*Math.PI));\r\n\t\t\t\th.style.top = pTop+'px';\r\n\t\t\t\th.style.left = pLeft+'px';\r\n\t\t\t\tif(selectedItem === value){\r\n\t\t\t\t\th.className += \" orzk-dp_time_item_selected\";\r\n\t\t\t\t\tthis.drawClockHand(this.clockHandSelected,pLeft+15,pTop+15);\r\n\t\t\t\t}\r\n\t\t\t\th.onmouseover = function (){\r\n\t\t\t\t\tvar pos = this.getBoundingClientRect();\r\n\t\t\t\t\tvar dims = dpInstance.timeContainer.getBoundingClientRect();\r\n\t\t\t\t\tvar x = (pos.left - dims.left) +((pos.right-pos.left)/2)   ;\r\n\t\t\t\t\tvar y = pos.top-dims.top + ((pos.bottom-pos.top)/2);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdpInstance.drawClockHand(dpInstance.clockHand, x,y);\r\n\t\t\t\t\tvar tmpFecha = new Date(dpInstance.nuevaFecha.getTime());\t\t\t\t\t\r\n\t\t\t\t\ttmpFecha.setHours(this.id.substr(15));\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateTime(tmpFecha);\r\n\t\t\t\t};\r\n\t\t\t\th.onmouseout = function(e){\r\n\t\t\t\t\tdpInstance.hideClockHand(dpInstance.clockHand);\r\n\t\t\t\t\tdpInstance.updateTime(dpInstance.nuevaFecha);\r\n\t\t\t\t};\r\n\t\t\t\th.onclick = function(){\r\n\t\t\t\t\tdpInstance.nuevaFecha.setHours(this.id.substr(15));\t\t\t\t\r\n\t\t\t\t\tif(dpInstance.timeFormat === 'hm' || dpInstance.timeFormat === 'hms'){\r\n\t\t\t\t\t\tdpInstance.timeWindow = \"minutes\";\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"minutes\");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t};\r\n\t\t\t\tthis.timeContainer.appendChild(h);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tif(type===\"minutes\"){\r\n\t\t\t\tselectedItem = this.nuevaFecha.getMinutes();\r\n\t\t\t}else if(type===\"seconds\"){\r\n\t\t\t\tselectedItem = this.nuevaFecha.getSeconds();\r\n\t\t\t}\t\t\t\r\n\t\t\t\r\n\t\t\tfor(var i = 0; i< 60; i++){\r\n\t\t\t\tangle = 360/60;\t\r\n\t\t\t\tvar e = document.createElement(\"div\");\r\n\t\t\t\te.className = \"orzk-dp_time_min_element\";\r\n\t\t\t\te.id = \"dp_minuteelement_\"+(i);\r\n\t\t\t\te.style.webkitTransform = 'rotate('+(angle*i)+'deg)'; \r\n\t\t\t\te.style.mozTransform    = 'rotate('+(angle*i)+'deg)'; \r\n\t\t\t\te.style.msTransform     = 'rotate('+(angle*i)+'deg)'; \r\n\t\t\t\te.style.oTransform      = 'rotate('+(angle*i)+'deg)'; \r\n\t\t\t\te.style.transform       = 'rotate('+(angle*i)+'deg)'; \r\n\t\t\t\t\r\n\t\t\t\tif(i%5 === 0){\r\n\t\t\t\t\tvar h = document.createElement(\"div\");\r\n\t\t\t\t\th.id = \"dp_minute_\"+(i);\r\n\t\t\t\t\th.className = \"orzk-dp_time_element\";\t\t\t\t\r\n\t\t\t\t\th.appendChild(document.createTextNode(this.padInteger(i,2)));\t\r\n\t\t\t\t\tpTop = (10 + radius + -radius*Math.cos((i)*(angle/180)*Math.PI));\t\t\t\t\r\n\t\t\t\t\tpLeft = (centerX + radius + radius*Math.sin((i)*(angle/180)*Math.PI));\r\n\t\t\t\t\tif(selectedItem === i){\r\n\t\t\t\t\t\th.className += \" orzk-dp_time_item_selected\";\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\th.style.top = pTop+'px';\r\n\t\t\t\t\th.style.left = pLeft+'px';\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.timeContainer.appendChild(h);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tpTop = (5 + radius + -radius*Math.cos((i)*(angle/180)*Math.PI));\t\t\t\t\r\n\t\t\t\tpLeft = (centerX + 10 + radius + radius*Math.sin((i)*(angle/180)*Math.PI));\r\n\t\t\t\tif(selectedItem === i){\t\t\t\t\r\n\t\t\t\t\tthis.drawClockHand(this.clockHandSelected,pLeft+5,pTop+20);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\te.style.top = pTop+'px';\r\n\t\t\t\te.style.left = pLeft+'px';\r\n\t\t\t\te.onmouseover = function (){\r\n\t\t\t\t\tvar pos = this.getBoundingClientRect();\r\n\t\t\t\t\tvar dims = dpInstance.timeContainer.getBoundingClientRect();\r\n\t\t\t\t\tvar x = (pos.left - dims.left) +((pos.right-pos.left)/2)   ;\r\n\t\t\t\t\tvar y = pos.top-dims.top + ((pos.bottom-pos.top)/2);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdpInstance.drawClockHand(dpInstance.clockHand, x,y);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar tmpFecha = new Date(dpInstance.nuevaFecha.getTime());\r\n\t\t\t\t\tif(type===\"minutes\"){\r\n\t\t\t\t\t\ttmpFecha.setMinutes(this.id.substr(17));\r\n\t\t\t\t\t}else if(type===\"seconds\"){\r\n\t\t\t\t\t\ttmpFecha.setSeconds(this.id.substr(17));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdpInstance.updateTime(tmpFecha);\r\n\t\t\t\t};\r\n\t\t\t\te.onmouseout = function(e){\r\n\t\t\t\t\tdpInstance.hideClockHand(dpInstance.clockHand);\t\r\n\t\t\t\t\tdpInstance.updateTime(dpInstance.nuevaFecha);\r\n\t\t\t\t};\r\n\t\t\t\te.onclick = function(){\r\n\t\t\t\t\tvar id = this.id.substr(17);\r\n\t\t\t\t\tif(dpInstance.timeFormat === 'hm'){\r\n\t\t\t\t\t\tdpInstance.nuevaFecha.setMinutes(id);\r\n\t\t\t\t\t\tdpInstance.timeWindow = \"hour\";\r\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\r\n\t\t\t\t\t}else if(dpInstance.timeFormat === 'hms'){\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tif(type===\"minutes\"){\r\n\t\t\t\t\t\t\tdpInstance.nuevaFecha.setMinutes(id);\r\n\t\t\t\t\t\t\tdpInstance.timeWindow = \"seconds\";\r\n\t\t\t\t\t\t\tdpInstance.printAnalogTime(\"seconds\");\r\n\t\t\t\t\t\t}else if(type===\"seconds\"){\r\n\t\t\t\t\t\t\tdpInstance.nuevaFecha.setSeconds(id);\r\n\t\t\t\t\t\t\tdpInstance.timeWindow = \"hour\";\r\n\t\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t};\r\n\t\t\t\tthis.timeMinutesContainer.appendChild(e);\r\n\t\t\t\tthis.timeContainer.appendChild(this.timeMinutesContainer);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdrawClockHand (line,x2,y2){\r\n\t\tvar dims = this.timeContainer.getBoundingClientRect();\r\n\t\t\r\n\t\tthis.analogClockSVG.setAttribute('width',dims.right - dims.left);\r\n\t\tthis.analogClockSVG.setAttribute('height',dims.bottom - dims.top);\t\r\n\t\t\r\n\t\tvar x1 = (dims.right - dims.left)/2;\r\n\t\tvar y1 = ((dims.bottom - dims.top)/2)+5;\r\n\t\t\r\n\t\tline.setAttribute('x1',x1);\r\n\t\tline.setAttribute('y1',y1);\r\n\t\tline.setAttribute('x2',x2);\r\n\t\tline.setAttribute('y2',y2);\r\n\t\tline.setAttribute('stroke','#8bb6cf');\r\n\t\tline.setAttribute('stroke-width', 4);\r\n\t}\r\n\r\n\thideClockHand (line){\r\n\t\tline.setAttribute('stroke-width',0);\r\n\t}\r\n\r\n\tclose (){\r\n\t\tthis.initialized = false;\r\n\t\tthis.contenedor.parentNode.removeChild(this.contenedor);\r\n\t}\r\n\t\r\n\tprintDate (){\t\r\n\t\tif(this.inputDate != null && this.showDate === true){\r\n\t\t\tthis.inputDate.value = this.getFullDateString();\r\n\t\t}else{\r\n\t\t}\r\n\t}\r\n\r\n\tgetFullDateString (){\t\r\n\t\tif(this.dpMode === 'date'){\r\n\t\t\treturn this.getDateString(this.fecha);\r\n\t\t}else if(this.dpMode === 'time'){\t\t\t\t\r\n\t\t\treturn this.getTimeString(this.fecha);\r\n\t\t}else{\r\n\t\t\treturn (this.getDateString(this.fecha)+\" \"+this.getTimeString(this.fecha));\t\t\t\t\t\t\t\t\t\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\tshowCalendar (){\t\r\n\t\tif((this.dpMode === \"datetime\" && this.dpCurrWindow === \"time\") || this.dpMode === \"date\"){\r\n\t\t\tif(this.dpMode === \"datetime\"){\r\n\t\t\t\tthis.timeContainer.className += \" orzk-dp_hide\";\r\n\t\t\t\tthis.analogClockSVG.setAttribute('class','orzk-dp_clock_svg orzk-dp_hide');\r\n\t\t\t\tthis.btnHour.className = this.btnHour.className.replace(/\\borzk-dp_dayhour_button_selected\\b/,\"\");\r\n\t\t\t\tthis.btnCalendar.className += \" orzk-dp_dayhour_button_selected\";\r\n\t\t\t}\r\n\t\t\tthis.calendarContainer.className = this.calendarContainer.className.replace(/\\borzk-dp_hide\\b/,\"\");\r\n\t\t\tthis.dpCurrWindow = \"calendar\";\r\n\t\t\t//this.updateTime(this.nuevaFecha);\r\n\t\t\tthis.updateDisplay();\r\n\t\t}\r\n\t}\r\n\r\n\tshowTime (){\r\n\t\tif((this.dpMode === \"datetime\" && this.dpCurrWindow === \"calendar\") || (this.dpMode === \"time\")){\r\n\t\t\tif(this.dpMode === \"datetime\"){\r\n\t\t\t\tthis.calendarContainer.className += \" orzk-dp_hide\";\r\n\t\t\t\tthis.btnCalendar.className = this.btnCalendar.className.replace(/\\borzk-dp_dayhour_button_selected\\b/,\"\");\r\n\t\t\t\tthis.btnHour.className += \" orzk-dp_dayhour_button_selected\";\r\n\t\t\t}\r\n\t\t\tthis.timeContainer.className = this.timeContainer.className.replace(/\\borzk-dp_hide\\b/,\"\");\t\t\r\n\t\t\tthis.analogClockSVG.setAttribute('class','orzk-dp_clock_svg');\r\n\t\t\tif(this.dpMode === 'datetime'){\r\n\t\t\t\tthis.timeWindow = \"hour\";\r\n\t\t\t\tthis.printAnalogTime(\"hour\");\r\n\t\t\t}else{\r\n\t\t\t\tthis.printAnalogTime(this.timeWindow);\r\n\t\t\t}\r\n\t\t\tthis.dpCurrWindow = \"time\";\r\n\t\t\tthis.updateTime(this.nuevaFecha);\r\n\t\t}\r\n\t}\r\n\r\n\tgetDateString (d){\r\n\t\tvar sep = this.dateFormat.substr(3);\r\n\t\tvar year = d.getFullYear();\r\n\t\tvar month = this.padInteger(d.getMonth()+1,2);\r\n\t\tvar day = this.padInteger(d.getDate(),2);\r\n\t\t\r\n\t\tswitch(this.dateFormat.substr(0,3)){\r\n\t\t\tcase \"ymd\":\r\n\t\t\t\treturn year+sep+month+sep+day;\r\n\t\t\tcase \"ydm\":\r\n\t\t\t\treturn year+sep+day+sep+month;\r\n\t\t\tcase \"mdy\":\r\n\t\t\t\treturn month+sep+day+sep+year;\r\n\t\t\tcase \"dmy\":\r\n\t\t\t\treturn day+sep+month+sep+year;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\t\r\n\r\n\tgetTimeString (d,format=false){\r\n\t\tvar time = '';\r\n\t\tswitch (this.timeFormat.length){\t\t\r\n\t\t\tcase 3:\r\n\t\t\t\tif(format===true && this.dpCurrWindow === \"time\" && this.timeWindow===\"seconds\"){\r\n\t\t\t\t\ttime = ':<span class=\"orzk-dp_time_display_selected\">'+this.padInteger(d.getSeconds(),2)+'</span>';\r\n\t\t\t\t}else{\t\t\t\t\r\n\t\t\t\t\ttime = ':'+this.padInteger(d.getSeconds(),2);\r\n\t\t\t\t}\r\n\t\t\tcase 2:\r\n\t\t\t\tif(format===true && this.dpCurrWindow === \"time\" && this.timeWindow===\"minutes\"){\r\n\t\t\t\t\ttime = ':<span class=\"orzk-dp_time_display_selected\">'+this.padInteger(d.getMinutes(),2)+'</span>' + time;\r\n\t\t\t\t}else{\t\t\r\n\t\t\t\t\ttime = ':'+this.padInteger(d.getMinutes(),2) + time;\r\n\t\t\t\t}\r\n\t\t\tcase 1:\r\n\t\t\t\tif(this.timeFormat === 'h'){\r\n\t\t\t\t\ttime += \":00\";\r\n\t\t\t\t}\r\n\t\t\t\tif(format===true && this.dpCurrWindow === \"time\" && this.timeWindow===\"hour\"){\r\n\t\t\t\t\ttime = '<span class=\"orzk-dp_time_display_selected\">'+this.padInteger(d.getHours(),2)+'</span>'\t+ time;\r\n\t\t\t\t}else{\t\t\r\n\t\t\t\t\ttime = this.padInteger(d.getHours(),2) + time;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\treturn time;\r\n\t}\r\n\r\n\tupdateTime (d){\t\r\n\t\tthis.timeTxt.innerHTML = this.getTimeString(d,true);\t\r\n\t}\r\n\r\n\tgetDate (){\r\n\t\tif(this.fecha !== null){\r\n\t\t\treturn new Date(this.fecha.getTime());\r\n\t\t}else{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tcreateDate (d){\r\n\t\tif(this.isDate(d)){\r\n\t\t\treturn d;\r\n\t\t}else{\t\t\r\n\t\t\tif(typeof(d) === 'string'){\r\n\t\t\t\tvar sep = this.dateFormat.substr(3);\t\t\t\r\n\t\t\t\tvar fecha = [];\r\n\t\t\t\tvar hora = [];\r\n\t\t\t\t\r\n\t\t\t\tif(this.dpMode === 'date'){\r\n\t\t\t\t\tfecha = d.split(sep);\r\n\t\t\t\t\tif(fecha.length !== 3){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\thora = [0,0,0,0];\r\n\t\t\t\t}else if(this.dpMode === 'datetime'){\r\n\t\t\t\t\tvar fh = d.split(\" \");\r\n\t\t\t\t\tif(fh.length > 2){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfecha = fh[0].split(sep);\r\n\t\t\t\t\tif(fh.length === 2){\r\n\t\t\t\t\t\thora = fh[1].split(\":\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(fecha.length !== 3){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(var i = 0; i< 4; i++){\r\n\t\t\t\t\t\tif(typeof(hora[i]) == \"undefined\" || this.timeFormat.length <= i){\r\n\t\t\t\t\t\t\thora.push(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfecha = new Date();\r\n\t\t\t\t\thora = d.split(\":\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i< 4; i++){\r\n\t\t\t\t\t\tif(typeof(hora[i]) == \"undefined\" || this.timeFormat.length <= i){\r\n\t\t\t\t\t\t\thora.push(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfecha.setHours(hora[0],hora[1],hora[2],hora[3]);\t\t\t\t\r\n\t\t\t\t\treturn fecha;\r\n\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tswitch(this.dateFormat.substr(0,3)){\r\n\t\t\t\t\tcase \"ymd\":\t\t\t\t\t\r\n\t\t\t\t\t\treturn new Date(fecha[0],fecha[1]-1,fecha[2],hora[0],hora[1],hora[2],hora[3]);\r\n\t\t\t\t\tcase \"ydm\":\r\n\t\t\t\t\t\treturn new Date(fecha[0],fecha[2]-1,fecha[1],hora[0],hora[1],hora[2],hora[3]);\r\n\t\t\t\t\tcase \"dmy\":\t\t\t\t\t\r\n\t\t\t\t\t\treturn new Date(fecha[2],fecha[1]-1,fecha[0],hora[0],hora[1],hora[2],hora[3]);\r\n\t\t\t\t\tcase \"mdy\":\t\t\t\t\t\r\n\t\t\t\t\t\treturn new Date(fecha[2],fecha[0]-1,fecha[1],hora[0],hora[1],hora[2],hora[3]);\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetStartDate (){\r\n\t\tvar result = new Date();\r\n\t\t\r\n\t\tif(this.inputDate !== null){\t\t\t\r\n\t\t\tif(this.inputDate.value.length > 0){\r\n\t\t\t\tvar result = this.createDate(this.inputDate.value);\t\t\t\t\r\n\t\t\t\tif(result !== false){\r\n\t\t\t\t\tif(!this.isDate(result)){\r\n\t\t\t\t\t\tresult = new Date();\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.error.push(this.lang[this.language].errDateFormat);\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\tsetDate (d){\r\n\t\tif(this.isDate(d)){\r\n\t\t\tthis.fecha = new Date(d.getTime());\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tonSubmit (){\r\n\t\tthis.printDate();\r\n\t}\r\n\r\n\tpadInteger (number,max){\r\n\t\tif(number < Math.pow(10,(max-1))){\r\n\t\t\tvar z = '';\r\n\t\t\tfor(var i = 0;i< max; i++)\r\n\t\t\t\tz += '0';\r\n\t\t\tnumber = (z + number).slice(max*-1);\r\n\t\t}\r\n\t\treturn number;\r\n\t}\r\n\r\n\trad2deg (x){\r\n\t\treturn x * (180/Math.PI);\r\n\t}\r\n\r\n\tdeg2rad (x){\r\n\t\treturn x * (Math.PI/180);\r\n\t};\r\n\r\n\r\n\t// Checks if a date object contains is a valid date\r\n\tisDate (date) {\r\n\t\treturn date && Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date);\r\n\t};\r\n\r\n\t// Checks if a date is allowed comparing it with the min and max dates, and the restricted dates list\r\n\tdateInRange (date,type){\r\n\t\t\r\n\t\tif(type === \"year\"){\t\t\t\r\n\t\t\tif(\t(this.minDate == null || (this.minDate.getFullYear() <= date.getFullYear()) ) &&\r\n\t\t\t\t(this.maxDate == null || (this.maxDate.getFullYear() >= date.getFullYear()) ) ){\t\t\t\t\r\n\t\t\t\t\treturn true;\r\n\t\t\t}else{\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tif(type === 'month'){\t\t\r\n\t\t\t\r\n\t\t\tvar tmpdate = new Date(date.getFullYear(),date.getMonth());\r\n\t\t\tvar tmpmindate = null;\r\n\t\t\tvar tmpmaxdate = null;\r\n\t\t\t\r\n\t\t\tif(this.minDate !== null)\t\t\r\n\t\t\t\ttmpmindate = new Date(this.minDate.getFullYear(),this.minDate.getMonth());\r\n\t\t\t\r\n\t\t\tif(this.maxDate !== null)\r\n\t\t\t\ttmpmaxdate = new Date(this.maxDate.getFullYear(),this.maxDate.getMonth());\r\n\t\t\t\r\n\t\t\tif( (tmpmindate === null || (tmpdate >= tmpmindate)) &&\r\n\t\t\t\t(tmpmaxdate === null || (tmpdate <= tmpmaxdate)) )\r\n\t\t\t{\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\tif(type === 'day'){\r\n\t\t\tif( (this.minDate == null || (this.minDate != null && date >= this.minDate)) && \r\n\t\t\t\t(this.maxDate == null || (this.maxDate != null && date <= this.maxDate)) )\r\n\t\t\t{\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tdateIsBlocked (date){\r\n\t\t// Checks if the date is one of the blocked days\r\n\t\tif(this.blockdays.length > 0 && this.blockdays.indexOf(date.getDay()) > -1){\r\n\t\t\treturn true;\r\n\t\t}\t\r\n\t\t\r\n\t\tvar tmpdate = new Date(date.getTime());\r\n\t\ttmpdate.setHours(0,0,0,0);\r\n\t\t\r\n\t\t// Checks if the date is in the list of blocked dates\r\n\t\tfor(var i = 0; i< this.blockDates.length; i++){\r\n\t\t\tif(this.blockDates[i].length === 1){\t\t\t\r\n\t\t\t\tvar tmp = this.blockDates[i][0];\r\n\t\t\t\tif (tmp.getFullYear() === date.getFullYear() &&\r\n\t\t\t\t\ttmp.getMonth() === date.getMonth() &&\r\n\t\t\t\t\ttmp.getDate() === date.getDate()){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\tif(tmpdate.getTime() >= this.blockDates[i][0].getTime() && (tmpdate.getTime() <= this.blockDates[i][1].getTime())){\t\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n/* Exports public methods for Google Closure Compiler */\r\n/*\r\nwindow['Datepicker'] = Datepicker;\r\nDatepicker.prototype['show'] = Datepicker.prototype.show;\r\nDatepicker.prototype['reset'] = Datepicker.prototype.reset;\r\nDatepicker.prototype['close'] = Datepicker.prototype.close;\r\nDatepicker.prototype['setOptions'] = Datepicker.prototype.setOptions;\r\nDatepicker.prototype['getDate']\t= Datepicker.prototype.getDate;\r\nDatepicker.prototype['setDate']\t= Datepicker.prototype.setDate;\t\r\nDatepicker.prototype['setStartDate']\t= Datepicker.prototype.setStartDate;\t\r\nDatepicker.prototype['printDate'] =\tDatepicker.prototype.printDate;\r\nDatepicker.prototype['onSubmit'] = Datepicker.prototype.onSubmit;\r\nDatepicker.prototype['getFullDateString'] = Datepicker.prototype.getFullDateString;\r\nDatepicker.prototype['isDate'] = Datepicker.prototype.isDate;*/",["212","213"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\tests\\mocks\\handlers.ts",["214","215","216","217"],"import { rest } from 'msw'\r\nimport taskData from './tasks.json'\r\nimport { TaskDetail, TaskObject } from '../../domain/task-detail'\r\nimport { isEmpty } from 'lodash'\r\nimport  {Datepicker}  from '../../lib/orzkDatepicker/datepicker'\r\nimport { ApiResponseBuilder, ApiResponse} from '../../api/domain/api-response'\r\n\r\nexport const handlers = [\r\n    rest.post('http://localhost:3000/api/tasks',(req, res, ctx) => {        \r\n        return res(\r\n            ctx.status(200),\r\n            ctx.json(ApiResponseBuilder(200,taskData,false))\r\n        )\r\n    }),\r\n    // Tarea inexistente\r\n    rest.get('http://localhost:3000/api/tasks/1111',(req, res, ctx) => {  \r\n        return res(\r\n            ctx.status(404, 'La tarea no existe'),\r\n            ctx.json(ApiResponseBuilder(200,{},true,'La tarea no existe'))\r\n        )         \r\n    }),\r\n    rest.get('http://localhost:3000/api/tasks/1',(req, res, ctx) => {          \r\n        const task: TaskDetail = {            \r\n            \"id\":\"1\",\r\n            \"parent\":\"\",\r\n            \"title\":\"Hacer la compra\",\r\n            \"description\": \"Comprar huevos, leche, cebollas\",\r\n            \"createdDate\": \"2020-11-10T10:45:01+0200\",\r\n            \"limitDate\": \"2020-12-01T10:45+0200\",\r\n            \"author\": \"Iñaki\",\r\n            \"authorId\": \"1\",\r\n            \"status\": \"1\",\r\n            \"priority\": \"3\",\r\n            \"tags\": [\"compra\",\"casa\",\"comida\"]            \r\n        }\r\n        const parentTask = null\r\n        const childTasks = []\r\n\r\n        const taskObject : TaskObject= {\r\n            task: task,\r\n            parentTask: parentTask,\r\n            childTasks: childTasks\r\n        }\r\n        \r\n        return res(\r\n            ctx.status(200),\r\n            ctx.json(ApiResponseBuilder(200,taskObject,false))\r\n        )        \r\n    }),\r\n    rest.post('http://localhost:3000/api/tasks/add',(req,res,ctx) =>{\r\n        const task: TaskDetail = req.body as TaskDetail        \r\n        \r\n        task.createdDate = \"2000-01-01T00:00:00+0200\"\r\n        const taskresponse: TaskObject = {\r\n            task: task,\r\n            childTasks: [],\r\n            parentTask: null\r\n        }\r\n        if(task.description === 'success'){\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,taskresponse,false))\r\n            )\r\n        }else if(task.description == 'error'){\r\n            return res(\r\n                ctx.status(500),\r\n                ctx.json(ApiResponseBuilder(500,taskresponse,true,'Error al crear la tarea'))\r\n            )\r\n        }\r\n        \r\n    }),\r\n    \r\n    rest.put('http://localhost:3000/api/tasks/update', (req, res, ctx) => {\r\n        \r\n        const taskobject: TaskObject = {\r\n            task: null,\r\n            childTasks: [],\r\n            parentTask: null\r\n        }\r\n        taskobject.task = req.body as TaskDetail                                     \r\n        \r\n        return res(                \r\n            ctx.status(200),\r\n            ctx.json(ApiResponseBuilder(200,taskobject,false))            \r\n        )\r\n        \r\n    }),\r\n\r\n    rest.delete('http://localhost:3000/api/tasks/delete/1', (req,res,ctx) => {\r\n            const task: TaskDetail = {            \r\n                \"id\":\"1\",\r\n                \"parent\":\"\",\r\n                \"title\":\"Hacer la compra\",\r\n                \"description\": \"Comprar huevos, leche, cebollas\",\r\n                \"createdDate\": \"2020-11-10T10:45:01+0200\",\r\n                \"limitDate\": \"2020-12-01T10:45:01+0200\",\r\n                \"author\": \"Iñaki\",\r\n                \"authorId\": \"1\",\r\n                \"status\": \"1\",\r\n                \"priority\": \"3\",\r\n                \"tags\": [\"compra\",\"casa\",\"comida\"]            \r\n            }\r\n            \r\n            return res(\r\n                    ctx.status(200),\r\n                    ctx.json(ApiResponseBuilder(200,task,false))\r\n                )\r\n            \r\n        \r\n    })\r\n]","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\tests\\mocks\\browser.js",[],["218","219"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\index.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\styles\\globalStyles.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\repositories\\browser\\browser.js",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\repositories\\browser\\browserdb.ts",["220","221","222"],"import lowdb from 'lowdb'\r\n//import FileSync from 'lowdb/adapters/FileSync'\r\nimport LocalStorage from 'lowdb/adapters/LocalStorage'\r\nimport { TaskDetail, TaskObject } from '../../../domain/task-detail'\r\nimport { TaskItem } from '../../../domain/task-list'\r\nimport { Worklog, WorklogObject } from '../../../domain/worklog'\r\nimport { Job, JobObject } from '../../../domain/job'\r\n\r\nimport { TaskerRepository, setTaskerRepository } from '../../application/taskerRepository'\r\n\r\ntype Schema = {\r\n    tasks: Array<TaskDetail>\r\n    worklogs: Array<Worklog>\r\n    jobs: Array<Job>\r\n}\r\nconst data :Schema = require('./db/taskerdb.json')\r\n\r\n//const adapter = new FileSync<schema>('./db/taskerdb.json')\r\nconst adapter = new LocalStorage<Schema>('db')\r\n\r\nexport const db = lowdb(adapter)\r\n\r\nexport class LowdbLocalstorageRepository implements TaskerRepository {\r\n    newId(table: string) : string {\r\n        let res: Array<TaskDetail>\r\n        let id: string \r\n        switch(table){\r\n            case 'tasks':\r\n                res = db.get('tasks').orderBy('id','desc').take(1).value()\r\n                id = res.length ? (parseInt(res[0].id) + 1).toString() : '1'\r\n                break\r\n            default:\r\n                throw new Error(`La tabla '${table}' no existe`)\r\n        }\r\n        console.log('generatedid',id)\r\n        return id\r\n    }\r\n    getTasks(filter: Partial<TaskDetail> = {}): Array<TaskItem>  {\r\n        const search = JSON.parse(filter as string)\r\n        const tasks = db.get('tasks').filter(search).value()\r\n        console.log(tasks)\r\n        const result : Array<TaskItem>= []\r\n        tasks.map((task: TaskDetail) => {\r\n            result.push({\r\n                id: task.id || '',\r\n                title: task.title || '',\r\n                limitDate: task.limitDate || ''\r\n            })\r\n        })\r\n        return result\r\n    }\r\n    getTaskById(id: string): TaskObject {    \r\n        try{    \r\n            let task = db.get('tasks').find({id: id}).value() || null            \r\n            let parentTask = null;\r\n            let childTasks = [];\r\n            childTasks = childTasks.concat(db.get('tasks').filter({parent: id}).value() || []);\r\n            if(task && task.parent !== ''){\r\n                parentTask = db.get('tasks').find({id: task.parent}).value()\r\n            }\r\n\r\n            const taskObject : TaskObject= {\r\n                task: task,\r\n                parentTask: parentTask,\r\n                childTasks: childTasks\r\n            }\r\n            console.log(\"Tarea\",taskObject)\r\n            return taskObject\r\n        }catch (e){\r\n            throw e\r\n        }\r\n    }\r\n    addTask (task: TaskDetail): TaskObject{  \r\n        try{      \r\n             db.get('tasks').push(task).write()\r\n             return this.getTaskById(task.id)\r\n        }catch(e){\r\n            throw e\r\n        }\r\n    }\r\n\r\n    updateTask(task: TaskDetail): TaskObject{\r\n        try{\r\n            console.log(\"Editandooo\",task)\r\n            db.get('tasks').find({id: task.id}).assign(task).write()\r\n            return this.getTaskById(task.id)\r\n        }catch(e){\r\n            throw e\r\n        }\r\n    }\r\n    deleteTask(taskid: string): boolean{\r\n        try{\r\n            const task = db.get('tasks').find({id: taskid}).value()\r\n            if(task){\r\n                db.get('tasks').remove({id: taskid}).write()\r\n            }else{\r\n                return false\r\n            }\r\n            return true\r\n        }catch(e){\r\n            throw e\r\n        }\r\n    }\r\n\r\n    getWorklogs(filter: Partial<Worklog> = {}): Array<Worklog>  {\r\n        const search = JSON.parse(filter as string)\r\n        const worklogs = db.get('worklogs').filter(search).value()\r\n        const result : Array<Worklog>= []\r\n        worklogs.map((worklog: Worklog) => {\r\n            result.push({\r\n                id: worklog.id || '',\r\n                title: worklog.title || '',\r\n                startDatetime: worklog.startDatetime || '',\r\n                endDatetime: worklog.endDatetime || '',\r\n                tags: worklog.tags || []\r\n            })\r\n        })\r\n        return result\r\n    }\r\n    getWorklogById(id: string): WorklogObject {    \r\n        try{    \r\n            let worklog = db.get('worklogs').find({id: id}).value() || null    \r\n            let childJobs = [];\r\n            childJobs = childJobs.concat(db.get('jobs').filter({worklog: id}).value() || []);\r\n            \r\n\r\n            const WorklogObject : WorklogObject= {\r\n                worklog: worklog,\r\n                childJobs: childJobs\r\n            }\r\n            return WorklogObject\r\n        }catch (e){\r\n            throw e\r\n        }\r\n    }\r\n    addWorklog (worklog: Worklog): WorklogObject{  \r\n        try{      \r\n             db.get('worklogs').push(worklog).write()\r\n             return this.getWorklogById(worklog.id)\r\n        }catch(e){\r\n            throw e\r\n        }\r\n    }\r\n\r\n    updateWorklog(worklog: Worklog): WorklogObject{\r\n        try{\r\n            db.get('worklogs').find({id: worklog.id}).assign(worklog).write()\r\n            return this.getWorklogById(worklog.id)\r\n        }catch(e){\r\n            throw e\r\n        }\r\n    }\r\n    deleteWorklog(worklogid: string): boolean{\r\n        try{\r\n            const worklog = db.get('worklogs').find({id: worklogid}).value()\r\n            if(worklog){\r\n                db.get('worklogs').remove({id: worklogid}).write()\r\n            }else{\r\n                return false\r\n            }\r\n            return true\r\n        }catch(e){\r\n            throw e\r\n        }\r\n    }\r\n\r\n    getJobs(filter: Partial<Job> = {}): Array<Job>  {\r\n        const search = JSON.parse(filter as string)\r\n        const jobs = db.get('jobs').filter(search).value()\r\n        const result : Array<Job>= []\r\n        jobs.map((job: Job) => {\r\n            result.push({\r\n                id: job.id || '',\r\n                task: job.task || '',\r\n                worklog: job.worklog || '',\r\n                title: job.title || '',\r\n                description: job.description || '',\r\n                startDatetime: job.startDatetime || '',\r\n                endDatetime: job.endDatetime || '',\r\n                type: job.type || '',\r\n                tags: job.tags || []\r\n            })\r\n        })\r\n        return result\r\n    }\r\n    getJobById(id: string): JobObject {    \r\n        try{    \r\n            let job = db.get('jobs').find({id: id}).value() || null    \r\n            let task = null\r\n            let worklog = null\r\n            \r\n            if(job && job.task !== ''){\r\n                task = db.get('tasks').find({id: job.task}).value()\r\n            }\r\n\r\n            if(job && job.worklog !== ''){\r\n                worklog = db.get('worklogs').find({id: job.worklog}).value()\r\n            }\r\n\r\n            const JobObject : JobObject= {\r\n                job: job,\r\n                worklog: worklog,\r\n                task: task\r\n            }\r\n            return JobObject\r\n        }catch (e){\r\n            throw e\r\n        }\r\n    }\r\n    addJob (job: Job): JobObject{  \r\n        try{      \r\n             db.get('jobs').push(job).write()\r\n             return this.getJobById(job.id)\r\n        }catch(e){\r\n            throw e\r\n        }\r\n    }\r\n\r\n    updateJob(job: Job): JobObject{\r\n        try{\r\n            db.get('jobs').find({id: job.id}).assign(job).write()\r\n            return this.getJobById(job.id)\r\n        }catch(e){\r\n            throw e\r\n        }\r\n    }\r\n    deleteJob(jobid: string): boolean{\r\n        try{\r\n            const job = db.get('jobs').find({id: jobid}).value()\r\n            if(job){\r\n                db.get('jobs').remove({id: jobid}).write()\r\n            }else{\r\n                return false\r\n            }\r\n            return true\r\n        }catch(e){\r\n            throw e\r\n        }\r\n    }\r\n}\r\nexport const initDB = () => {\r\n    if(!db.has('tasks').value()){\r\n        console.log(\"DB vacía\")\r\n        db.defaults({ tasks: [], worklogs: [], jobs: [] }).write()\r\n\r\n        const tasks : Array<TaskDetail> = data.tasks\r\n        for(let i=0; i< tasks.length; i++){     \r\n            db.get('tasks').push(tasks[i]).write()\r\n        }        \r\n        const worklogs: Array<Worklog> = data.worklogs\r\n        for(let i=0; i< worklogs.length; i++){      \r\n            db.get('worklogs').push(worklogs[i]).write()\r\n        }     \r\n        const jobs: Array<Job> = data.jobs\r\n        for(let i=0; i< jobs.length; i++){      \r\n            db.get('jobs').push(jobs[i]).write()\r\n        }     \r\n    }else{\r\n        console.log(\"DB con registros\")\r\n    }\r\n\r\n    setTaskerRepository(new LowdbLocalstorageRepository())\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\App.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\styles\\reset.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\application\\taskerRepository.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\views\\home.component.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\header.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\domain\\task-definitions.ts",["223"],"export const TaskStatus = {\r\n    pending:        { label: \"Pendiente\",   value: \"1\"},\r\n    incomplete:     { label: \"Incompleto\",  value: \"2\"},\r\n    completed:      { label: \"Completado\",  value: \"3\"},\r\n    cancelled:      { label: \"Cancelado\",   value: \"4\"},\r\n}\r\n\r\nexport const TaskPriority = {\r\n    low:        { label: \"Baja\",    value: \"1\"},\r\n    medum:      { label: \"Media\",   value: \"2\"},\r\n    high:       { label: \"Alta\",    value: \"3\"},\r\n    extreme:    { label: \"Extrema\", value: \"4\"}\r\n}\r\n\r\nexport const ConstObjectToSelectOptionsArray = (object) => {\r\n    let result = []\r\n    Object.keys(object).map((item)=>{\r\n        result.push(object[item])\r\n    })\r\n    return result\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\block-actions.tsx",["224","225","226","227"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { color, font, common } from '../../../styles/theme'\r\nimport { IconLink, IconButton } from '../common/icon-button'\r\nimport { IconType} from 'react-icons'\r\nimport { FormBuilder } from '../common/form/form'\r\n\r\nconst BlockActionsContainer = styled.div`\r\n    display: flex;\r\n    background-color: ${color.lightGrey};\r\n    padding: 0.5rem;\r\n    flex-wrap: wrap;\r\n    flex-direction: row;\r\n`\r\nexport interface Action {\r\n    key: string\r\n    route: string\r\n    text: string\r\n    icon: IconType | null\r\n    handler: any\r\n    type?: string\r\n    view?: string\r\n    items?: Array<Action>\r\n    initValues?: Partial<Action>\r\n    validation?: object\r\n    onSubmit?: object\r\n}\r\n\r\nexport const BlockActions = (props) => {\r\n    const [actions,setActions] = React.useState<Array<Action>>([])\r\n    \r\n    React.useEffect(() => {\r\n        setActions(props.actions)\r\n    },[actions])\r\n\r\n    return (\r\n        <BlockActionsContainer>\r\n            {\r\n                (actions && actions.length > 0) ?\r\n                    actions.map((action: Action) => {                        \r\n                        if(!action.type || action.type === 'link'){\r\n                            return (\r\n                                <IconLink \r\n                                    key={action.text}\r\n                                    route={action.route}\r\n                                    text={action.text}\r\n                                    icon={action.icon}\r\n                                />\r\n                            )\r\n                        }else if(action.type === 'button'){\r\n                            return (\r\n                                <IconButton \r\n                                    key={action.text}\r\n                                    text={action.text}\r\n                                    icon={action.icon}\r\n                                    onClick={action.handler}\r\n                                />\r\n                            )\r\n                        }else if(action.type === 'form'){\r\n                            return (\r\n                                <FormBuilder \r\n                                    key = {action.key }\r\n                                    formView = {action.view}\r\n                                    formItems = {action.items}\r\n                                    initValues = {action.initValues}\r\n                                    validation = {action.validation}\r\n                                    onSubmit = {action.onSubmit}\r\n                                />\r\n                            )\r\n                        }                        \r\n                    })\r\n                    :\r\n                    ''\r\n            }\r\n        </BlockActionsContainer>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\getTaskList.tsx",["228"],"import { TaskList} from './../domain/task-list'\r\nimport { ApiResponse } from '../api/domain/api-response'\r\nimport { TaskDetail } from 'src/domain/task-detail'\r\n \r\nexport const getTaskList = async (filters?: Partial<TaskDetail>): Promise<ApiResponse> => {\r\n    return await fetch(`http://localhost:3000/api/tasks`,{\r\n        method: 'POST',\r\n        body: JSON.stringify(filters)\r\n    })\r\n        .then(res => res.json())        \r\n        .then(\r\n            (result) => {  \r\n                console.log(result)\r\n                return result\r\n             },\r\n            (error) => { \r\n                throw new Error(error)\r\n            }\r\n        )\r\n}",["229","230"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\icon-button.tsx",["231","232"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\styles\\theme.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\deleteTask.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\tasks\\task-detail.component.tsx",["233","234","235","236","237","238"],"import React, { Children } from 'react'\r\nimport styled from 'styled-components'\r\nimport { color, common } from '../../../styles/theme'\r\nimport { useParams} from 'react-router-dom'\r\nimport { TaskDetail, TaskObject } from '../../../domain/task-detail'\r\nimport { TaskPriority, TaskStatus, ConstObjectToSelectOptionsArray } from '../../../domain/task-definitions'\r\nimport { getTask } from '../../../application/getTask'\r\nimport { deleteTask } from '../../../application/deleteTask'\r\nimport { Spinner } from '../common/spinner'\r\nimport { BlockActions } from '../common/block-actions'\r\nimport { FaEdit, FaTrashAlt, FaPlus } from 'react-icons/fa'\r\nimport { Modal } from '../common/modal'\r\nimport { Link } from 'react-router-dom'\r\nimport { dateToString } from '../../../lib/date.utils'\r\nimport { BlockContainer, BlockHeaderComponent } from '../common/block'\r\n \r\nconst TaskDetailContainer = styled.ul`\r\n`;\r\nconst TaskDetailKey = styled.div`\r\n    font-weight: bold;\r\n    color: ${color.black};\r\n    flex-basis: 10rem;\r\n`;\r\nconst TaskDetailValue = styled.div`\r\n    color: ${color.black}\r\n`;\r\n\r\nconst TaskDetailItem = styled.li`\r\n    display: flex;\r\n    flex-direction: vertical;\r\n    margin: 1rem;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n    background-color: ${color.lightRed};\r\n    padding: 1rem;\r\n    text-align: center;\r\n    color: ${color.white};\r\n    margin: 0.5rem;\r\n`;\r\n\r\nconst TaskChildrenContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.5rem;\r\n\r\n    & a{\r\n        display: inline-flex;\r\n        background-color: ${color.orange};\r\n        ${common.roundedCorners()};\r\n        padding: 0.5rem;\r\n    }\r\n\r\n    & a:hover {\r\n        background-color: ${color.lightOrange};\r\n    }    \r\n`\r\n\r\nconst TaskTagsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 0.5rem;\r\n\r\n    & div{\r\n        display: inline-flex;\r\n        background-color: rgba(0,0,0,0.7);\r\n        color: ${color.white};        \r\n        ${common.roundedCorners()};\r\n        padding: 0.5rem;\r\n    }\r\n`\r\n\r\nexport interface TaskProps {\r\n    taskid: string,\r\n}\r\nexport const TaskDetailComponent = (props) => {\r\n    let { taskid } = useParams<TaskProps>()\r\n   \r\n    const [task, setTask] = React.useState<TaskObject | null>(null)        \r\n    const [error, setError] = React.useState<Error | null>(null)\r\n    const [deleteSuccess, setDeleteSuccess] = React.useState<string | null>(null)\r\n    const [loading, setLoading] = React.useState<boolean>(false)\r\n    const [actions, setActions] = React.useState<Array<any>>([])\r\n    const [isOpened, setOpened] = React.useState(false)\r\n    const [statusLabel, setStatusLabel ] = React.useState<string>('')\r\n    const [priorityLabel, setPriorityLabel ] = React.useState<string>('')\r\n    const [confirmedDelete, setConfirmedDelete ] = React.useState<boolean>(false)\r\n    \r\n    const confirmDelete = () =>{\r\n        openModal()        \r\n    }\r\n    const handleDelete = () => {\r\n        setOpened(false)\r\n        setLoading(true)\r\n        setConfirmedDelete(true)   \r\n    }\r\n\r\n    const childHandler = () => {\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let cancelled = false\r\n        if(confirmedDelete){\r\n            deleteTask(taskid)\r\n            .then(\r\n                result => {\r\n                    if(!cancelled){\r\n                        if(!result.hasError){\r\n                            setDeleteSuccess('La tarea se ha eliminado con éxito')\r\n                        }else{\r\n                            setError(new Error('Ha ocurrido un error al eliminar la tarea.'))\r\n                        }\r\n                        setLoading(false)\r\n                    }\r\n                },\r\n                error => {\r\n                    console.log(\"Error: \", error)\r\n                    setError(new Error('Ha ocurrido un error al eliminar la tarea.'))\r\n                    setLoading(false)\r\n                }\r\n            )\r\n        }\r\n\r\n        return () => cancelled = true;\r\n    },[confirmedDelete])\r\n\r\n    const closeModal = () => {  setOpened(false)}\r\n    const openModal = () => { setOpened(true)}\r\n\r\n    let actionItems = [\r\n        {\r\n            icon: FaEdit,\r\n            text: 'Editar',\r\n            route: `/tasks/edit/${taskid}`,\r\n            type: 'link'\r\n        },\r\n        {\r\n            icon: FaTrashAlt,\r\n            text: 'Borrar',\r\n            type: 'button',\r\n            handler: confirmDelete\r\n        },\r\n        {\r\n            icon: FaPlus,\r\n            text: 'Subtarea',\r\n            route: `/tasks/new/${taskid}`,\r\n            type: 'link'\r\n        }\r\n    ]\r\n\r\n    React.useEffect(() => {\r\n        let cancelled = false;\r\n        setActions(actionItems)\r\n        setLoading(true)\r\n        getTask(taskid)\r\n            .then(\r\n                (result) => {\r\n                    if(!cancelled){\r\n                        if(result.hasError){\r\n                            setError(new Error(result.error))\r\n                            setTask(null)\r\n                        }else{\r\n                            console.log(result)\r\n                            let status = ConstObjectToSelectOptionsArray(TaskStatus).filter(i => i.value === result.data.task.status)\r\n                            setStatusLabel(status.length ? status[0].label : '')\r\n                            let priority = ConstObjectToSelectOptionsArray(TaskPriority).filter(i => i.value === result.data.task.priority)\r\n                            setPriorityLabel(priority.length ? priority[0].label : '')\r\n                            console.log(statusLabel,priorityLabel)\r\n                            setTask(result.data) \r\n                            setError(null)\r\n                        }\r\n                        \r\n                        setLoading(false)  \r\n                    }\r\n                },\r\n                (error) => {\r\n                    if(!cancelled){\r\n                        setError(error)\r\n                        setTask(null)\r\n                        setLoading(false)\r\n                    }\r\n                }\r\n            )\r\n        \r\n            return () => cancelled = true\r\n    },[taskid])\r\n    return (        \r\n        <BlockContainer>\r\n            <Modal \r\n                title=\"Eliminar tarea\" \r\n                isOpened={isOpened} \r\n                onClose={closeModal}\r\n                content=\"Esta acción es irreversible. ¿Desea continuar?\"\r\n                type=\"confirm\"\r\n                action={handleDelete} />\r\n            {loading ? <Spinner /> : ''}\r\n            <h3 className=\"section-title\">Detalle de tarea</h3>\r\n            {deleteSuccess !== null ? \r\n                <div aria-label='success-message' className='message-success'>{deleteSuccess} <Link to={'/tasks'}>Volver a la lista</Link></div>\r\n                :\r\n                <>\r\n                <BlockActions \r\n                    actions={actions}\r\n                />\r\n                {error !== null ?\r\n                    <ErrorMessage>{error.message}</ErrorMessage>\r\n                    :\r\n                    (task && task.task)?                \r\n                        <TaskDetailContainer> \r\n                            <TaskDetailItem>\r\n                                <TaskDetailKey>Título:</TaskDetailKey>\r\n                                <TaskDetailValue>{task.task.title}</TaskDetailValue>\r\n                            </TaskDetailItem>\r\n                            <TaskDetailItem>\r\n                                <TaskDetailKey>Descripción:</TaskDetailKey>\r\n                                <TaskDetailValue>{task.task.description}</TaskDetailValue>\r\n                            </TaskDetailItem>\r\n                            <TaskDetailItem>\r\n                                <TaskDetailKey>Author:</TaskDetailKey>\r\n                                <TaskDetailValue>{task.task.author}</TaskDetailValue>\r\n                            </TaskDetailItem>\r\n                            <TaskDetailItem>\r\n                                <TaskDetailKey>Estado:</TaskDetailKey>\r\n                                <TaskDetailValue>{statusLabel}</TaskDetailValue>\r\n                            </TaskDetailItem>\r\n                            <TaskDetailItem>\r\n                                <TaskDetailKey>Prioridad:</TaskDetailKey>\r\n                                <TaskDetailValue>{priorityLabel}</TaskDetailValue>\r\n                            </TaskDetailItem>\r\n                            <TaskDetailItem>\r\n                                <TaskDetailKey>Creada:</TaskDetailKey>\r\n                                <TaskDetailValue>{task.task.createdDate ? dateToString(new Date(task.task.createdDate)) : '-'}</TaskDetailValue>\r\n                            </TaskDetailItem>\r\n                            <TaskDetailItem>\r\n                                <TaskDetailKey>Fecha límite:</TaskDetailKey>\r\n                                <TaskDetailValue>{task.task.limitDate ? dateToString(new Date(task.task.limitDate)) : '-'}</TaskDetailValue>\r\n                            </TaskDetailItem>                            \r\n                            <TaskDetailItem>\r\n                                <TaskDetailKey>Tags:</TaskDetailKey>\r\n                                <TaskDetailValue>\r\n                                {task.task.tags.length ?\r\n                                    <TaskTagsContainer>\r\n                                    {\r\n                                        task.task.tags.map((tag) => {\r\n                                            return <div key={tag}>{tag}</div>\r\n                                        })\r\n                                    }\r\n                                    </TaskTagsContainer> \r\n                                    :\r\n                                    '-'\r\n                                }               \r\n                                </TaskDetailValue>\r\n                            </TaskDetailItem>\r\n                            <TaskDetailItem>\r\n                                <TaskDetailKey>Tarea padre:</TaskDetailKey>\r\n                                <TaskDetailValue>\r\n                                    {task.parentTask ?\r\n                                        <TaskChildrenContainer>\r\n                                            <Link to={`${task.parentTask.id}`}>{task.parentTask.title}</Link>\r\n                                        </TaskChildrenContainer>\r\n                                        :\r\n                                        '-'\r\n                                    }\r\n                                </TaskDetailValue>\r\n                            </TaskDetailItem>\r\n                            <TaskDetailItem>\r\n                                <TaskDetailKey>Subtareas:</TaskDetailKey>\r\n                                <TaskDetailValue>\r\n                                {task.childTasks.length ?\r\n                                    <TaskChildrenContainer>\r\n                                    {\r\n                                        task.childTasks.map((child) => {\r\n                                            return <Link to={`${child.id}`} key={child.title}>{child.title}</Link>\r\n                                        })\r\n                                    }\r\n                                    </TaskChildrenContainer> \r\n                                    :\r\n                                    '-'\r\n                                }                                \r\n                                </TaskDetailValue>\r\n                            </TaskDetailItem>                           \r\n                        </TaskDetailContainer>\r\n                        \r\n                    :   \r\n                        <div></div>\r\n                }\r\n                </>\r\n            }    \r\n                \r\n        </BlockContainer>\r\n    )   \r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\tasks\\task-list.component.tsx",["239","240"],"import React from 'react'\r\nimport { TaskItem } from '../../../domain/task-list'\r\nimport { getTaskList } from '../../../application/getTaskList'\r\nimport styled from 'styled-components'\r\nimport { color, common } from '../../../styles/theme';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Spinner } from '../common/spinner'\r\n\r\nimport { BlockHeaderComponent, BlockContainer } from '../common/block'\r\nimport { BlockActions } from '../common/block-actions'\r\nimport { FaPlus, FaFilter } from 'react-icons/fa'\r\nimport { TaskDetail } from 'src/domain/task-detail'\r\n\r\n\r\nconst ListItem = styled.li`\r\n    list-style: none;\r\n    padding: 1rem;\r\n    margin: 1rem;\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: ${color.orange};\r\n    background-color: ${color.orange};\r\n    color: ${color.white};\r\n    ${common.roundedCorners()};\r\n`\r\n\r\nconst TaskListItem = (props: {task: TaskItem } ) => {    \r\n    \r\n    return(\r\n        <ul>\r\n            <Link to={`/tasks/${props.task.id}`}>\r\n                <ListItem>{props.task.title}</ListItem>\r\n            </Link>\r\n        </ul>\r\n    )\r\n}\r\nexport const TaskListComponent = (props) => {\r\n    const [tasks, setTasks] = React.useState<Array<TaskItem>>([])\r\n    const [error, setError] = React.useState<Error | null>(null)\r\n    const [loading, setLoading] = React.useState<boolean>(false)\r\n    const [actions, setActions] = React.useState<Array<any>>([])\r\n    const [filters, setFilters ] = React.useState<Partial<TaskDetail>>(props.filter ||{parent: ''})\r\n\r\n    \r\n\r\n    const searchHandler = (values) => {\r\n        const filter: Partial<TaskDetail> = {\r\n            parent: ''\r\n        }\r\n        if(values.actionBarSearch){\r\n            filter.title = values.actionBarSearch\r\n        }\r\n        console.log(filter)\r\n        setFilters(filter)\r\n    }\r\n\r\n    const validation = (values) => {\r\n        const errors = []\r\n        return errors\r\n    }\r\n\r\n    React.useEffect(() => {  \r\n        setLoading(true)\r\n        setActions(actionItems)\r\n        getTaskList(filters)\r\n            .then(\r\n                (result) => {\r\n                    if(result.hasError){\r\n                        setError(new Error(result.error));\r\n                        setTasks([])\r\n                    }else{\r\n                        setTasks(result.data); \r\n                        setError(null);\r\n                    }\r\n                    \r\n                    setLoading(false)    \r\n                },\r\n                (error) => {\r\n                    setError(error)\r\n                    setLoading(false)    \r\n                }\r\n            )\r\n    },[filters])    \r\n    \r\n    let actionItems = [\r\n        {\r\n            icon: FaPlus,\r\n            text: 'Nueva tarea',\r\n            route: `/tasks/new`,\r\n            type: 'link'\r\n        },\r\n        {\r\n            view: 'actionBar',\r\n            type: 'form',         \r\n            key: 'actionBarFilterForm',   \r\n            initValues: {actionBarSearch: ''},\r\n            onSubmit: searchHandler,\r\n            validation: validation,\r\n            items: [\r\n                {\r\n                    type: 'text',\r\n                    id: 'actionBarSearch',\r\n                    placeholder: 'Buscar...'\r\n                },\r\n                {        \r\n                    id: 'filterBtn',\r\n                    type: 'submit',\r\n                    icon: FaFilter,\r\n                    label: 'Filtrar',\r\n                    className: 'button-icon'\r\n                }\r\n            ]\r\n            \r\n        },\r\n        \r\n    ]\r\n     return (\r\n        <BlockContainer>\r\n            <BlockHeaderComponent \r\n                title='Tareas'\r\n                actions={actions}\r\n            />\r\n             {loading && <Spinner />}            \r\n            \r\n            {error!==null ? \r\n                <div>Error: {error.message?error.message:'unknown error'}</div> \r\n                :\r\n                tasks.map((item: TaskItem) => (\r\n                    <TaskListItem key={item.id} task={item} />\r\n                ))\r\n            }\r\n        </BlockContainer>\r\n        )\r\n    \r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\getTask.tsx",[],["241","242"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\modal.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\styles\\reboot.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\views\\tasks.view.component.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\addTask.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\logo.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\spinner.tsx",["243","244"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { FaSpinner } from 'react-icons/fa'\r\nimport { color, common, font } from '../../../styles/theme'\r\n\r\nconst Container = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0,0,0,0.6);\r\n`\r\nconst SpinnerBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    padding: 3rem;\r\n    background-color: ${color.white} !important;\r\n    border-style: solid;\r\n    border-width:2px;\r\n    border-color: ${color.orange};\r\n    color: ${color.darkGrey};\r\n    ${common.roundedCorners()};\r\n`\r\nconst SpinnerIcon = styled(FaSpinner)`\r\n    margin: 0 auto;\r\n    margin-bottom: 1rem;\r\n`\r\n\r\nconst Message = styled.div`\r\n    color: ${color.darkGrey}\r\n    margin-top: 1rem;\r\n    ${font.h3()};\r\n`\r\n\r\nexport const Spinner = (props) => {\r\n    const [message,setMessage] = React.useState<string>('Cargando ...')\r\n    React.useEffect(() => {\r\n        props.message? setMessage(props.message) : setMessage('Cargando ...')\r\n    },[])\r\n\r\n    return (\r\n        <Container>\r\n            <SpinnerBox aria-label=\"loading\">\r\n                <SpinnerIcon size={75} className='icon-spin' />\r\n                <Message>Cargando...</Message>\r\n            </SpinnerBox>            \r\n        </Container>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\domain\\api-response.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\updateTask.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\form\\form.tsx",["245","246","247","248","249","250","251"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\lib\\date.utils.ts",["252"],"import  {Datepicker}  from './orzkDatepicker/datepicker'\r\n\r\nexport const dateToString = (d: Date, dateFormat: string = 'dmy/', timeFormat : string = 'hm') : string => {\r\n    let dp = new Datepicker(null,null,{lang: 'es',dateFormat: dateFormat, timeFormat: timeFormat});\r\n    dp.setDate(d);\r\n    return dp.getFullDateString()\r\n}\r\n\r\nexport const isValidDate = (date: string): boolean => {\r\n    if(\r\n        date.match(/^(((0[1-9]|[12]\\d|3[01])\\/(0[13578]|1[02])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|[12]\\d|30)\\/(0[13456789]|1[012])\\/((19|[2-9]\\d)\\d{2}))|((0[1-9]|1\\d|2[0-8])\\/02\\/((19|[2-9]\\d)\\d{2}))|(29\\/02\\/((1[6-9]|[2-9]\\d)(0[48]|[2468][048]|[13579][26])|(([1][26]|[2468][048]|[3579][26])00))))$/g)\r\n    ){\r\n        return true\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nexport const isValidTime = (time: string) : boolean => {\r\n    if(time.match(/^([0-1]?[0-9]|[2][0-3]):([0-5][0-9])(:[0-5][0-9])?$/)){\r\n        return true\r\n    }else{\r\n        return false\r\n    }\r\n}\r\n\r\nexport const isValidDateTime = (input: string): boolean => {\r\n    let datetime = input.split(\" \")\r\n    if(datetime.length == 2){\r\n        let date = datetime[0]\r\n        let time = datetime[1]\r\n        if(isValidDate(date) && isValidTime(time)){\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\worklog\\worklog-list.component.tsx",["253"],"import React from 'react'\r\nimport { FaPlus, FaFilter } from 'react-icons/fa'\r\nimport { BlockContainer, BlockHeaderComponent, BlockEmptyComponent} from '../common/block'\r\nimport { Spinner } from '../common/spinner'\r\nimport { getWorklogList} from '../../../application/getWorklogList'\r\nimport { Worklog } from '../../../domain/worklog'\r\nimport { Link } from 'react-router-dom'\r\nimport { common, color } from '../../../styles/theme'\r\nimport styled from 'styled-components'\r\n\r\nconst ListItem = styled.li`\r\n    list-style: none;\r\n    padding: 1rem;\r\n    margin: 1rem;\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: ${color.orange};\r\n    background-color: ${color.orange};\r\n    color: ${color.white};\r\n    ${common.roundedCorners()};\r\n`\r\n\r\nconst WorklogListItem = (props: {worklog: Worklog } ) => {    \r\n    \r\n    return(\r\n        <ul>\r\n            <Link to={`/tasks/${props.worklog.id}`}>\r\n                <ListItem>{props.worklog.title}</ListItem>\r\n            </Link>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport const WorklogListComponent = ( props ) => {\r\n    const [worklogs, setWorklogs] = React.useState<Array<any>>([])\r\n    const [error, setError] = React.useState<Error | null>(null)\r\n    const [loading, setLoading] = React.useState<boolean>(false)\r\n    const [actions, setActions] = React.useState<Array<any>>([])\r\n    const [filters, setFilters ] = React.useState<Partial<any>>(props.filter ||{})\r\n\r\n    \r\n    React.useEffect(() => {\r\n        setLoading(true)\r\n        setActions(actionItems)\r\n        getWorklogList(filters)\r\n            .then(\r\n                (result) => {\r\n                    console.log()\r\n                    if(result.hasError){\r\n                        setError(new Error(result.error));\r\n                        setWorklogs([])\r\n                    }else{\r\n                        setWorklogs(result.data); \r\n                        setError(null);\r\n                    }\r\n                    \r\n                    setLoading(false)    \r\n                },\r\n                (error) => {\r\n                    setError(error)\r\n                    setLoading(false)    \r\n                }\r\n            )\r\n    },[filters])\r\n\r\n    const searchHandler = (values) => {\r\n        const filter: Partial<any> = {}\r\n        if(values.actionBarSearch){\r\n            filter.title = values.actionBarSearch\r\n        }\r\n        console.log(filter)\r\n        setFilters(filter)\r\n    }\r\n\r\n    const validation = (values) => {\r\n        const errors = []\r\n        return errors\r\n    }\r\n    let actionItems = [\r\n        {\r\n            icon: FaPlus,\r\n            text: 'Nuevo registro',\r\n            route: `/worklogs/new`,\r\n            type: 'link'\r\n        },\r\n        {\r\n            view: 'actionBar',\r\n            type: 'form',         \r\n            key: 'actionBarFilterForm',   \r\n            initValues: {actionBarSearch: ''},\r\n            onSubmit: searchHandler,\r\n            validation: validation,\r\n            items: [\r\n                {\r\n                    type: 'text',\r\n                    id: 'actionBarSearch',\r\n                    placeholder: 'Buscar...'\r\n                },\r\n                {        \r\n                    id: 'filterBtn',\r\n                    type: 'submit',\r\n                    icon: FaFilter,\r\n                    label: 'Filtrar',\r\n                    className: 'button-icon'\r\n                }\r\n            ]\r\n            \r\n        },\r\n        \r\n    ]\r\n    return (\r\n        <BlockContainer>\r\n            <BlockHeaderComponent \r\n                title='Partes de trabajo'\r\n                actions={actions}\r\n            />\r\n            {loading && <Spinner />}\r\n            {worklogs.length ? \r\n                (error!==null ? \r\n                    <div>Error: {error.message?error.message:'unknown error'}</div> \r\n                    :\r\n                    worklogs.map((item: Worklog) => (\r\n                        <WorklogListItem key={item.id} worklog={item} />\r\n                    ))\r\n                )\r\n                :\r\n                <BlockEmptyComponent />\r\n            }\r\n        </BlockContainer>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\common\\block.tsx",["254","255"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {common, font, color } from '../../../styles/theme'\r\nimport { BlockActions } from '../common/block-actions'\r\n\r\nexport const BlockContainer = styled.div`\r\n    margin: 1rem;\r\n    border-style: solid;\r\n    border-color: #000;\r\n    border-width: 1px;\r\n    ${common.roundedCorners()};\r\n`\r\n\r\nconst BlockTitle = styled.div`\r\n    ${font.h3()};\r\n    color: ${color.white};\r\n    background-color: ${color.orange};\r\n    ${common.roundedCornersTop()};\r\n    padding: 1rem;\r\n`\r\n\r\nexport const BlockEmptySet = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    font-style: italic;\r\n    color: ${color.black}\r\n`\r\n\r\nexport const BlockEmptyComponent = () => {\r\n    return (\r\n        <BlockEmptySet>\r\n            No se han encontrado resultados\r\n        </BlockEmptySet>\r\n    )\r\n}\r\nexport const BlockHeaderComponent = (props) => {\r\n    const [title, setTitle] = React.useState<string>(props.title || 'Sin título')\r\n    const [actions, setActions] = React.useState<Array<any>>([])\r\n\r\n    React.useEffect(() => {\r\n        setActions(props.actions)\r\n    },[actions])\r\n\r\n    return (\r\n        <>\r\n            <BlockTitle>{title}</BlockTitle>     \r\n            {actions && actions.length > 0 &&\r\n                <BlockActions \r\n                    actions={actions}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\worklog\\worklog-new.component.tsx",["256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284"]," import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { color, common } from '../../../styles/theme';\r\nimport { FormWrapper, FormDateInput,FormSelect,FormTextInput, FormButtons} from '../common/form/form'\r\nimport { Formik, Form, Field, useField } from 'formik'\r\nimport { Worklog } from '../../../domain/worklog'\r\nimport { addWorklog } from '../../../application/addWorklog'\r\nimport { updateWorklog } from '../../../application/updateWorklog'\r\nimport { TaskStatus, TaskPriority, ConstObjectToSelectOptionsArray } from '../../../domain/task-definitions'\r\nimport { getTask } from '../../../application/getTask'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { FaCheck, FaTimes, FaRedo, FaCalendar} from 'react-icons/fa'\r\nimport { IconButton, IconLink } from '../common/icon-button'\r\nimport { Spinner } from '../common/spinner'\r\nimport { BlockContainer, BlockHeaderComponent} from '../common/block'\r\n\r\nimport { FormBuilder } from '../common/form/form'\r\n\r\nimport  {Datepicker}  from '../../../lib/orzkDatepicker/datepicker'\r\nimport '../../../lib/orzkDatepicker/datepicker.css'\r\nimport { isValidDateTime } from '../../../lib/date.utils'\r\n\r\n\r\nconst emptyWorklog: Worklog = {\r\n    id: '',\r\n    title: '',    \r\n    startDatetime: '',\r\n    endDatetime: '',\r\n    tags: []\r\n}\r\n\r\n\r\n  const ParentTaskReference = styled(Link)`\r\n        display: flex;\r\n        background-color: ${color.semiLightGrey};\r\n        padding: 1rem;\r\n        margin: 1rem;\r\n        color: ${color.black} !important;\r\n        border-style: solid;\r\n        border-width: 1px;\r\n        boder-color: ${color.blue};\r\n        ${common.roundedCorners()};        \r\n  `\r\n\r\nexport interface WorklogProps {\r\n    worklogid: string,\r\n}\r\n\r\nexport const WorklogNewComponent = (props) => {\r\n    let { worklogid } = useParams<WorklogProps>()\r\n    const [dpStart,setDpStart] = React.useState<Datepicker | null>(null)\r\n    const [startDate, setStartDate] = React.useState<string>('')\r\n    const [dpEnd,setDpEnd] = React.useState<Datepicker | null>(null)\r\n    const [endDate, setEndDate] = React.useState<string>('')\r\n    const [submitSuccess, setSubmitSuccess] = React.useState(null)\r\n    const [submitError, setSubmitError] = React.useState<Error | null>(null)\r\n    const [mode, setMode] = React.useState(props.mode || 'new')\r\n    const [worklog, setWorklog] = React.useState<Worklog | null>(null)\r\n    const [error, setError] = React.useState<Error | null>(null)\r\n    const [loading, setLoading] = React.useState<boolean>(false)\r\n    const [title, setTitle] = React.useState<string>('Nuevo registro')\r\n    \r\n    const dateHandler = () => {\r\n        dpStart.show()\r\n    }\r\n    let formItems = \r\n         [\r\n            {\r\n                type: 'text',\r\n                id: 'title',\r\n                label: 'Título'\r\n            },\r\n            {\r\n                type: 'date2',\r\n                id: 'startDatetime',\r\n                label: 'Fecha y hora de inicio',\r\n                //icon: FaCalendar,\r\n                //dateText: startDate,\r\n                //handler: dateHandler\r\n            },\r\n            {\r\n                type: 'buttons',\r\n                buttons: [\r\n                    {        \r\n                        id: 'submitBtn',\r\n                        type: 'submit',\r\n                        icon: FaCheck,\r\n                        label: 'Guardar',\r\n                        className: 'form-button-submit button-icon'\r\n                    },\r\n                    {\r\n                        id: 'cancelBtn',\r\n                        type: 'link',\r\n                        route: '/worklogs',\r\n                        icon: FaTimes,\r\n                        label: 'Cancelar',\r\n                        className: 'form-button-cancel button-icon'\r\n                    }\r\n                ]\r\n            }            \r\n         ]\r\n    \r\n    const validate = (values) => {\r\n        const errors : Partial<Worklog> = {}\r\n        console.log(values)\r\n        if(!values.title){           \r\n            console.log(\"No titulo\")             \r\n            errors.title = 'Campo obligatorio'\r\n        }   \r\n        \r\n        if( values.startDatetime && !isValidDateTime(values.startDatetime)){\r\n            console.log(\"No fecha\")\r\n            errors.startDatetime = 'Formato de fecha y hora no válido'\r\n        }\r\n       \r\n        return errors\r\n    }\r\n\r\n    const onSubmit = (values, helpers) => {\r\n        console.log(values)\r\n        return false\r\n        if(values.startDatetime !== ''){\r\n            values.startDatetime = (new Datepicker().createDate(values.startDatetime)).toString()\r\n        }\r\n                        \r\n        setLoading(true)\r\n            if(mode === 'new'){\r\n                addWorklog(values)\r\n                .then(                            \r\n                    (result) => {\r\n                        if(!result.hasError){\r\n                            setSubmitSuccess(result.data.task);                                        \r\n                            setSubmitError(null);\r\n                            helpers.resetForm({})\r\n                        }else{\r\n                            setSubmitSuccess(null);\r\n                            setSubmitError(new Error(result.error));                                      \r\n                        }\r\n                        helpers.setSubmitting(false); \r\n                        setLoading(false)\r\n                    },\r\n                    (error) => {\r\n                        console.log(error)\r\n                        helpers.setSubmitting(false);\r\n                        setSubmitSuccess(null);\r\n                        setSubmitError(error);\r\n                        setLoading(false)\r\n                    }\r\n                )\r\n            }else if(mode === 'edit'){\r\n                updateWorklog(values)\r\n                .then(                            \r\n                    (result) => {\r\n                        if(!result.hasError){                                        \r\n                            setSubmitSuccess(result.data.task); \r\n                            setWorklog(null)                                     \r\n                            setWorklog(result.data.worklog)                                        \r\n                            setSubmitError(null);\r\n                        }else{\r\n                            setSubmitSuccess(null);\r\n                            setSubmitError(new Error(result.error));                                      \r\n                        }\r\n                        helpers.setSubmitting(false); \r\n                        setLoading(false)\r\n                    },\r\n                    (error) => {\r\n                        console.log(error)\r\n                        helpers.setSubmitting(false);\r\n                        setSubmitSuccess(null);\r\n                        setSubmitError(error);\r\n                        setLoading(false)\r\n                    }\r\n                )\r\n            }      \r\n    }\r\n\r\n    React.useEffect(()=> {\r\n        if(mode === 'edit') setTitle('Editar registro')\r\n        else setTitle('Nuevo registro')\r\n    },[mode])\r\n\r\n    React.useEffect(() => {        \r\n        let dp = new Datepicker('startDate','StartDate', {lang:'es'})\r\n        dp.onSubmit = () => {   \r\n            setStartDate(dp.getFullDateString())         \r\n            dp.printDate();\r\n         }          \r\n\r\n        if(worklog && worklog.startDatetime !== '' && new Date(worklog.startDatetime)){\r\n            dp.setDate(new Date(worklog.startDatetime))\r\n        }\r\n        setDpStart(dp)\r\n\r\n    },[worklog])\r\n\r\n    React.useEffect(() => {   \r\n        if(dpStart && dpStart.getDate() !== null){    \r\n            setStartDate(dpStart.getFullDateString())\r\n        }\r\n    },[dpStart])\r\n\r\n    React.useEffect(()=> {   \r\n        let cancelled = false    \r\n        if(worklogid){\r\n            setLoading(true)\r\n            getTask(worklogid)\r\n            .then(\r\n                (result) => { \r\n                    if(!cancelled){ \r\n                        if(result.hasError){\r\n                            setError(new Error(result.error))\r\n                            setWorklog(null)\r\n                        }else{\r\n                            if(mode === 'edit'){    \r\n                                setWorklog(result.data.task) \r\n                            }else{                                \r\n                                setWorklog(emptyWorklog)\r\n                            }\r\n                            setError(null)\r\n                            setSubmitError(null)\r\n                        }\r\n                    \r\n                        setLoading(false) \r\n                    }\r\n                },\r\n                (error) => {\r\n                    setSubmitSuccess(null)\r\n                    setSubmitError(null)\r\n                    setError(error)\r\n                    setWorklog(null)\r\n                    setStartDate('')\r\n                    setLoading(false)\r\n                }\r\n            )        \r\n        }else{\r\n            setWorklog(emptyWorklog)\r\n        }  \r\n        return () => cancelled = true    \r\n    },[])\r\n\r\n    return (        \r\n        <BlockContainer> \r\n            <BlockHeaderComponent \r\n                title={title}\r\n            />  \r\n            {loading ? <Spinner /> : ''}            \r\n           \r\n            {submitError &&\r\n                <div aria-label='error-message' className='message-error'>{submitError.message}</div>\r\n            }\r\n            \r\n            {worklog &&\r\n                <FormBuilder \r\n                    key = \"newWorklogForm\"\r\n                    formView = \"form\"\r\n                    formItems = {formItems}\r\n                    initValues = {emptyWorklog}\r\n                    validation = {validate}\r\n                    onSubmit = {onSubmit}\r\n            />\r\n            }\r\n        </BlockContainer>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\views\\worklog.view.component.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\addWorklog.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\infrastructure\\components\\worklog\\worklog-detail.component.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\application\\getWorklogList.ts",[],{"ruleId":"285","severity":1,"message":"286","line":5,"column":18,"nodeType":"287","messageId":"288","endLine":5,"endColumn":22},{"ruleId":"285","severity":1,"message":"289","line":5,"column":24,"nodeType":"287","messageId":"288","endLine":5,"endColumn":29},{"ruleId":"285","severity":1,"message":"290","line":5,"column":31,"nodeType":"287","messageId":"288","endLine":5,"endColumn":39},{"ruleId":"285","severity":1,"message":"291","line":58,"column":18,"nodeType":"287","messageId":"288","endLine":58,"endColumn":25},{"ruleId":"285","severity":1,"message":"292","line":60,"column":12,"nodeType":"287","messageId":"288","endLine":60,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":131,"column":7,"nodeType":"295","endLine":131,"endColumn":9,"suggestions":"296"},{"ruleId":"297","severity":1,"message":"298","line":147,"column":29,"nodeType":"299","messageId":"300","endLine":147,"endColumn":31},{"ruleId":"297","severity":1,"message":"298","line":197,"column":50,"nodeType":"299","messageId":"300","endLine":197,"endColumn":52},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"301","replacedBy":"305"},{"ruleId":"303","replacedBy":"306"},{"ruleId":"307","severity":1,"message":"308","line":459,"column":13,"nodeType":"287","messageId":"309","endLine":459,"endColumn":14},{"ruleId":"307","severity":1,"message":"308","line":503,"column":11,"nodeType":"287","messageId":"309","endLine":503,"endColumn":12},{"ruleId":"307","severity":1,"message":"308","line":521,"column":11,"nodeType":"287","messageId":"309","endLine":521,"endColumn":12},{"ruleId":"307","severity":1,"message":"308","line":954,"column":13,"nodeType":"287","messageId":"309","endLine":954,"endColumn":14},{"ruleId":"307","severity":1,"message":"310","line":955,"column":10,"nodeType":"287","messageId":"309","endLine":955,"endColumn":13},{"ruleId":"307","severity":1,"message":"308","line":1023,"column":11,"nodeType":"287","messageId":"309","endLine":1023,"endColumn":12},{"ruleId":"307","severity":1,"message":"311","line":1026,"column":9,"nodeType":"287","messageId":"309","endLine":1026,"endColumn":12},{"ruleId":"307","severity":1,"message":"308","line":1287,"column":12,"nodeType":"287","messageId":"309","endLine":1287,"endColumn":13},{"ruleId":"307","severity":1,"message":"312","line":1299,"column":10,"nodeType":"287","messageId":"309","endLine":1299,"endColumn":11},{"ruleId":"313","severity":1,"message":"314","line":1469,"column":3,"nodeType":"315","messageId":"316","endLine":1491,"endColumn":4},{"ruleId":"317","severity":1,"message":"318","line":1476,"column":4,"nodeType":"319","messageId":"320","endLine":1481,"endColumn":6},{"ruleId":"317","severity":1,"message":"318","line":1482,"column":4,"nodeType":"319","messageId":"320","endLine":1490,"endColumn":6},{"ruleId":"307","severity":1,"message":"308","line":1544,"column":14,"nodeType":"287","messageId":"309","endLine":1544,"endColumn":15},{"ruleId":"307","severity":1,"message":"321","line":1577,"column":9,"nodeType":"287","messageId":"309","endLine":1577,"endColumn":15},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"285","severity":1,"message":"322","line":4,"column":10,"nodeType":"287","messageId":"288","endLine":4,"endColumn":17},{"ruleId":"285","severity":1,"message":"323","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":20},{"ruleId":"285","severity":1,"message":"324","line":6,"column":30,"nodeType":"287","messageId":"288","endLine":6,"endColumn":41},{"ruleId":"297","severity":1,"message":"298","line":64,"column":35,"nodeType":"299","messageId":"300","endLine":64,"endColumn":37},{"ruleId":"301","replacedBy":"325"},{"ruleId":"303","replacedBy":"326"},{"ruleId":"327","severity":1,"message":"328","line":43,"column":38,"nodeType":"329","messageId":"330","endLine":43,"endColumn":40},{"ruleId":"327","severity":1,"message":"328","line":109,"column":41,"nodeType":"329","messageId":"330","endLine":109,"endColumn":43},{"ruleId":"327","severity":1,"message":"328","line":171,"column":29,"nodeType":"329","messageId":"330","endLine":171,"endColumn":31},{"ruleId":"327","severity":1,"message":"328","line":17,"column":35,"nodeType":"329","messageId":"330","endLine":17,"endColumn":37},{"ruleId":"285","severity":1,"message":"331","line":3,"column":17,"nodeType":"287","messageId":"288","endLine":3,"endColumn":21},{"ruleId":"285","severity":1,"message":"332","line":3,"column":23,"nodeType":"287","messageId":"288","endLine":3,"endColumn":29},{"ruleId":"293","severity":1,"message":"333","line":34,"column":7,"nodeType":"295","endLine":34,"endColumn":16,"suggestions":"334"},{"ruleId":"327","severity":1,"message":"335","line":40,"column":50,"nodeType":"329","messageId":"336","endLine":40,"endColumn":52},{"ruleId":"285","severity":1,"message":"337","line":1,"column":10,"nodeType":"287","messageId":"288","endLine":1,"endColumn":18},{"ruleId":"301","replacedBy":"338"},{"ruleId":"303","replacedBy":"339"},{"ruleId":"293","severity":1,"message":"340","line":51,"column":7,"nodeType":"295","endLine":51,"endColumn":9,"suggestions":"341"},{"ruleId":"293","severity":1,"message":"342","line":77,"column":7,"nodeType":"295","endLine":77,"endColumn":9,"suggestions":"343"},{"ruleId":"285","severity":1,"message":"344","line":1,"column":17,"nodeType":"287","messageId":"288","endLine":1,"endColumn":25},{"ruleId":"285","severity":1,"message":"345","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":20},{"ruleId":"285","severity":1,"message":"346","line":15,"column":26,"nodeType":"287","messageId":"288","endLine":15,"endColumn":46},{"ruleId":"285","severity":1,"message":"347","line":98,"column":11,"nodeType":"287","messageId":"288","endLine":98,"endColumn":23},{"ruleId":"293","severity":1,"message":"348","line":126,"column":7,"nodeType":"295","endLine":126,"endColumn":24,"suggestions":"349"},{"ruleId":"293","severity":1,"message":"350","line":187,"column":7,"nodeType":"295","endLine":187,"endColumn":15,"suggestions":"351"},{"ruleId":"285","severity":1,"message":"352","line":11,"column":10,"nodeType":"287","messageId":"288","endLine":11,"endColumn":22},{"ruleId":"293","severity":1,"message":"353","line":84,"column":7,"nodeType":"295","endLine":84,"endColumn":16,"suggestions":"354"},{"ruleId":"301","replacedBy":"355"},{"ruleId":"303","replacedBy":"356"},{"ruleId":"285","severity":1,"message":"357","line":43,"column":12,"nodeType":"287","messageId":"288","endLine":43,"endColumn":19},{"ruleId":"293","severity":1,"message":"358","line":46,"column":7,"nodeType":"295","endLine":46,"endColumn":9,"suggestions":"359"},{"ruleId":"293","severity":1,"message":"360","line":96,"column":7,"nodeType":"295","endLine":96,"endColumn":9,"suggestions":"361"},{"ruleId":"293","severity":1,"message":"362","line":122,"column":7,"nodeType":"295","endLine":122,"endColumn":9,"suggestions":"363"},{"ruleId":"293","severity":1,"message":"364","line":127,"column":7,"nodeType":"295","endLine":127,"endColumn":17,"suggestions":"365"},{"ruleId":"285","severity":1,"message":"366","line":210,"column":20,"nodeType":"287","messageId":"288","endLine":210,"endColumn":27},{"ruleId":"293","severity":1,"message":"367","line":214,"column":9,"nodeType":"295","endLine":214,"endColumn":11,"suggestions":"368"},{"ruleId":"327","severity":1,"message":"335","line":232,"column":50,"nodeType":"329","messageId":"336","endLine":232,"endColumn":52},{"ruleId":"327","severity":1,"message":"335","line":294,"column":50,"nodeType":"329","messageId":"336","endLine":294,"endColumn":52},{"ruleId":"297","severity":1,"message":"298","line":29,"column":24,"nodeType":"299","messageId":"300","endLine":29,"endColumn":26},{"ruleId":"293","severity":1,"message":"353","line":64,"column":7,"nodeType":"295","endLine":64,"endColumn":16,"suggestions":"369"},{"ruleId":"285","severity":1,"message":"370","line":38,"column":19,"nodeType":"287","messageId":"288","endLine":38,"endColumn":27},{"ruleId":"293","severity":1,"message":"333","line":43,"column":7,"nodeType":"295","endLine":43,"endColumn":16,"suggestions":"371"},{"ruleId":"285","severity":1,"message":"372","line":4,"column":10,"nodeType":"287","messageId":"288","endLine":4,"endColumn":21},{"ruleId":"285","severity":1,"message":"373","line":4,"column":23,"nodeType":"287","messageId":"288","endLine":4,"endColumn":36},{"ruleId":"285","severity":1,"message":"374","line":4,"column":37,"nodeType":"287","messageId":"288","endLine":4,"endColumn":47},{"ruleId":"285","severity":1,"message":"375","line":4,"column":48,"nodeType":"287","messageId":"288","endLine":4,"endColumn":61},{"ruleId":"285","severity":1,"message":"376","line":4,"column":63,"nodeType":"287","messageId":"288","endLine":4,"endColumn":74},{"ruleId":"285","severity":1,"message":"377","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":5,"column":18,"nodeType":"287","messageId":"288","endLine":5,"endColumn":22},{"ruleId":"285","severity":1,"message":"289","line":5,"column":24,"nodeType":"287","messageId":"288","endLine":5,"endColumn":29},{"ruleId":"285","severity":1,"message":"290","line":5,"column":31,"nodeType":"287","messageId":"288","endLine":5,"endColumn":39},{"ruleId":"285","severity":1,"message":"378","line":9,"column":10,"nodeType":"287","messageId":"288","endLine":9,"endColumn":20},{"ruleId":"285","severity":1,"message":"379","line":9,"column":22,"nodeType":"287","messageId":"288","endLine":9,"endColumn":34},{"ruleId":"285","severity":1,"message":"380","line":9,"column":36,"nodeType":"287","messageId":"288","endLine":9,"endColumn":67},{"ruleId":"285","severity":1,"message":"381","line":12,"column":28,"nodeType":"287","messageId":"288","endLine":12,"endColumn":34},{"ruleId":"285","severity":1,"message":"382","line":12,"column":36,"nodeType":"287","messageId":"288","endLine":12,"endColumn":46},{"ruleId":"285","severity":1,"message":"383","line":13,"column":10,"nodeType":"287","messageId":"288","endLine":13,"endColumn":20},{"ruleId":"285","severity":1,"message":"384","line":13,"column":22,"nodeType":"287","messageId":"288","endLine":13,"endColumn":30},{"ruleId":"285","severity":1,"message":"385","line":33,"column":9,"nodeType":"287","messageId":"288","endLine":33,"endColumn":28},{"ruleId":"285","severity":1,"message":"386","line":52,"column":12,"nodeType":"287","messageId":"288","endLine":52,"endColumn":21},{"ruleId":"285","severity":1,"message":"387","line":53,"column":12,"nodeType":"287","messageId":"288","endLine":53,"endColumn":17},{"ruleId":"285","severity":1,"message":"388","line":53,"column":18,"nodeType":"287","messageId":"288","endLine":53,"endColumn":26},{"ruleId":"285","severity":1,"message":"389","line":54,"column":12,"nodeType":"287","messageId":"288","endLine":54,"endColumn":19},{"ruleId":"285","severity":1,"message":"390","line":54,"column":21,"nodeType":"287","messageId":"288","endLine":54,"endColumn":31},{"ruleId":"285","severity":1,"message":"391","line":55,"column":12,"nodeType":"287","messageId":"288","endLine":55,"endColumn":25},{"ruleId":"285","severity":1,"message":"291","line":57,"column":18,"nodeType":"287","messageId":"288","endLine":57,"endColumn":25},{"ruleId":"285","severity":1,"message":"292","line":59,"column":12,"nodeType":"287","messageId":"288","endLine":59,"endColumn":17},{"ruleId":"285","severity":1,"message":"392","line":63,"column":11,"nodeType":"287","messageId":"288","endLine":63,"endColumn":22},{"ruleId":"393","severity":1,"message":"394","line":122,"column":9,"nodeType":"395","messageId":"396","endLine":174,"endColumn":14},{"ruleId":"393","severity":1,"message":"394","line":150,"column":19,"nodeType":"395","messageId":"396","endLine":174,"endColumn":14},{"ruleId":"293","severity":1,"message":"397","line":239,"column":7,"nodeType":"295","endLine":239,"endColumn":9,"suggestions":"398"},"@typescript-eslint/no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Field' is defined but never used.","'useField' is defined but never used.","'setMode' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'mode' and 'taskid'. Either include them or remove the dependency array.","ArrayExpression",["399"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["400"],"no-negated-in-lhs",["401"],["400"],["401"],"no-redeclare","'i' is already defined.","redeclared","'msg' is already defined.","'day' is already defined.","'h' is already defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'result' is already defined.","'isEmpty' is defined but never used.","'Datepicker' is defined but never used.","'ApiResponse' is defined but never used.",["400"],["401"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'font' is defined but never used.","'common' is defined but never used.","React Hook React.useEffect has a missing dependency: 'props.actions'. Either include it or remove the dependency array. If 'setActions' needs the current value of 'props.actions', you can also switch to useReducer instead of useState and read 'props.actions' in the reducer.",["402"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'TaskList' is defined but never used.",["400"],["401"],"React Hook React.useEffect has missing dependencies: 'props.icon' and 'props.text'. Either include them or remove the dependency array. If 'setIcon' needs the current value of 'props.icon', you can also switch to useReducer instead of useState and read 'props.icon' in the reducer.",["403"],"React Hook React.useEffect has missing dependencies: 'props.icon', 'props.route', and 'props.text'. Either include them or remove the dependency array. If 'setIcon' needs the current value of 'props.icon', you can also switch to useReducer instead of useState and read 'props.icon' in the reducer.",["404"],"'Children' is defined but never used.","'TaskDetail' is defined but never used.","'BlockHeaderComponent' is defined but never used.","'childHandler' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'taskid'. Either include it or remove the dependency array.",["405"],"React Hook React.useEffect has missing dependencies: 'actionItems', 'priorityLabel', and 'statusLabel'. Either include them or remove the dependency array.",["406"],"'BlockActions' is defined but never used.","React Hook React.useEffect has a missing dependency: 'actionItems'. Either include it or remove the dependency array.",["407"],["400"],["401"],"'message' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.message'. Either include it or remove the dependency array. If 'setMessage' needs the current value of 'props.message', you can also switch to useReducer instead of useState and read 'props.message' in the reducer.",["408"],"React Hook React.useEffect has missing dependencies: 'label', 'props.id', 'setTouched', and 'setValue'. Either include them or remove the dependency array.",["409"],"React Hook React.useEffect has a missing dependency: 'icon'. Either include it or remove the dependency array. If 'setInputIcon' needs the current value of 'icon', you can also switch to useReducer instead of useState and read 'icon' in the reducer.",["410"],"React Hook React.useEffect has missing dependencies: 'setTouched' and 'setValue'. Either include them or remove the dependency array.",["411"],"'setView' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.formItems'. Either include it or remove the dependency array. If 'setItems' needs the current value of 'props.formItems', you can also switch to useReducer instead of useState and read 'props.formItems' in the reducer.",["412"],["413"],"'setTitle' is assigned a value but never used.",["414"],"'FormWrapper' is defined but never used.","'FormDateInput' is defined but never used.","'FormSelect' is defined but never used.","'FormTextInput' is defined but never used.","'FormButtons' is defined but never used.","'Formik' is defined but never used.","'TaskStatus' is defined but never used.","'TaskPriority' is defined but never used.","'ConstObjectToSelectOptionsArray' is defined but never used.","'FaRedo' is defined but never used.","'FaCalendar' is defined but never used.","'IconButton' is defined but never used.","'IconLink' is defined but never used.","'ParentTaskReference' is assigned a value but never used.","'startDate' is assigned a value but never used.","'dpEnd' is assigned a value but never used.","'setDpEnd' is assigned a value but never used.","'endDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'submitSuccess' is assigned a value but never used.","'dateHandler' is assigned a value but never used.","no-unreachable","Unreachable code.","IfStatement","unreachableCode","React Hook React.useEffect has missing dependencies: 'mode' and 'worklogid'. Either include them or remove the dependency array.",["415"],{"desc":"416","fix":"417"},"no-global-assign","no-unsafe-negation",{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"428","fix":"440"},{"desc":"418","fix":"441"},{"desc":"442","fix":"443"},"Update the dependencies array to be: [mode, taskid]",{"range":"444","text":"445"},"Update the dependencies array to be: [actions, props.actions]",{"range":"446","text":"447"},"Update the dependencies array to be: [props.icon, props.text]",{"range":"448","text":"449"},"Update the dependencies array to be: [props.icon, props.route, props.text]",{"range":"450","text":"451"},"Update the dependencies array to be: [confirmedDelete, taskid]",{"range":"452","text":"453"},"Update the dependencies array to be: [actionItems, priorityLabel, statusLabel, taskid]",{"range":"454","text":"455"},"Update the dependencies array to be: [actionItems, filters]",{"range":"456","text":"457"},"Update the dependencies array to be: [props.message]",{"range":"458","text":"459"},"Update the dependencies array to be: [label, props.id, setTouched, setValue]",{"range":"460","text":"461"},"Update the dependencies array to be: [icon]",{"range":"462","text":"463"},"Update the dependencies array to be: [dateText, setTouched, setValue]",{"range":"464","text":"465"},"Update the dependencies array to be: [props.formItems]",{"range":"466","text":"467"},{"range":"468","text":"457"},{"range":"469","text":"447"},"Update the dependencies array to be: [mode, worklogid]",{"range":"470","text":"471"},[4931,4933],"[mode, taskid]",[925,934],"[actions, props.actions]",[1385,1387],"[props.icon, props.text]",[2070,2072],"[props.icon, props.route, props.text]",[3955,3972],"[confirmedDelete, taskid]",[6082,6090],"[actionItems, priorityLabel, statusLabel, taskid]",[2592,2601],"[actionItems, filters]",[1196,1198],"[props.message]",[2811,2813],"[label, props.id, setTouched, setValue]",[3833,3835],"[icon]",[3980,3990],"[dateText, setTouched, setValue]",[6883,6885],"[props.formItems]",[2154,2163],[1144,1153],[9089,9091],"[mode, worklogid]"]