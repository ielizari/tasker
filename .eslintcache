[{"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\tasks\\task-new.component.tsx":"1","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-sequence.component.tsx":"2","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\job\\job-new.component.tsx":"3","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-grouped.component.tsx":"4","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-detail.component.tsx":"5","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\index.tsx":"6","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\styles\\globalStyles.ts":"7","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\browser.js":"8","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\browserdb.ts":"9","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\App.tsx":"10","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\contexts\\dbSyncContext.tsx":"11","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\tests\\mocks\\handlers.ts":"12","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\styles\\reset.ts":"13","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\styles\\theme.ts":"14","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\styles\\reboot.ts":"15","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\existsDatabase.ts":"16","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\contexts\\runningWorklogsContext.tsx":"17","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\application\\taskerRepository.tsx":"18","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\views\\setup-app.component.tsx":"19","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\header.tsx":"20","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\views\\tasks.view.component.tsx":"21","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\handlers\\worklogs.ts":"22","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\lib\\date.utils.ts":"23","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\db-sync.tsx":"24","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-new.component.tsx":"25","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\lib\\orzkDatepicker\\datepicker.js":"26","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\tests\\mocks\\browser.js":"27","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\handlers\\tasks.ts":"28","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\loaddb.component.tsx":"29","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\tasks\\task-detail.component.tsx":"30","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\isSyncedDatabase.ts":"31","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\getWorklog.ts":"32","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\updateTask.ts":"33","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\block-actions.tsx":"34","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\form\\form.tsx":"35","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\views\\settings.component.tsx":"36","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\handlers\\database.ts":"37","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\block.tsx":"38","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-list.component.tsx":"39","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\importDatabase.ts":"40","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\addWorklog.ts":"41","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\getTaskList.tsx":"42","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\getTask.tsx":"43","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\updateJob.ts":"44","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\icon-button.tsx":"45","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\reportWebVitals.ts":"46","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\domain\\api-response.ts":"47","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\handlers\\jobs.ts":"48","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\newDatabase.ts":"49","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\getWorklogList.ts":"50","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\deleteTask.ts":"51","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\dtos\\taskApiToComponent.dto.ts":"52","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\addTask.tsx":"53","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\closeWorklog.ts":"54","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\addJob.ts":"55","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\views\\worklog.view.component.tsx":"56","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-running.component.tsx":"57","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\exportDatabase.ts":"58","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\deleteWorklog.ts":"59","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\domain\\task-definitions.ts":"60","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\dtos\\jobApiToComponent.dto.ts":"61","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\getWorklogGroupedData.ts":"62","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\handlers.ts":"63","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\application\\dtos\\dbToApiDto.ts":"64","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\views\\home.component.tsx":"65","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\spinner.tsx":"66","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\modal.tsx":"67"},{"size":11197,"mtime":1610084359849,"results":"68","hashOfConfig":"69"},{"size":14113,"mtime":1610568117940,"results":"70","hashOfConfig":"69"},{"size":7963,"mtime":1610345234037,"results":"71","hashOfConfig":"69"},{"size":5761,"mtime":1610569126444,"results":"72","hashOfConfig":"69"},{"size":10977,"mtime":1610297961287,"results":"73","hashOfConfig":"69"},{"size":1106,"mtime":1609144176141,"results":"74","hashOfConfig":"69"},{"size":2874,"mtime":1609579181143,"results":"75","hashOfConfig":"69"},{"size":122,"mtime":1606889256149,"results":"76","hashOfConfig":"69"},{"size":24178,"mtime":1610519576831,"results":"77","hashOfConfig":"69"},{"size":2425,"mtime":1609697735533,"results":"78","hashOfConfig":"69"},{"size":814,"mtime":1609146338397,"results":"79","hashOfConfig":"69"},{"size":13328,"mtime":1610001867451,"results":"80","hashOfConfig":"69"},{"size":1912,"mtime":1606454159380,"results":"81","hashOfConfig":"69"},{"size":4165,"mtime":1607755103530,"results":"82","hashOfConfig":"69"},{"size":1364,"mtime":1606454190512,"results":"83","hashOfConfig":"69"},{"size":486,"mtime":1609142661070,"results":"84","hashOfConfig":"69"},{"size":799,"mtime":1609675849180,"results":"85","hashOfConfig":"69"},{"size":1738,"mtime":1610143362995,"results":"86","hashOfConfig":"69"},{"size":1140,"mtime":1609133131410,"results":"87","hashOfConfig":"69"},{"size":1987,"mtime":1609580039606,"results":"88","hashOfConfig":"69"},{"size":1073,"mtime":1607514171901,"results":"89","hashOfConfig":"69"},{"size":6387,"mtime":1610147066034,"results":"90","hashOfConfig":"69"},{"size":3765,"mtime":1610294648136,"results":"91","hashOfConfig":"69"},{"size":3699,"mtime":1609581895696,"results":"92","hashOfConfig":"69"},{"size":8604,"mtime":1609573938493,"results":"93","hashOfConfig":"69"},{"size":60401,"mtime":1607190803281,"results":"94","hashOfConfig":"69"},{"size":122,"mtime":1606370107139,"results":"95","hashOfConfig":"69"},{"size":3920,"mtime":1609921021483,"results":"96","hashOfConfig":"69"},{"size":5584,"mtime":1609146404772,"results":"97","hashOfConfig":"69"},{"size":11910,"mtime":1610000773748,"results":"98","hashOfConfig":"69"},{"size":488,"mtime":1609576254339,"results":"99","hashOfConfig":"69"},{"size":446,"mtime":1609522286567,"results":"100","hashOfConfig":"69"},{"size":628,"mtime":1608877808752,"results":"101","hashOfConfig":"69"},{"size":2843,"mtime":1609522286567,"results":"102","hashOfConfig":"69"},{"size":24386,"mtime":1609999983903,"results":"103","hashOfConfig":"69"},{"size":168,"mtime":1608704715747,"results":"104","hashOfConfig":"69"},{"size":2704,"mtime":1609576254339,"results":"105","hashOfConfig":"69"},{"size":1558,"mtime":1609922098723,"results":"106","hashOfConfig":"69"},{"size":4252,"mtime":1609522286583,"results":"107","hashOfConfig":"69"},{"size":1801,"mtime":1608877808752,"results":"108","hashOfConfig":"69"},{"size":629,"mtime":1609522286567,"results":"109","hashOfConfig":"69"},{"size":570,"mtime":1609921021483,"results":"110","hashOfConfig":"69"},{"size":534,"mtime":1610001278747,"results":"111","hashOfConfig":"69"},{"size":602,"mtime":1609584563190,"results":"112","hashOfConfig":"69"},{"size":2867,"mtime":1609579092086,"results":"113","hashOfConfig":"69"},{"size":425,"mtime":499162500000,"results":"114","hashOfConfig":"69"},{"size":462,"mtime":1607599504457,"results":"115","hashOfConfig":"69"},{"size":2922,"mtime":1609739010608,"results":"116","hashOfConfig":"69"},{"size":486,"mtime":1609098565637,"results":"117","hashOfConfig":"69"},{"size":565,"mtime":1608877808752,"results":"118","hashOfConfig":"69"},{"size":485,"mtime":1608877808752,"results":"119","hashOfConfig":"69"},{"size":473,"mtime":1610001057564,"results":"120","hashOfConfig":"69"},{"size":623,"mtime":1608877808752,"results":"121","hashOfConfig":"69"},{"size":632,"mtime":1609585155816,"results":"122","hashOfConfig":"69"},{"size":599,"mtime":1609738888992,"results":"123","hashOfConfig":"69"},{"size":998,"mtime":1608873807459,"results":"124","hashOfConfig":"69"},{"size":3846,"mtime":1609743181410,"results":"125","hashOfConfig":"69"},{"size":463,"mtime":1608877808752,"results":"126","hashOfConfig":"69"},{"size":497,"mtime":1608877808752,"results":"127","hashOfConfig":"69"},{"size":686,"mtime":1607244271013,"results":"128","hashOfConfig":"69"},{"size":571,"mtime":1609740827153,"results":"129","hashOfConfig":"69"},{"size":545,"mtime":1610143363000,"results":"130","hashOfConfig":"69"},{"size":334,"mtime":1609522965160,"results":"131","hashOfConfig":"69"},{"size":2029,"mtime":1609829943548,"results":"132","hashOfConfig":"69"},{"size":1617,"mtime":1609741050008,"results":"133","hashOfConfig":"69"},{"size":1467,"mtime":1607671026923,"results":"134","hashOfConfig":"69"},{"size":5456,"mtime":1609930120167,"results":"135","hashOfConfig":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"139"},"11xn261",{"filePath":"140","messages":"141","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"139"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"139"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"139"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"139"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"157"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"139"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"150"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"139"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"139"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"139"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"139"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"139"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"150"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"139"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"139"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\tasks\\task-new.component.tsx",["295","296","297","298","299","300","301"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { color, common } from '../../../styles/theme';\r\n\r\nimport { TaskDetail } from '../../../domain/task-detail'\r\nimport { TaskStatus, TaskPriority, ConstObjectToSelectOptionsArray } from '../../../domain/task-definitions'\r\nimport { addTask } from '../../../application/addTask'\r\nimport { getTask } from '../../../application/getTask'\r\nimport { updateTask } from '../../../application/updateTask'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { FaCheck, FaTimes, FaRedo} from 'react-icons/fa'\r\nimport { Spinner } from '../common/spinner'\r\nimport { BlockContainer, BlockHeaderComponent} from '../common/block'\r\nimport { SyncStateContext} from '../../../application/contexts/dbSyncContext'\r\n\r\nimport { FormBuilder } from '../common/form/form'\r\nimport { isValidDateTime, dateToFormattedDate, formattedDateToISOString } from '../../../../lib/date.utils'\r\n\r\nimport { mapTaskApiTocomponent } from '../../../application/dtos/taskApiToComponent.dto'\r\n\r\nconst emptyTask: TaskDetail = {\r\n    id: '',\r\n    title: '',\r\n    description: '',    \r\n    parent: '',    \r\n    createdDate: '',\r\n    limitDate: '',\r\n    author: '',\r\n    authorId: '',\r\n    status: TaskStatus.pending.value,\r\n    priority: TaskPriority.low.value,\r\n    tags: []\r\n}\r\n\r\n\r\n  const ParentTaskReference = styled(Link)`\r\n        display: flex;\r\n        background-color: ${color.semiLightGrey};\r\n        padding: 1rem;\r\n        margin: 1rem;\r\n        color: ${color.black} !important;\r\n        border-style: solid;\r\n        border-width: 1px;\r\n        boder-color: ${color.blue};\r\n        ${common.roundedCorners()};        \r\n  `\r\n\r\n  export interface TaskProps {\r\n    taskid: string,\r\n}\r\n\r\nexport const TaskNewComponent = (props) => {\r\n    let { taskid } = useParams<TaskProps>()\r\n\r\n    const syncCtx = React.useContext(SyncStateContext)\r\n    const {setSync} = syncCtx\r\n    \r\n    const [submitSuccess, setSubmitSuccess] = React.useState(null)\r\n    const [submitError, setSubmitError] = React.useState<Error | null>(null)\r\n    const [mode, setMode] = React.useState(props.mode || 'new')\r\n    const [task, setTask] = React.useState<TaskDetail | null>(null)\r\n    const [error, setError] = React.useState<Error | null>(null)\r\n    const [loading, setLoading] = React.useState<boolean>(false)\r\n    const [title, setTitle] = React.useState<string>('Nueva tarea')\r\n    const [parentTask, setParentTask] = React.useState<TaskDetail | null>(null)\r\n    \r\n    React.useEffect(()=> {\r\n        if(mode === 'edit') setTitle('Editar tarea')\r\n        else if(mode === 'child') setTitle('Nueva subtarea')\r\n        else setTitle('Nueva tarea')\r\n    },[mode])\r\n\r\n    React.useEffect(()=> {   \r\n        let cancelled = false    \r\n        if(taskid){\r\n            setLoading(true)\r\n            getTask(taskid)\r\n            .then(\r\n                (result) => { \r\n                    if(!cancelled){ \r\n                        if(result.hasError){\r\n                            setError(new Error(result.error))\r\n                            setTask(null)\r\n                        }else{\r\n                            if(mode === 'edit'){\r\n                                setTask(mapTaskApiTocomponent(result.data.task)) \r\n                            }else{\r\n                                setParentTask(mapTaskApiTocomponent(result.data.task))\r\n                                let newTask = Object.assign({},emptyTask)\r\n                                newTask.parent = result.data.task.id\r\n                                setTask(newTask)\r\n                            }\r\n                            setError(null)\r\n                            setSubmitError(null)\r\n                        }\r\n                    \r\n                        setLoading(false) \r\n                    }\r\n                },\r\n                (error) => {\r\n                    setSubmitSuccess(null)\r\n                    setSubmitError(null)\r\n                    setError(error)\r\n                    setTask(null)\r\n                    setLoading(false)\r\n                }\r\n            )        \r\n        }else{\r\n            setTask(emptyTask)\r\n        }  \r\n        return () => {\r\n            setTask(null); \r\n            cancelled = true   \r\n        } \r\n    },[])\r\n\r\n    \r\n    const statusItems = ConstObjectToSelectOptionsArray(TaskStatus)\r\n    const priorityItems = ConstObjectToSelectOptionsArray(TaskPriority)\r\n\r\n    let formItems = \r\n        [\r\n            {\r\n                type: 'text',\r\n                id: 'title',\r\n                label: 'Título'\r\n            },\r\n            {\r\n                type: 'text',\r\n                id: 'description',\r\n                label: 'Descripción'\r\n            },\r\n            {\r\n                type: 'text',\r\n                id: 'author',\r\n                label: 'Autor'\r\n            },\r\n            {\r\n                type: 'date2',\r\n                id: 'limitDate',\r\n                label: 'Fecha límite'\r\n            },\r\n            {\r\n                type: 'select',\r\n                id: 'status',\r\n                label: 'Estado',\r\n                selOptions: statusItems\r\n            },\r\n            {\r\n                type: 'select',\r\n                id: 'priority',\r\n                label: 'Prioridad',\r\n                selOptions: priorityItems\r\n            },            \r\n            {\r\n                type: 'buttons',\r\n                buttons: [\r\n                    {        \r\n                        id: 'btnSubmit',\r\n                        type: 'submit',\r\n                        icon: FaCheck,\r\n                        label: 'Guardar',\r\n                        className: 'form-button-submit button-icon'\r\n                    },\r\n                    {        \r\n                        id: 'btnReset',\r\n                        type: 'reset',\r\n                        icon: FaRedo,\r\n                        label: 'Reiniciar',\r\n                        className: 'form-button-submit button-icon'\r\n                    },                    \r\n                    {\r\n                        id: 'cancelBtn',\r\n                        type: 'link',\r\n                        route: taskid ? `/tasks/${taskid}` : '/tasks',\r\n                        icon: FaTimes,\r\n                        label: 'Cancelar',\r\n                        className: 'form-button-cancel button-icon'\r\n                    }\r\n                ]\r\n            }            \r\n        ]\r\n        const validate = (values) => {\r\n            const errors : Partial<TaskDetail> = {}\r\n                        \r\n            if(!values.title){                        \r\n                errors.title = 'Campo obligatorio'\r\n            }                    \r\n            if(!values.author){\r\n                errors.author = 'Campo obligatorio'\r\n            }\r\n            if(!values.status){\r\n                errors.status = 'Campo obligatorio'\r\n            }\r\n            if(!values.priority){\r\n                errors.priority = 'Campo obligatorio'\r\n            }\r\n            if(values.limitDate && !isValidDateTime(values.limitDate)){\r\n                errors.limitDate = 'Formato de fecha y hora no válido'\r\n            }\r\n           \r\n            return errors\r\n        }\r\n        const onSubmit = (values: TaskDetail, helpers) => {\r\n            setLoading(true)\r\n            console.log(values)\r\n            if(mode === 'new' || mode=='child'){\r\n                addTask(values)\r\n                    .then(                            \r\n                        (result) => {\r\n                            if(!result.hasError){\r\n                                setSubmitSuccess(result.data.task)\r\n                                setSubmitError(null)\r\n                                helpers.resetForm({})\r\n                                setSync({sync: false})\r\n                            }else{\r\n                                setSubmitSuccess(null);\r\n                                setSubmitError(new Error(result.error));                                      \r\n                            }\r\n                            helpers.setSubmitting(false); \r\n                            setLoading(false)\r\n                        },\r\n                        (error) => {\r\n                            console.log(error)\r\n                            helpers.setSubmitting(false);\r\n                            setSubmitSuccess(null);\r\n                            setSubmitError(error);\r\n                            setLoading(false)\r\n                        }\r\n                    )\r\n            }else if(mode === 'edit'){\r\n                updateTask(values)\r\n                    .then(                            \r\n                        (result) => {\r\n                            if(!result.hasError){                                        \r\n                                setSubmitSuccess(result.data.task); \r\n                                setTask(null)                                     \r\n                                setTask(result.data.task)                                        \r\n                                setSubmitError(null);\r\n                                setSync({sync: false})\r\n                            }else{\r\n                                setSubmitSuccess(null);\r\n                                setSubmitError(new Error(result.error));                                      \r\n                            }\r\n                            helpers.setSubmitting(false); \r\n                            setLoading(false)\r\n                        },\r\n                        (error) => {\r\n                            console.log(error)\r\n                            helpers.setSubmitting(false);\r\n                            setSubmitSuccess(null);\r\n                            setSubmitError(error);\r\n                            setLoading(false)\r\n                        }\r\n                    )\r\n            }      \r\n        }\r\n    \r\n    return (        \r\n        <BlockContainer> \r\n            <BlockHeaderComponent \r\n                title={title}\r\n            />  \r\n            {loading ? <Spinner /> : ''}            \r\n            {submitSuccess &&                \r\n                <div aria-label='success-message' className='message-success'>                    \r\n                    La {mode=='child' ? 'subtarea' : 'tarea'} <Link to={'/tasks/'+ submitSuccess.id}>'{submitSuccess.title}'</Link> ha sido {mode === 'new' ? 'creada':'editada'} con éxito.\r\n                </div>  \r\n            }\r\n            {submitError &&\r\n                <div aria-label='error-message' className='message-error'>{submitError.message}</div>\r\n            }\r\n            {parentTask &&\r\n                <ParentTaskReference to={`/tasks/${parentTask.id}`}>\r\n                    Parent: {parentTask.title}\r\n                </ParentTaskReference>\r\n            }\r\n            {task &&\r\n                <FormBuilder \r\n                    key = \"newTaskForm\"\r\n                    formView = \"form\"\r\n                    formItems = {formItems}\r\n                    initValues = {task}\r\n                    validation = {validate}\r\n                    onSubmit = {onSubmit}\r\n                />\r\n            }                \r\n            \r\n        </BlockContainer>\r\n    )\r\n}",["302","303"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-sequence.component.tsx",["304","305","306","307","308","309","310"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\job\\job-new.component.tsx",["311","312","313","314"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { FaCheck, FaTimes } from 'react-icons/fa'\r\n\r\nimport { Worklog } from '../../../domain/worklog'\r\nimport { Job } from '../../../domain/job'\r\nimport { TaskDetail, TaskObject } from '../../../domain/task'\r\nimport { FormBuilder } from '../common/form/form'\r\nimport { isValidDateTime } from '../../../../lib/date.utils'\r\nimport { BlockContainer, BlockHeaderComponent} from '../common/block'\r\nimport { Spinner } from '../common/spinner'\r\nimport { addJob } from 'src/front/application/addJob'\r\nimport { updateJob } from 'src/front/application/updateJob'\r\nimport { SyncStateContext} from '../../../application/contexts/dbSyncContext'\r\nimport { mapApiJobToComponent } from '../../../application/dtos/jobApiToComponent.dto'\r\nimport { isEmpty } from 'lodash'\r\nimport { TaskListComponent } from '../tasks/task-list.component'\r\nimport { getTask } from 'src/front/application/getTask'\r\n\r\nconst emptyJob: Job = {    \r\n        id: '',\r\n        task: '',\r\n        worklog: '',\r\n        title: '',\r\n        description: '',\r\n        startDatetime: '',\r\n        endDatetime: '',\r\n        type: '',\r\n        tags: []    \r\n}\r\n\r\nconst SelectWidget = styled.div`\r\n    position: absolute;\r\n    z-index: 9999;\r\n    background-color: rgba(0,0,0,0.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items:center;\r\n`\r\n\r\nexport const JobNewComponent = (props) => {\r\n    const syncCtx = React.useContext(SyncStateContext)\r\n    const {setSync} = syncCtx\r\n\r\n    const [worklog, setWorklog] = React.useState<Worklog>(props.worklog)\r\n    const [task, setTask] = React.useState<TaskDetail>(null)\r\n    const [job, setJob] = React.useState<Job>(null)\r\n    const [loading, setLoading] = React.useState<boolean>(false)\r\n    const [title, setTitle] = React.useState<string>('Nuevo trabajo')\r\n    const [submitError, setSubmitError] = React.useState<Error | null>(null)    \r\n    const [mode, setMode] = React.useState(props.mode || 'new')\r\n\r\n    React.useEffect(()=> {     \r\n        if(props.job){\r\n            if(!isEmpty(props.job.task)){\r\n                setLoading(true)\r\n                getTask(props.job.task).then(\r\n                    result => {\r\n                        setLoading(false)\r\n                        if(!result.hasError){\r\n                            setTask(result.data.task)\r\n                        }else{\r\n                            setTask(null)\r\n                            console.log(result.error)\r\n                        }\r\n                        setJob(mapApiJobToComponent(props.job))\r\n                        setMode('edit')                                           \r\n                    },\r\n                    error => {\r\n                        setLoading(false)\r\n                        console.log(error)\r\n                    }\r\n                )\r\n            }else{\r\n                setJob(mapApiJobToComponent(props.job))\r\n                setMode('edit')  \r\n            }\r\n        }else{\r\n            setJob(emptyJob)\r\n            setMode('new')\r\n        }       \r\n    },[])\r\n\r\n    React.useEffect(()=> {\r\n        if(mode === 'edit'){\r\n            setTitle('Editar trabajo')\r\n        } else {\r\n            setTitle('Nuevo trabajo')\r\n        }\r\n    },[mode])\r\n    \r\n    const taskSelectHandler = (task: TaskDetail) => {\r\n        return({\r\n            value: task.id,\r\n            label: task.title\r\n        })\r\n    }\r\n\r\n    let formItems = [\r\n        {\r\n            type: 'text',\r\n            id: 'title',\r\n            label: 'Título'\r\n        },\r\n        {\r\n            id: 'task',\r\n            type: 'selectFromComponent',\r\n            label: 'Tarea',\r\n            buttonLabel: 'Seleccione una tarea',\r\n            component: TaskListComponent,\r\n            resultHandler: taskSelectHandler,\r\n            selectedLabel: task ? task.title : ''\r\n        },\r\n        {\r\n            type: 'date2',\r\n            id: 'startDatetime',\r\n            label: 'Inicio'\r\n        },\r\n        {\r\n            type: 'date2',\r\n            id: 'endDatetime',\r\n            label: 'Fin'\r\n        },\r\n        {\r\n            type: 'buttons',\r\n            buttons: [\r\n                {        \r\n                    id: 'submitBtn',\r\n                    type: 'submit',\r\n                    icon: FaCheck,\r\n                    label: 'Guardar',\r\n                    className: 'form-button-submit button-icon'\r\n                },\r\n                {\r\n                    id: 'cancelBtn',\r\n                    type: 'button',\r\n                    onClick: props.cancel,\r\n                    icon: FaTimes,\r\n                    label: 'Cancelar',\r\n                    className: 'form-button-cancel button-icon'\r\n                }\r\n            ]\r\n        }            \r\n     ]\r\n\r\n     const validate = (values) => {\r\n        const errors : Partial<Job> = {}\r\n        \r\n        if(!values.startDatetime){\r\n            errors.startDatetime = 'Campo obligatorio'\r\n        }else if(!isValidDateTime(values.startDatetime)){\r\n            errors.startDatetime = 'Formato de fecha y hora no válido'\r\n        }\r\n       \r\n        if(values.strtDatetime && !isValidDateTime(values.startDatetime)){\r\n            errors.startDatetime = 'Formato de fecha y hora no válido'\r\n        }\r\n\r\n        return errors\r\n    }\r\n    const onSubmit = (values: Job, helpers) => {\r\n        values.worklog = worklog.id\r\n        console.log(values)\r\n        \r\n        setLoading(true)\r\n        if(mode === 'new'){\r\n            addJob(values).then(\r\n                (result) => {\r\n                    helpers.setSubmitting(false); \r\n                    setLoading(false)\r\n\r\n                    if(!result.hasError){    \r\n                        setSync({sync: false})                             \r\n                        setSubmitError(null)\r\n                        helpers.resetForm({})\r\n                        props.submit()\r\n                    }else{\r\n                        setSubmitError(new Error(result.error));                                      \r\n                    }                \r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                    helpers.setSubmitting(false);\r\n                    setSubmitError(error);\r\n                    setLoading(false)\r\n                }\r\n            )\r\n        }else if(mode === 'edit'){\r\n            updateJob(values).then(\r\n                (result) => {\r\n                    helpers.setSubmitting(false); \r\n                    setLoading(false)\r\n                    console.log(result)\r\n                    if(!result.hasError){    \r\n                        setSync({sync: false})                             \r\n                        setSubmitError(null)\r\n                        helpers.resetForm({})\r\n                        props.submit()\r\n                    }else{\r\n                        setSubmitError(new Error(result.error));                                      \r\n                    }                \r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                    helpers.setSubmitting(false);\r\n                    setSubmitError(error);\r\n                    setLoading(false)\r\n                }\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <BlockContainer>            \r\n            <BlockHeaderComponent \r\n                title={title}\r\n            />  \r\n            {loading ? <Spinner /> : ''}\r\n\r\n            {submitError &&\r\n                <div aria-label='error-message' className='message-error'>{submitError.message}</div>\r\n            }\r\n            \r\n            {job &&\r\n                <FormBuilder \r\n                    key = \"newJobForm\"\r\n                    formView = \"form\"\r\n                    formItems = {formItems}\r\n                    initValues = {job}\r\n                    validation = {validate}\r\n                    onSubmit = {onSubmit}\r\n                />\r\n            }\r\n        \r\n        </BlockContainer>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-grouped.component.tsx",["315","316","317"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-detail.component.tsx",["318","319","320","321","322","323","324"],"import React, { Children } from 'react'\r\nimport styled from 'styled-components'\r\nimport { color, common } from '../../../styles/theme'\r\nimport { useParams} from 'react-router-dom'\r\nimport { Worklog, WorklogObject } from '../../../domain/worklog'\r\nimport { getWorklog } from '../../../application/getWorklog'\r\nimport { deleteWorklog } from '../../../application/deleteWorklog'\r\nimport { Spinner } from '../common/spinner'\r\nimport { BlockActions } from '../common/block-actions'\r\nimport { FaEdit, FaTrashAlt, FaPlus } from 'react-icons/fa'\r\nimport { Modal } from '../common/modal'\r\nimport { Link } from 'react-router-dom'\r\nimport { BlockContainer, BlockHeaderComponent } from '../common/block'\r\nimport { WorklogSequence } from './worklog-sequence.component'\r\nimport { WorklogGrouped } from './worklog-grouped.component'\r\nimport { SyncStateContext} from '../../../application/contexts/dbSyncContext'\r\nimport { elapsedTime, formatElapsedTime, ISOStringToFormatedDate } from '../../../../lib/date.utils'\r\n\r\nconst WorklogDetailContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`\r\nconst WorklogDetailKey = styled.div`\r\n    font-weight: bold;\r\n    color: ${color.black};\r\n    flex-basis: 10rem;\r\n`\r\nconst WorklogDetailValue = styled.div`\r\n    color: ${color.black};\r\n    white-space: nowrap;\r\n`\r\n\r\nconst WorklogGroupedContainer = styled.div`\r\n    width: 50%;\r\n    padding: 0 1rem;\r\n`\r\nconst WorklogGroupedTitle = styled.div`\r\n    padding: 0.5rem 0;\r\n    font-weight: bold;\r\n    color: #000;\r\n    font-size: 1.2rem;\r\n`\r\nconst WorklogDetailGrouped = styled(WorklogGrouped)`\r\n`\r\n\r\nconst WorklogDetailFields = styled.ul`\r\n    width: 50%;\r\n`\r\nconst WorklogDetailItem = styled.li`\r\n    display: flex;\r\n    flex-direction: vertical;\r\n    margin: 1rem;\r\n`\r\n\r\nconst ErrorMessage = styled.div`\r\n    background-color: ${color.lightRed};\r\n    padding: 1rem;\r\n    text-align: center;\r\n    color: ${color.white};\r\n    margin: 0.5rem;\r\n`\r\n\r\nconst WorklogTagsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    gap: 0.5rem;\r\n\r\n    & div{\r\n        display: inline-flex;\r\n        background-color: rgba(0,0,0,0.7);\r\n        color: ${color.white};        \r\n        ${common.roundedCorners()};\r\n        padding: 0.5rem;\r\n    }\r\n`\r\n\r\nexport interface WorklogProps {\r\n    worklogid: string,\r\n}\r\nexport const WorklogDetailComponent = (props) => {\r\n    let { worklogid } = useParams<WorklogProps>()\r\n    const syncCtx = React.useContext(SyncStateContext)\r\n    const {setSync} = syncCtx\r\n\r\n    const [worklog, setWorklog] = React.useState<WorklogObject | null>(null)        \r\n    const [error, setError] = React.useState<Error | null>(null)\r\n    const [deleteSuccess, setDeleteSuccess] = React.useState<string | null>(null)\r\n    const [loading, setLoading] = React.useState<boolean>(false)\r\n    const [actions, setActions] = React.useState<Array<any>>([])\r\n    const [isOpened, setOpened] = React.useState(false)\r\n    const [confirmedDelete, setConfirmedDelete ] = React.useState<boolean>(false)\r\n    \r\n    const confirmDelete = () =>{\r\n        openModal()        \r\n    }\r\n    const handleDelete = () => {\r\n        setOpened(false)\r\n        setLoading(true)\r\n        setConfirmedDelete(true)   \r\n    }\r\n\r\n    const childHandler = () => {\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let cancelled = false\r\n        if(confirmedDelete){\r\n            deleteWorklog(worklogid)\r\n            .then(\r\n                result => {\r\n                    if(!cancelled){\r\n                        if(!result.hasError){\r\n                            setSync({sync: false})\r\n                            setDeleteSuccess('El parte se ha eliminado con éxito')\r\n                        }else{\r\n                            setError(new Error('Ha ocurrido un error al eliminar el parte.'))\r\n                        }\r\n                        setLoading(false)\r\n                    }\r\n                },\r\n                error => {\r\n                    console.log(\"Error: \", error)\r\n                    setError(new Error('Ha ocurrido un error al eliminar el parte.'))\r\n                    setLoading(false)\r\n                }\r\n            )\r\n        }\r\n\r\n        return () => cancelled = true;\r\n    },[confirmedDelete])\r\n\r\n    const closeModal = () => {  setOpened(false)}\r\n    const openModal = () => { setOpened(true)}\r\n\r\n    let actionItems = [\r\n        {\r\n            icon: FaEdit,\r\n            text: 'Editar',\r\n            route: `/worklogs/edit/${worklogid}`,\r\n            type: 'link'\r\n        },\r\n        {\r\n            icon: FaTrashAlt,\r\n            text: 'Borrar',\r\n            type: 'button',\r\n            handler: confirmDelete\r\n        },\r\n        {\r\n            icon: FaPlus,\r\n            text: 'Añadir trabajo',\r\n            route: `/worklog/new/${worklogid}`,\r\n            type: 'link'\r\n        }\r\n    ]\r\n\r\n    React.useEffect(() => {\r\n        let cancelled = false;\r\n        setActions(actionItems)\r\n        setLoading(true)\r\n        getWorklog(worklogid)\r\n            .then(\r\n                (result) => {\r\n                    if(!cancelled){\r\n                        if(result.hasError){\r\n                            setError(new Error(result.error))\r\n                            setWorklog(null)\r\n                        }else{\r\n                            setWorklog(result.data) \r\n                            setError(null)\r\n                        }\r\n                        \r\n                        setLoading(false)  \r\n                    }\r\n                },\r\n                (error) => {\r\n                    if(!cancelled){\r\n                        setError(error)\r\n                        setWorklog(null)\r\n                        setLoading(false)\r\n                    }\r\n                }\r\n            )\r\n        \r\n            return () => cancelled = true\r\n    },[worklogid])\r\n\r\n    React.useEffect(() => {\r\n        console.log(\"WL Detail\",worklog)\r\n    },[worklog])\r\n    \r\n    return (        \r\n        <BlockContainer>\r\n            <Modal \r\n                title=\"Eliminar tarea\" \r\n                isOpened={isOpened} \r\n                onClose={closeModal}\r\n                content=\"Esta acción es irreversible. ¿Desea continuar?\"\r\n                type=\"confirm\"\r\n                action={handleDelete} />\r\n            {loading ? <Spinner /> : ''}\r\n            <h3 className=\"section-title\">Detalle de parte</h3>\r\n            {deleteSuccess !== null ? \r\n                <div aria-label='success-message' className='message-success'>{deleteSuccess} <Link to={'/worklogs'}>Volver a la lista</Link></div>\r\n                :\r\n                <>\r\n                <BlockActions \r\n                    actions={actions}\r\n                />\r\n                {error !== null ?\r\n                    <ErrorMessage>{error.message}</ErrorMessage>\r\n                    :\r\n                    (worklog && worklog.worklog)?\r\n                    <>             \r\n                        <WorklogDetailContainer> \r\n                            <WorklogDetailFields>\r\n                                <WorklogDetailItem>\r\n                                    <WorklogDetailKey>Título:</WorklogDetailKey>\r\n                                    <WorklogDetailValue>{worklog.worklog.title}</WorklogDetailValue>\r\n                                </WorklogDetailItem>      \r\n                                <WorklogDetailItem>\r\n                                    <WorklogDetailKey>Creada:</WorklogDetailKey>\r\n                                    <WorklogDetailValue>{worklog.worklog.createdDate ? worklog.worklog.createdDate : '-'}</WorklogDetailValue>\r\n                                </WorklogDetailItem>\r\n                                <WorklogDetailItem>\r\n                                    <WorklogDetailKey>Inicio:</WorklogDetailKey>\r\n                                    <WorklogDetailValue>{worklog.worklog.startDatetime ? worklog.worklog.startDatetime : '-'}</WorklogDetailValue>\r\n                                </WorklogDetailItem>\r\n                                <WorklogDetailItem>\r\n                                    <WorklogDetailKey>Fin:</WorklogDetailKey>\r\n                                    <WorklogDetailValue>{worklog.worklog.endDatetime ? worklog.worklog.endDatetime : '-'}</WorklogDetailValue>\r\n                                </WorklogDetailItem>\r\n                                <WorklogDetailItem>\r\n                                    <WorklogDetailKey>Duración:</WorklogDetailKey>\r\n                                    <WorklogDetailValue>\r\n                                        {worklog.worklog.endDatetime ? \r\n                                            formatElapsedTime(\r\n                                                elapsedTime( \r\n                                                    worklog.worklog.startDatetime, \r\n                                                    worklog.worklog.endDatetime\r\n                                                )) \r\n                                            : \r\n                                            '-'\r\n                                            }\r\n                                    </WorklogDetailValue>\r\n                                </WorklogDetailItem>   \r\n                                <WorklogDetailItem>\r\n                                    <WorklogDetailKey>Tags:</WorklogDetailKey>\r\n                                    <WorklogDetailValue>\r\n                                    {worklog.worklog.tags.length ?\r\n                                        <WorklogTagsContainer>\r\n                                        {\r\n                                            worklog.worklog.tags.map((tag) => {\r\n                                                return <div key={tag}>{tag}</div>\r\n                                            })\r\n                                        }\r\n                                        </WorklogTagsContainer> \r\n                                        :\r\n                                        '-'\r\n                                    }               \r\n                                    </WorklogDetailValue>\r\n                                </WorklogDetailItem>\r\n                            </WorklogDetailFields>\r\n\r\n                            <WorklogGroupedContainer>\r\n                                <WorklogGroupedTitle>Resumen agrupado</WorklogGroupedTitle>\r\n                                <WorklogDetailGrouped worklogid={worklog.worklog.id}/>\r\n                            </WorklogGroupedContainer>\r\n                        </WorklogDetailContainer>       \r\n\r\n                        {worklog &&                            \r\n                            <WorklogSequence worklog={worklog} />                            \r\n                        }                      \r\n                    </>\r\n                        \r\n                    :   \r\n                        <div></div>\r\n                }\r\n                </>\r\n            }    \r\n                \r\n        </BlockContainer>\r\n    )   \r\n}",["325","326"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\index.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\styles\\globalStyles.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\browser.js",[],["327","328"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\browserdb.ts",["329","330","331","332","333","334","335"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\App.tsx",["336","337"],"import React from 'react';\r\nimport './App.css';\r\nimport {  \r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { SyncStateContext } from './application/contexts/dbSyncContext'\r\n\r\nimport { Spinner } from './infrastructure/components/common/spinner'\r\nimport { Home } from './infrastructure/views/home.component'\r\nimport { Header } from './infrastructure/components/common/header'\r\nimport { TasksView } from './infrastructure/views/tasks.view.component'\r\nimport { WorklogView } from './infrastructure/views/worklog.view.component'\r\nimport { SetupApp } from './infrastructure/views/setup-app.component'\r\nimport { Settings } from './infrastructure/views/settings.component'\r\n\r\nimport { existsDb } from './application/existsDatabase'\r\n\r\nimport { RunningWorklogsProvider } from '../front/application/contexts/runningWorklogsContext'\r\nimport { RunningWorklogsWidget } from './infrastructure/components/worklog/worklog-running.component'\r\n\r\n\r\nfunction App() {\r\n  const syncCtx = React.useContext(SyncStateContext)\r\n  const {sync, setSync} = syncCtx\r\n  const [loading, setLoading] = React.useState<boolean>(false)\r\n  \r\n  React.useEffect(()=>{\r\n      setLoading(true)\r\n      existsDb().then(\r\n          result => {\r\n              if(!result.hasError){\r\n                  setSync({sync:true, existsDb: result.data})\r\n              }else{\r\n                  setSync({sync:true, existsDb: false})\r\n              }\r\n              setLoading(false)\r\n          },\r\n          error => {\r\n            console.log(error)\r\n            setSync({sync:true, existsDb: false})\r\n            setLoading(false)\r\n          }\r\n      )\r\n  }, [])\r\n\r\n  return (\r\n    <RunningWorklogsProvider>\r\n    \r\n      {loading ? <Spinner /> : ''}     \r\n\r\n      {!sync.existsDb ?\r\n        <SetupApp />\r\n      :\r\n        <>\r\n        <Header/>        \r\n        <Switch>\r\n            <Route path=\"/about\">\r\n              <About />\r\n            </Route>    \r\n            <Route path=\"/settings\">\r\n              <Settings />\r\n            </Route>           \r\n            <Route path=\"/tasks\">\r\n              <TasksView />\r\n            </Route>\r\n            <Route path=\"/worklogs\">\r\n              <WorklogView />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n        </Switch>\r\n        </>\r\n      }\r\n    </RunningWorklogsProvider>\r\n  );\r\n}\r\n\r\nfunction About() {\r\n  return <h2>About</h2>;\r\n}\r\n\r\nexport default App;\r\n","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\contexts\\dbSyncContext.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\tests\\mocks\\handlers.ts",["338","339","340","341","342","343"],"import { rest } from 'msw'\r\nimport taskData from './tasks.json'\r\nimport { TaskDetail, TaskObject } from '../../front/domain/task-detail'\r\nimport { Worklog, WorklogObject} from '../../front/domain/worklog'\r\nimport { Job, JobObject } from '../../front/domain/job'\r\nimport { isEmpty } from 'lodash'\r\nimport  {Datepicker}  from '../../lib/orzkDatepicker/datepicker'\r\nimport { ApiResponseBuilder, ApiResponse} from '../../api/domain/api-response'\r\n\r\nexport const handlers = [\r\n    rest.post('http://localhost:3000/api/tasks',(req, res, ctx) => {       \r\n        const filters : Partial<TaskDetail> = req.body ? JSON.parse(req.body as string) : {}\r\n         \r\n        if(filters.title === 'Hacer la compra'){ \r\n            const task: TaskDetail = {            \r\n                \"id\":\"1\",\r\n                \"parent\":\"\",\r\n                \"title\":\"Hacer la compra\",\r\n                \"description\": \"Comprar huevos, leche, cebollas\",\r\n                \"createdDate\": \"2020-11-10T11:45:00.000Z\",\r\n                \"limitDate\": \"2020-12-01T08:45:00.000Z\",\r\n                \"author\": \"Iñaki\",\r\n                \"authorId\": \"1\",\r\n                \"status\": \"1\",\r\n                \"priority\": \"3\",\r\n                \"tags\": [\"compra\",\"casa\",\"comida\"]            \r\n            }\r\n            const parentTask = null\r\n            const childTasks = []\r\n    \r\n            const taskObject : TaskObject= {\r\n                task: task,\r\n                parentTask: parentTask,\r\n                childTasks: childTasks\r\n            }\r\n\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,[taskObject],false))\r\n            )\r\n        }else if(filters.title === 'Tarea que no existe'){\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,[],false))\r\n            )\r\n        }else{ \r\n            let result :Array<TaskObject> = [\r\n                {\r\n                    task: {            \r\n                        \"id\":\"1\",\r\n                        \"parent\":\"\",\r\n                        \"title\":\"Hacer la compra\",\r\n                        \"description\": \"Comprar huevos, leche, cebollas\",\r\n                        \"createdDate\": \"2020-11-10T11:45:00.000Z\",\r\n                        \"limitDate\": \"2020-12-01T08:45:00.000Z\",\r\n                        \"author\": \"Iñaki\",\r\n                        \"authorId\": \"1\",\r\n                        \"status\": \"1\",\r\n                        \"priority\": \"3\",\r\n                        \"tags\": [\"compra\",\"casa\",\"comida\"]            \r\n                    },\r\n                    parentTask: null,\r\n                    childTasks: []\r\n                },\r\n                {\r\n                    task: {\r\n                        \"id\":\"2\",\r\n                        \"parent\":\"\",\r\n                        \"title\":\"KYB - ID 167: PET\",\r\n                        \"description\": \"Eliminar el retardo al imprimir etiquetas\",\r\n                        \"createdDate\": \"2020-10-02T09:30:00.000Z\",\r\n                        \"limitDate\": \"\",\r\n                        \"author\": \"Iñaki\",\r\n                        \"authorId\": \"1\",\r\n                        \"status\": \"1\",\r\n                        \"priority\": \"3\",\r\n                        \"tags\": [\"KYB\",\"PET\",\"ID-167\"]\r\n                    },\r\n                    parentTask: null,\r\n                    childTasks: []\r\n                }\r\n            ]\r\n            \r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,result,false))\r\n            )\r\n        }\r\n    }),\r\n    // Tarea inexistente\r\n    rest.get('http://localhost:3000/api/tasks/1111',(req, res, ctx) => {  \r\n        return res(\r\n            ctx.status(404, 'La tarea no existe'),\r\n            ctx.json(ApiResponseBuilder(200,{},true,'La tarea no existe'))\r\n        )         \r\n    }),\r\n    rest.get('http://localhost:3000/api/tasks/1',(req, res, ctx) => {          \r\n        const task: TaskDetail = {            \r\n            \"id\":\"1\",\r\n            \"parent\":\"\",\r\n            \"title\":\"Hacer la compra\",\r\n            \"description\": \"Comprar huevos, leche, cebollas\",\r\n            \"createdDate\": \"2020-11-10T11:45:00.000Z\",\r\n            \"limitDate\": \"2020-12-01T08:45:00.000Z\",\r\n            \"author\": \"Iñaki\",\r\n            \"authorId\": \"1\",\r\n            \"status\": \"1\",\r\n            \"priority\": \"3\",\r\n            \"tags\": [\"compra\",\"casa\",\"comida\"]            \r\n        }\r\n        const parentTask = null\r\n        const childTasks = []\r\n\r\n        const taskObject : TaskObject= {\r\n            task: task,\r\n            parentTask: parentTask,\r\n            childTasks: childTasks\r\n        }\r\n        \r\n        return res(\r\n            ctx.status(200),\r\n            ctx.json(ApiResponseBuilder(200,taskObject,false))\r\n        )        \r\n    }),\r\n    rest.post('http://localhost:3000/api/tasks/add',(req,res,ctx) =>{\r\n        const task: TaskDetail = req.body as TaskDetail        \r\n        \r\n        task.createdDate = \"2000-01-01T00:00:00+0200\"\r\n        const taskresponse: TaskObject = {\r\n            task: task,\r\n            childTasks: [],\r\n            parentTask: null\r\n        }\r\n        if(task.description === 'success'){\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,taskresponse,false))\r\n            )\r\n        }else if(task.description == 'error'){\r\n            return res(\r\n                ctx.status(500),\r\n                ctx.json(ApiResponseBuilder(500,taskresponse,true,'Error al crear la tarea'))\r\n            )\r\n        }\r\n        \r\n    }),\r\n    \r\n    rest.put('http://localhost:3000/api/tasks/update', (req, res, ctx) => {\r\n        \r\n        const taskobject: TaskObject = {\r\n            task: null,\r\n            childTasks: [],\r\n            parentTask: null\r\n        }\r\n        taskobject.task = req.body as TaskDetail                                     \r\n        \r\n        return res(                \r\n            ctx.status(200),\r\n            ctx.json(ApiResponseBuilder(200,taskobject,false))            \r\n        )\r\n        \r\n    }),\r\n\r\n    rest.delete('http://localhost:3000/api/tasks/delete/1', (req,res,ctx) => {\r\n            const task: TaskDetail = {            \r\n                \"id\":\"1\",\r\n                \"parent\":\"\",\r\n                \"title\":\"Hacer la compra\",\r\n                \"description\": \"Comprar huevos, leche, cebollas\",\r\n                \"createdDate\": \"2020-11-10T10:45:01+0200\",\r\n                \"limitDate\": \"2020-12-01T10:45:01+0200\",\r\n                \"author\": \"Iñaki\",\r\n                \"authorId\": \"1\",\r\n                \"status\": \"1\",\r\n                \"priority\": \"3\",\r\n                \"tags\": [\"compra\",\"casa\",\"comida\"]            \r\n            }\r\n            \r\n            return res(\r\n                    ctx.status(200),\r\n                    ctx.json(ApiResponseBuilder(200,task,false))\r\n                )\r\n            \r\n        \r\n    }),\r\n\r\n    rest.post('http://localhost:3000/api/worklogs',(req, res, ctx) => {       \r\n        const filters : Partial<Worklog> = req.body ? JSON.parse(req.body as string) : {}\r\n        \r\n        if(filters.title === 'Compra 15-11-20'){\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,taskData.worklogs.filter((worklog)=>worklog.title === filters.title),false))\r\n            )\r\n        }else if(filters.title === 'Parte que no existe'){\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,[],false))\r\n            )\r\n        }else{\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,taskData.worklogs,false))\r\n            )        \r\n        }\r\n    }),\r\n\r\n    rest.get('http://localhost:3000/api/worklogs/1',(req, res, ctx) => {     \r\n        const worklog: Worklog = {            \r\n            \"id\":\"1\",\r\n            \"createdDate\": \"05/11/2020 08:00\",\r\n            \"startDatetime\":\"05/11/2020 09:00\",\r\n            \"endDatetime\":\"05/11/2020 16:30\",\r\n            \"title\":\"Compra 05-11-20\",\r\n            \"tags\": []\r\n        }\r\n        const childJobs: Array<JobObject> = [\r\n            // {\r\n            //     \"id\":\"1\",\r\n            //     \"worklog\":\"1\",\r\n            //     \"task\":\"1\",\r\n            //     \"startDatetime\":\"2020-11-05T08:00:00.000Z\",\r\n            //     \"endDatetime\":\"2020-11-05T09:30:00.000Z\",\r\n            //     \"title\":\"Carnicería\",\r\n            //     \"description\":\"Jamón serrano, pechugas de pollo\",\r\n            //     \"type\":\"Análisis\",\r\n            //     \"tags\": [\"Jamón serrano\", \"pechugas de pollo\"]\r\n            // },\r\n            // {\r\n            //     \"id\":\"2\",\r\n            //     \"worklog\":\"1\",\r\n            //     \"task\":\"1\",\r\n            //     \"startDatetime\":\"2020-11-05T09:30:00.000Z\",\r\n            //     \"endDatetime\":\"2020-11-05T10:30:00.000Z\",\r\n            //     \"title\":\"Frutería\",\r\n            //     \"description\":\"Manzanas, Plátanos, Mandarinas\",\r\n            //     \"type\":\"Análisis\",\r\n            //     \"tags\": [\"Manzanas\", \"Plátanos\", \"Mandarinas\"]\r\n            // }\r\n        ]\r\n\r\n        const worklogObject : WorklogObject= {\r\n            worklog: worklog,\r\n            childJobs: childJobs\r\n        }\r\n\r\n        return res(\r\n            ctx.status(200),\r\n            ctx.json(ApiResponseBuilder(200,worklogObject,false))\r\n        )        \r\n    }),\r\n\r\n    rest.get('http://localhost:3000/api/worklogs/1111',(req, res, ctx) => {  \r\n        return res(\r\n            ctx.status(404, 'El parte no existe'),\r\n            ctx.json(ApiResponseBuilder(200,{},true,'El parte no existe'))\r\n        )         \r\n    }),\r\n\r\n    rest.delete('http://localhost:3000/api/worklogs/delete/1', (req,res,ctx) => {\r\n        const worklog: Worklog = {            \r\n            \"id\":\"1\",\r\n            \"createdDate\": \"2020-11-05T07:00:00.000Z\",\r\n            \"startDatetime\":\"2020-11-05T08:00:00.000Z\",\r\n            \"endDatetime\":\"2020-11-05T15:30:00.000Z\",\r\n            \"title\":\"Compra 05-11-20\",\r\n            \"tags\": []\r\n        }\r\n        \r\n        return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,worklog,false))\r\n            )\r\n    }),\r\n\r\n    rest.post('http://localhost:3000/api/worklogs/add',(req,res,ctx) =>{\r\n        const worklog: Worklog = req.body as Worklog\r\n        \r\n        worklog.createdDate = \"2000-01-01T00:00:00+0200\"\r\n        const worklogresponse: WorklogObject = {\r\n            worklog: worklog,\r\n            childJobs: []\r\n        }\r\n        if(worklog.title === 'Parte success'){\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,worklogresponse,false))\r\n            )\r\n        }else if(worklog.title == 'Parte error'){\r\n            return res(\r\n                ctx.status(500),\r\n                ctx.json(ApiResponseBuilder(500,worklog,true,'Error al crear el parte'))\r\n            )\r\n        }        \r\n    }),\r\n\r\n    rest.put('http://localhost:3000/api/worklogs/update', (req, res, ctx) => {\r\n        \r\n        const worklogobject: WorklogObject = {\r\n            worklog: null,\r\n            childJobs: [],\r\n        }\r\n        worklogobject.worklog = req.body as Worklog         \r\n        \r\n        return res(                \r\n            ctx.status(200),\r\n            ctx.json(ApiResponseBuilder(200,worklogobject,false))            \r\n        )\r\n        \r\n    }),\r\n\r\n    rest.get('http://localhost:3000/api/db/exists', (req, res, ctx) => {\r\n        return res(\r\n            ctx.status(200),\r\n            ctx.json(ApiResponseBuilder(200,true,false))\r\n        )\r\n    }),\r\n/*\r\n    rest.get('http://localhost:3000/api/db/export', (req,res,ctx) => {\r\n        try{\r\n            const db: FileDownload = getTaskerRepository().exportDb()\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,db,false))\r\n            )\r\n        }catch(e){\r\n            return res(\r\n                ctx.status(500),\r\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\r\n            )\r\n        }\r\n    }),\r\n\r\n    rest.post('http://localhost:3000/api/db/import', (req,res,ctx) => {\r\n        try{\r\n            const dbfile = req.body ? req.body as Schema: null \r\n            const db: boolean = getTaskerRepository().importDb(dbfile)\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,db,false))\r\n            )\r\n        }catch(e){\r\n            return res(\r\n                ctx.status(500),\r\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\r\n            )\r\n        }\r\n    }),\r\n\r\n    rest.post('http://localhost:3000/api/db/new', (req,res,ctx) => {\r\n        try{\r\n            const db: boolean = getTaskerRepository().newDb()\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,db,false))\r\n            )\r\n        }catch(e){\r\n            return res(\r\n                ctx.status(500),\r\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\r\n            )\r\n        }\r\n    }),*/\r\n\r\n    rest.get('http://localhost:3000/api/db/synced', (req,res,ctx) => {\r\n        \r\n        return res(\r\n            ctx.status(200),\r\n             ctx.json(ApiResponseBuilder(200,true,false))\r\n        )\r\n        \r\n    })\r\n]","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\styles\\reset.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\styles\\theme.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\styles\\reboot.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\existsDatabase.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\contexts\\runningWorklogsContext.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\application\\taskerRepository.tsx",["344"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\views\\setup-app.component.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\header.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\views\\tasks.view.component.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\handlers\\worklogs.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\lib\\date.utils.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\db-sync.tsx",["345","346","347","348","349","350","351"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { color, common } from '../../styles/theme'\r\nimport { SyncStateContext } from '../../application/contexts/dbSyncContext'\r\nimport { exportDb } from '../../application/exportDatabase'\r\nimport { isSyncedDb } from '../../application/isSyncedDatabase'\r\nimport { FaSave } from 'react-icons/fa'\r\nimport { IconButton } from './common/icon-button'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst SyncWarningContainer = styled.div`\r\n    text-align: center;\r\n`\r\nconst ExportButton = styled.button`\r\n    ${common.roundedCorners('50%')};\r\n    border-style: solid;\r\n    border-width: 2px;\r\n    border-color: ${color.darkOrange};\r\n    color: ${color.darkOrange};\r\n    background-color: rgba(0,0,0,0);\r\n    animation-name: iconglow;\r\n    animation-duration: 2s;\r\n    animation-iteration-count: infinite;\r\n\r\n    @keyframes iconglow {\r\n        from {\r\n            color: ${color.darkOrange};\r\n            border-color: ${color.darkOrange};\r\n        }\r\n        to {\r\n            color: ${color.white};\r\n            border-color: ${color.white};\r\n        }\r\n    }\r\n`\r\n\r\nconst exportDB = () => {              \r\n    \r\n    exportDb().then(\r\n        (result) => {\r\n            if(!result.hasError){\r\n                let blob = new Blob([JSON.parse(result.data.blob)], { type: 'text/plain;charset=utf-8;' })\r\n                let exportedFilename = result.data.filename\r\n                \r\n                if (navigator.msSaveBlob) { // IE 10+\r\n                    navigator.msSaveBlob(blob, exportedFilename)\r\n                } else {\r\n                    var link = document.createElement('a')\r\n                    if (link.download !== undefined) { // feature detection\r\n                        // Browsers that support HTML5 download attribute\r\n                        var url = URL.createObjectURL(blob)\r\n                        link.setAttribute('href', url)\r\n                        link.setAttribute('download', exportedFilename)\r\n                        link.style.visibility = 'hidden'\r\n                        document.body.appendChild(link)\r\n                        link.click()\r\n                        document.body.removeChild(link)\r\n                    }\r\n                }\r\n            }else{\r\n                console.log(result.error)\r\n            }\r\n        },\r\n        (error) => {\r\n            console.log(error)\r\n        }\r\n    )\r\n}\r\n\r\nconst importDB = () => {\r\n\r\n}\r\n\r\nexport const DbSync = () => {\r\n    const syncCtx = React.useContext(SyncStateContext)\r\n    const {sync, setSync} = syncCtx\r\n    const [syncFail, setSyncFail] = React.useState<boolean>(false)\r\n  \r\n    React.useEffect(()=>{\r\n        setSync({sync:true})\r\n    },[])\r\n    \r\n    const handleExport = () => {\r\n        exportDB()\r\n        setSync({sync:true})\r\n    }\r\n    \r\n    React.useEffect(()=>{\r\n        isSyncedDb().then(\r\n            result => {\r\n                if(!result.hasError){\r\n                    if(sync.sync === true && result.data === false){\r\n                        setSync({sync: false})\r\n                    }\r\n                }else{\r\n                    console.log(result.error)\r\n                }\r\n            },\r\n            error => {\r\n                console.log(error)\r\n            }\r\n        )\r\n    },[sync])\r\n\r\n    return (\r\n        <>\r\n        {!sync.sync &&\r\n            <SyncWarningContainer>            \r\n                <ExportButton \r\n                    id='export'\r\n                    key='export'\r\n                    aria-label='export'\r\n                    onClick={handleExport}                   \r\n                ><FaSave /></ExportButton>\r\n            </SyncWarningContainer>\r\n        }\r\n        </>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-new.component.tsx",["352","353","354","355","356","357","358","359","360"]," import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { color, common } from '../../../styles/theme';\r\nimport { Worklog } from '../../../domain/worklog'\r\nimport { addWorklog } from '../../../application/addWorklog'\r\nimport { updateWorklog } from '../../../application/updateWorklog'\r\nimport { getWorklog } from '../../../application/getWorklog'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { FaCheck, FaTimes} from 'react-icons/fa'\r\nimport { Spinner } from '../common/spinner'\r\nimport { BlockContainer, BlockHeaderComponent} from '../common/block'\r\nimport { SyncStateContext} from '../../../application/contexts/dbSyncContext'\r\n\r\nimport { FormBuilder } from '../common/form/form'\r\n\r\nimport  {Datepicker}  from '../../../../lib/orzkDatepicker/datepicker'\r\nimport '../../../../lib/orzkDatepicker/datepicker.css'\r\nimport { isValidDateTime, dateToFormattedDate, formattedDateToISOString } from '../../../../lib/date.utils'\r\n\r\n\r\nconst emptyWorklog: Worklog = {\r\n    id: '',\r\n    title: '',\r\n    createdDate: '',    \r\n    startDatetime: '',\r\n    endDatetime: '',\r\n    tags: []\r\n}\r\n\r\n\r\nexport interface WorklogProps {\r\n    worklogid: string,\r\n}\r\n\r\nexport const WorklogNewComponent = (props) => {\r\n    let { worklogid } = useParams<WorklogProps>()\r\n    const syncCtx = React.useContext(SyncStateContext)\r\n    const {setSync} = syncCtx\r\n\r\n    const [submitSuccess, setSubmitSuccess] = React.useState(null)\r\n    const [submitError, setSubmitError] = React.useState<Error | null>(null)\r\n    const [mode, setMode] = React.useState(props.mode || 'new')\r\n    const [worklog, setWorklog] = React.useState<Worklog | null>(emptyWorklog)\r\n    const [error, setError] = React.useState<Error | null>(null)\r\n    const [loading, setLoading] = React.useState<boolean>(false)\r\n    const [title, setTitle] = React.useState<string>('Nuevo parte')\r\n    \r\n    let formItems = \r\n         [\r\n            {\r\n                type: 'text',\r\n                id: 'title',\r\n                label: 'Título'\r\n            },\r\n            {\r\n                type: 'date2',\r\n                id: 'startDatetime',\r\n                label: 'Fecha y hora de inicio'\r\n            },\r\n            {\r\n                type: 'buttons',\r\n                buttons: [\r\n                    {        \r\n                        id: 'submitBtn',\r\n                        type: 'submit',\r\n                        icon: FaCheck,\r\n                        label: 'Guardar',\r\n                        className: 'form-button-submit button-icon'\r\n                    },\r\n                    {\r\n                        id: 'cancelBtn',\r\n                        type: 'link',\r\n                        route: '/worklogs',\r\n                        icon: FaTimes,\r\n                        label: 'Cancelar',\r\n                        className: 'form-button-cancel button-icon'\r\n                    }\r\n                ]\r\n            }            \r\n         ]\r\n    \r\n    const validate = (values) => {\r\n        const errors : Partial<Worklog> = {}\r\n        if(!values.title){\r\n            errors.title = 'Campo obligatorio'\r\n        }   \r\n        \r\n        if(!values.startDatetime){\r\n            errors.startDatetime = 'Campo obligatorio'\r\n        }else if(!isValidDateTime(values.startDatetime)){\r\n            errors.startDatetime = 'Formato de fecha y hora no válido'\r\n        }\r\n       \r\n        return errors\r\n    }\r\n\r\n    const onSubmit = (values: Worklog, helpers) => {\r\n                        \r\n        setLoading(true)\r\n            if(mode === 'new'){\r\n                addWorklog(values)\r\n                .then(                            \r\n                    (result) => {\r\n                        if(!result.hasError){\r\n                            setSync({sync: false})\r\n                            setSubmitSuccess(result.data.worklog);                                        \r\n                            setSubmitError(null);\r\n                            helpers.resetForm({})\r\n                        }else{\r\n\r\n                            setSubmitSuccess(null);\r\n                            setSubmitError(new Error(result.error));                                      \r\n                        }\r\n                        helpers.setSubmitting(false); \r\n                        setLoading(false)\r\n                    },\r\n                    (error) => {\r\n                        console.log(error)\r\n                        helpers.setSubmitting(false);\r\n                        setSubmitSuccess(null);\r\n                        setSubmitError(error);\r\n                        setLoading(false)\r\n                    }\r\n                )\r\n            }else if(mode === 'edit'){\r\n                updateWorklog(values)\r\n                .then(                            \r\n                    (result) => {\r\n                        if(!result.hasError){              \r\n                            setSync({sync: false})                          \r\n                            setSubmitSuccess(result.data.worklog); \r\n                            setWorklog(null)                                     \r\n                            setWorklog(result.data.worklog)                                        \r\n                            setSubmitError(null);\r\n                        }else{\r\n                            setSubmitSuccess(null);\r\n                            setSubmitError(new Error(result.error));                                      \r\n                        }\r\n                        helpers.setSubmitting(false); \r\n                        setLoading(false)\r\n                    },\r\n                    (error) => {\r\n                        console.log(error)\r\n                        helpers.setSubmitting(false);\r\n                        setSubmitSuccess(null);\r\n                        setSubmitError(error);\r\n                        setLoading(false)\r\n                    }\r\n                )\r\n            }      \r\n    }\r\n\r\n    React.useEffect(()=> {\r\n        if(mode === 'edit'){\r\n            setTitle('Editar parte')\r\n        } else {\r\n            setTitle('Nuevo parte')\r\n        }\r\n    },[mode])\r\n\r\n    React.useEffect(()=> {          \r\n        let cancelled = false    \r\n        if(worklogid){       \r\n            setLoading(true)\r\n            getWorklog(worklogid)\r\n            .then(\r\n                (result) => { \r\n                    if(!cancelled){ \r\n                        if(result.hasError){\r\n                            setError(new Error(result.error))\r\n                            setWorklog(null)\r\n                        }else{\r\n                            if(mode === 'edit'){                      \r\n                                setWorklog(result.data.worklog) \r\n                            }else{                                \r\n                                setWorklog(emptyWorklog)\r\n                            }\r\n                            setError(null)\r\n                            setSubmitError(null)\r\n                        }\r\n                    \r\n                        setLoading(false) \r\n                    }\r\n                },\r\n                (error) => {\r\n                    console.log(\"error\",error)\r\n                    setSubmitSuccess(null)\r\n                    setSubmitError(null)\r\n                    setError(error)\r\n                    setWorklog(null)\r\n                    setLoading(false)\r\n                }\r\n            )        \r\n        }else{\r\n            setWorklog(emptyWorklog)\r\n        }  \r\n        return () => cancelled = true    \r\n    },[])\r\n\r\n    return (        \r\n        <BlockContainer> \r\n            <BlockHeaderComponent \r\n                title={title}\r\n            />  \r\n            {loading ? <Spinner /> : ''}            \r\n           \r\n            {submitSuccess &&                \r\n                <div aria-label='success-message' className='message-success'>                    \r\n                    El parte <Link to={'/worklogs/'+ submitSuccess.id}>'{submitSuccess.title}'</Link> ha sido {mode === 'new' ? 'creado':'editado'} con éxito.\r\n                </div>  \r\n            }\r\n\r\n            {submitError &&\r\n                <div aria-label='error-message' className='message-error'>{submitError.message}</div>\r\n            }\r\n            \r\n            {worklog &&\r\n                <FormBuilder \r\n                    key = \"newWorklogForm\"\r\n                    formView = \"form\"\r\n                    formItems = {formItems}\r\n                    initValues = {worklog}\r\n                    validation = {validate}\r\n                    onSubmit = {onSubmit}\r\n            />\r\n            }\r\n        </BlockContainer>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\lib\\orzkDatepicker\\datepicker.js",["361","362","363","364","365","366","367","368","369","370","371","372","373","374"],"/*\r\n\t Options\r\n\t\t- showTitle Boolean [true,false] Default true\r\n\t \t- mode\tString [date, time, datetime]\tDefault 'datetime'\r\n\t\t- lang\tString [en, es, fr] Default 'en'\r\n\t\t- startDay Integer [0 - Sunday, 1 - Monday, ... 6 - Saturday]\tDefault 1\r\n\t\t- minDate\tDate [Date object] Default null\r\n\t\t- maxDate\tDate [Date object] Default null\r\n\t\t- blockWeekdays\tArray<String> [mon,tue,wed,thu,fri,sat,sun] Default []\r\n\t\t- blockDates\t{<Array<Date>} Default {}\tSingle date / Date range: [min date, max date]\r\n\t\t- display\tString [full, compact] Default 'full'\r\n\t\t- showMsg\tBoolean [true, false]\tDefault true\r\n\t\t- dateFormat\tString ['ymd[/-]','ydm[/-]','mdy[/-]','dmy[/-]'] Default 'dmy/'\r\n\t\t- timeFormat\tString ['h','hm','hms']\r\n\t\t- position\tString['free','attach','fixed']\tDefault 'free'\r\n\t\t- showDate\tBoolean [true,false] Default true\r\n\t\r\n\t Methods\r\n\t\tPublic\r\n\t\t\tshow()\t\t\t\t\t\t-\tDraws the datepicker DOM elements.\r\n\t\t\tclose()\t\t\t\t\t\t-\tRemoves the datepicker object's DOM elements. The selected date and time will be kept on the object and will be shown if the show() function is called again.\r\n\t\t\tgetDate()\t\t\t\t\t-\tReturns a Date object containing the selected date.\r\n\t\t\tsetOptions(options)\t\t\t-\tSets the options for this instance. The 'options' parameter is a javascript object containing the pairs of key:value whose default values must be overwritten.\r\n\t\t\tgetFullDateString()\t\t\t-\tReturns a string containing the selected date formatted based on the dateFormat and timeFormat options.\r\n\t\t\tsetDate(d)\t\t\t\t\t-\tSets the initial date of the datepicker object. By default, if an input DOM element id is passed as parameter on the datepicker's constructor, and it \r\n\t\t\t\t\t\t\t\t\t\t\tcontains a valid date string, this date will be set as the initial one. Otherwise, the initial date will be the current local date. If this date is blocked,\r\n\t\t\t\t\t\t\t\t\t\t\tthe initial date will be empty and the user must select one manually on the calendar widget in order to be able to push the 'OK' button.\r\n\t\t\tprintDate()\t\t\t\t\t-\tPrints a formatted date string based on the selected date on the input DOM element referenced by the id passed as parameter on the datepicker's constructor.\r\n\t\t\t\t\t\t\t\t\t\t\tIf this parameter contains null or a non valid id, nothing will be printed.\r\n\t\t\tonSubmit(d)\t\t\t\t\t-\tThis function is called when the user press the 'OK' button. By default it calls the printDate() function.\r\n\t\tPrivate\t\t\r\n\t\t\tupdateDisplay()\t\t\t\t-\tRedraw all the display elements \r\n\t\t\tdaysInMonth()\t\t\t\t-\tReturns the number of days of the selected month.\r\n\t\t\tfirstDay()\t\t\t\t\t-\tReturns the position on the weekdays o the month's first day. Used to calculate the first row's offset when printing the calendar. \r\n\t\t\tclearCalendarContainer()\t-\tRemove the elements on the calendar container.\r\n\t\t\tclearTimeContainer()\t\t-\tRemove the elements on the time container (Clock elements)\r\n\t\t\tclearMsgContainer()\t\t\t-\tRemove the elements on the debug section (errors and warnings)\r\n\t\t\tprintCalendar()\t\t\t\t-\tDraws the calendar\r\n\t\t\tprintMonthList()\t\t\t-\tDraws the month list that allows to quickly one. \r\n\t\t\tprintYearList(decade)\t\t-\tDraws the year list. This window allows to scroll over the years in groups of 20 and select one of them. The 'decade' parameter indicates the offset \r\n\t\t\t\t\t\t\t\t\t\t\tto know which group of years must be printed.\r\n\t\t\tprintAnalogTime(type)\t\t-\tDraws the analog clock to pick hours / minutes / seconds. The 'type' parameter indicates which one is being picked.\r\n\t\t\tdrawClockHand(line,x2,y2)\t-\tDraws the clock's hand, starting from the center of the widget. \r\n\t\t\thideClockHand(line)\t\t\t-\tHide the clock's hand passed as parameter.\r\n\t\t\tshowCalendar()\t\t\t\t-\tShow the calendar container window\r\n\t\t\tshowTime()\t\t\t\t\t-\tShow the clock container window\r\n\t\t\tgetDateString(d)\t\t\t-\tReturns a formatted string based on the date 'd' passed as parameter and the dateFormat option passed when the object was created.\r\n\t\t\tgetTimeString(d)\t\t\t-\tReturns a formatted string based on the date 'd' passed as parameter and the timeFormat option passed when the object was created.\r\n\t\t\tupdateTime(d)\t\t\t\t-\tRedraws the display item containing the time.\r\n\t\t\tcreateDate(d)\t\t\t\t-\tReturns a date object based on the string 'd' passed as parameter. If the string doesn't fit the dateFormat and timeFormat options, returns false.\r\n\t\t\tpadInteger(number,max)\t\t-\tReturns a string of 'max' characters containing 'number' and filled with zeros on the left. Ej. padInteger(2,4) -> '0002'\r\n\t\t\trad2deg(x)\t\t\t\t\t-\tConverts radians to degrees.\r\n\t\t\tdeg2rad(x)\t\t\t\t\t-\tConverts degrees to radians.\r\n\t\t\tisDate(date)\t\t\t\t-\tChecks if the 'date' parameter is a Date object. Returns a boolean.\r\n\t\t\tdateInRange(date,type)\t\t-\tChecks if the 'date' parameter is bigger than the minDate option and smaller than the maxDate option. The 'type' can be 'day' for the printCalendar() \r\n\t\t\t\t\t\t\t\t\t\t\tfunction, 'month' for the printMonthList() function or 'year' for the printYearList() function\r\n\t\t\tdateIsBlocked(date)\t\t\t-\tChecks if the 'date' parameter is present on the blockDates option.\r\n\t*/\r\nexport class Datepicker  {\r\n\tconstructor(dateField,title,options) {\t\r\n\t\t\r\n\t\tthis.setOptions = this.setOptions.bind(this)\r\n\t\tthis.reset = this.reset.bind(this)\r\n\t\tthis.show = this.show.bind(this)\r\n\t\tthis.updateDisplay = this.updateDisplay.bind(this)\r\n\t\tthis.daysInMonth = this.daysInMonth.bind(this)\r\n\t\tthis.firstDay = this.firstDay.bind(this)\r\n\t\tthis.clearCalendarContainer = this.clearCalendarContainer.bind(this)\r\n\t\tthis.clearTimeContainer = this.clearTimeContainer.bind(this)\r\n\t\tthis.clearMsgContainer = this.clearMsgContainer.bind(this)\r\n\t\tthis.printCalendar = this.printCalendar.bind(this)\r\n\t\tthis.printMonthList = this.printMonthList.bind(this)\r\n\t\tthis.printYearList = this.printYearList.bind(this)\r\n\t\tthis.printAnalogTime = this.printAnalogTime.bind(this)\r\n\t\tthis.drawClockHand = this.drawClockHand.bind(this)\r\n\t\tthis.hideClockHand = this.hideClockHand.bind(this)\r\n\t\tthis.close = this.close.bind(this)\r\n\t\tthis.printDate = this.printDate.bind(this)\r\n\t\tthis.getFullDateString = this.getFullDateString.bind(this)\r\n\t\tthis.showCalendar = this.showCalendar.bind(this)\r\n\t\tthis.showTime = this.showTime.bind(this)\r\n\t\tthis.getDateString = this.getDateString.bind(this)\r\n\t\tthis.getTimeString = this.getTimeString.bind(this)\r\n\t\tthis.updateTime = this.updateTime.bind(this)\r\n\t\tthis.getDate = this.getDate.bind(this)\r\n\t\tthis.createDate = this.createDate.bind(this)\r\n\t\tthis.setStartDate = this.setStartDate.bind(this)\r\n\t\tthis.setDate = this.setDate.bind(this)\r\n\t\tthis.onSubmit = this.onSubmit.bind(this)\r\n\t\tthis.padInteger = this.padInteger.bind(this)\r\n\t\tthis.rad2deg = this.rad2deg.bind(this)\r\n\t\tthis.deg2rad = this.deg2rad.bind(this)\r\n\t\tthis.isDate = this.isDate.bind(this)\r\n\t\tthis.dateInRange = this.dateInRange.bind(this)\r\n\t\tthis.dateIsBlocked = this.dateIsBlocked.bind(this)\r\n\t\r\n\t\tthis.initialized = false;\t\r\n\t\tthis._version = '0.1';\r\n\t\t\r\n\t\tthis.defOptions = options;\r\n\t\tthis.dpMode = \"datetime\";\t\r\n\t\tthis.inputDate = null;\r\n\t\tthis.showDate = true;\r\n\t\tthis.language = \"en\";\r\n\t\tthis.startDay = 1;\t// Monday\r\n\t\tthis.minDate = null;\r\n\t\tthis.maxDate = null;\r\n\t\tthis.showTitle = true;\r\n\t\tthis.blockdays = [];\r\n\t\tthis.display = \"full\";\r\n\t\tthis.showMsg = true;\r\n\t\tthis.blockDates = [];\r\n\t\tthis.dateFormat = \"dmy/\";\r\n\t\tthis.timeFormat = \"hm\";\r\n\t\tthis.position = \"free\";\r\n\t\t\r\n\t\tthis.error = [];\r\n\t\tthis.warning = [];\r\n\t\tthis.info = [];\r\n\t\t\r\n\t\tthis.lang = {\r\n\t\t\t\"en\":\t{\r\n\t\t\t\tmonth:\t\t[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\r\n\t\t\t\tmonthShort:\t[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],\r\n\t\t\t\tday:\t\t[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],\r\n\t\t\t\tdayShort:\t[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],\r\n\t\t\t\tbtncancel:\t\"Cancel\",\r\n\t\t\t\tbtnok:\t\t\"OK\",\r\n\t\t\t\terrTitle:\t\"Invalid 'showTitle' value. Default value will be used.\",\r\n\t\t\t\terrMode:\t\"Unknown 'mode' value. Default value will be used.\",\r\n\t\t\t\terrLang:\t\"Unknown 'lang' value. Default value will be used.\",\r\n\t\t\t\terrStart:\t\"Invalid 'startDay' value. Default value will be used.\",\r\n\t\t\t\terrMin:\t\t\"Invalid minimum date. This parameter will be ignored.\",\r\n\t\t\t\terrMax:\t\t\"Invalid maximum date. This parameter will be ignored.\",\r\n\t\t\t\terrMinMax:\t\"Minimun date is higher than maximum date. Both will be ignored.\",\r\n\t\t\t\terrDisplay:\t\"Invalid 'display' value. This parameter will be ignored.\",\r\n\t\t\t\terrMsg:\t\t\"Invalid 'showMsg' value. Default value will be used.\",\r\n\t\t\t\terrWeekDay:\t\"Unknown 'blockWeekdays' argument on position \",\r\n\t\t\t\terrWeekDay2:\"The 'blockWeekdays' parameter expects an array as argument.\",\r\n\t\t\t\terrInputField:\t\"DOM element not found\",\r\n\t\t\t\terrDateFormat:\t\"Invalid date format\",\t\t\t\r\n\t\t\t\terrBlockDate:\t\"Invalid date in 'blockDates' parameter at position \",\r\n\t\t\t\terrFormat:\t\t\"Invalid 'dateFormat' value. Default value will be used: 'mdy/'\",\r\n\t\t\t\terrTimeFormat:\t\"Invalid 'timeFormat' value. Default value will be used: 'hm'\",\r\n\t\t\t\terrPosition:\t\"Invalid element id to bind the widget position. Default value will be used: 'free'\",\r\n\t\t\t\terrPosition2:\t\"Ivalid 'position' value. Default value will be used: 'free'\",\r\n\t\t\t\terrShowDate:\t\"Invalid 'showDate' value. Default value will be used: 'true'\"\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t\"es\":\t{\r\n\t\t\t\tmonth:\t\t[\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"],\r\n\t\t\t\tmonthShort:\t[\"Ene\",\"Feb\",\"Mar\",\"Abr\",\"May\",\"Jun\",\"Jul\",\"Ago\",\"Sep\",\"Oct\",\"Nov\",\"Dic\"],\r\n\t\t\t\tday:\t\t[\"Domingo\",\"Lunes\",\"Martes\",\"Mi\\xe9rcoles\",\"Jueves\",\"Viernes\",\"S\\xe1bado\"],\r\n\t\t\t\tdayShort:\t[\"Do\",\"Lu\",\"Ma\",\"Mi\",\"Ju\",\"Vi\",\"S\\xe1\"],\r\n\t\t\t\tbtncancel:\t\"Cancelar\",\r\n\t\t\t\tbtnok:\t\t\"OK\",\r\n\t\t\t\terrTitle:\t\"Valor de 'showTitle' no v\\xe1lido. Se usar\\xe1 el valor por defecto.\",\r\n\t\t\t\terrMode:\t\"Valor de 'mode' desconocido. Se usar\\xe1 el valor por defecto.\",\r\n\t\t\t\terrLang:\t\"Valor de 'lang' desconocido. Se usar\\xe1 el valor por defecto.\",\r\n\t\t\t\terrStart:\t\"Valor de 'startDay' no v\\xe1lido. Se usar\\xe1 el valor por defecto.\",\r\n\t\t\t\terrMin:\t\t\"Fecha m\\xednima no v\\xe1lida. Este par\\xe1metro ser\\xe1 ignorado.\",\r\n\t\t\t\terrMax:\t\t\"Fecha m\\xe1xima no v\\xe1lida. Este par\\xe1metro ser\\xe1 ignorado.\",\r\n\t\t\t\terrMinMax:\t\"La fecha m\\xednima es posterior a la fecha m\\xe1xima. Ambos par\\xe1metros ser\\xe1n ignorados.\",\r\n\t\t\t\terrDisplay:\t\"Valor de 'display' no v\\xe1lido. Este par\\xe1metro ser\\xe1 ignorado.\",\r\n\t\t\t\terrMsg:\t\t\"Valor de 'showMsg' no v\\xe1lido. Se usar\\xe1 el valor por defecto.\",\r\n\t\t\t\terrWeekDay:\t\"Valor de 'blockWeekdays' desconocido en la posici\\xf3n \",\r\n\t\t\t\terrWeekDay2:\"El par\\xe1metro 'blockWeekdays' debe ser un array.\",\r\n\t\t\t\terrInputField:\t\"No se ha encontrado el campo de entrada en la p\\xe1gina.\",\r\n\t\t\t\terrDateFormat:\t\"Formato de fecha no v\\xe1lido.\",\t\t\t\r\n\t\t\t\terrBlockDate:\t\"Fecha no v\\xe1lida en el par\\xe1metro 'blockDates' en la posici\\xf3n \",\r\n\t\t\t\terrFormat:\t\t\"Valor de 'dateFormat' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'mdy/'\",\r\n\t\t\t\terrTimeFormat:\t\"Valor de 'timeFormat' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'hm'\",\r\n\t\t\t\terrPosition:\t\"ID del elemento no v\\xe1lida. No se puede enlazar el objeto con este valor de 'position'. Se usar\\xe1 el valor por defecto: 'free'\",\r\n\t\t\t\terrPosition2:\t\"Valor de 'position' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'free'\",\r\n\t\t\t\terrShowDate:\t\"Valor de 'showDate' no v\\xe1lido. Se usar\\xe1 el valor por defecto: 'true'\"\r\n\t\t\t}\t\t\r\n\t\t};\r\n\t\t\r\n\t\t// Set input/output field\r\n\t\tif(typeof(dateField) != \"undefined\" && dateField != null){\r\n\t\t\tthis.inputDate = document.getElementById(dateField);\r\n\t\t\tif(this.inputDate == null){\r\n\t\t\t\tthis.error.push(this.lang[this.language].errInputField);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.setOptions(options);\r\n\t\t\r\n\t\t\t\r\n\t\tthis.fecha = null;\r\n\t\tthis.nuevaFecha = null;\r\n\t\t\r\n\t\tthis.contenedor = null;\r\n\t\tthis.dp = null;\r\n\t\t\r\n\t\tthis.titleContainer = null;\r\n\t\tthis.titleTxt = null;\r\n\t\tthis.title = title;\r\n\t\t\r\n\t\tthis.ymcontainer = null;\r\n\t\tthis.yearContainer = null;\r\n\t\tthis.year = null;\r\n\t\tthis.yearTxt = null;\r\n\t\tthis.yearPrev = null;\r\n\t\tthis.yearNext = null;\r\n\t\t\r\n\t\tthis.monthContainer = null;\r\n\t\tthis.month = null;\r\n\t\tthis.monthTxt = null;\r\n\t\t\r\n\t\tthis.daySelected = null;\r\n\t\tthis.daySelectedTxt = null;\r\n\t\t\r\n\t\tthis.dayWeek = null;\r\n\t\tthis.dayWeekTxt = null;\t\r\n\t\t\r\n\t\tthis.timeTxt = null;\t\r\n\t\t\r\n\t\tthis.btnCalendar = null;\r\n\t\tthis.btnHour = null;\r\n\t\t\r\n\t\tthis.msgContainer = null;\r\n\t\tthis.msgTxt = null;\r\n\t\tthis.msgList = null;\r\n\t\tthis.msgArrow = null;\r\n\t\t\r\n\t\tthis.tableContainer = null;\r\n\t\tthis.dpCurrWindow = \"calendar\";\t// calendar / time\r\n\t\t\r\n\t\tthis.calendarContainer = null;\r\n\t\tthis.calendar = null;\r\n\t\tthis.monthList = null;\r\n\t\tthis.yearList = null;\r\n\t\tthis.decadeListContainer = null;\r\n\t\tthis.decadeList = null;\r\n\t\tthis.decadeShift = 0;\r\n\t\t\r\n\t\tthis.timeContainer = null;\r\n\t\tthis.clockType = \"analog\";\r\n\t\t// Analog clock variables\r\n\t\tthis.timeWindow = null;\r\n\t\tthis.timeMinutesContainer = null;\r\n\t\tthis.svgNS = null;\r\n\t\tthis.analogClockSVG = null;\r\n\t\tthis.clockHandSelected = null;\r\n\t\tthis.clockHand = null;\t\r\n\t\t\r\n\t\t// Digital clock variables\r\n\t\tthis.dcHour = null;\r\n\t\tthis.dcbtnHourUp = null;\r\n\t\tthis.dcbtnHourDown = null;\r\n\t\tthis.dcMinute = null;\r\n\t\tthis.dcbtnMinUp = null;\r\n\t\tthis.dcbtnMinDown = null;\r\n\t\t\r\n\t\tthis.btnCancel = null;\r\n\t\tthis.btnOK = null;\r\n\t}\r\n\r\n\tsetOptions(options){\t\r\n\t\r\n\t\t// Validate the options passed as argument and load them.\r\n\t\tif(typeof(options) != \"undefined\" && options != null){\r\n\t\t\tvar tmplang = options['lang'];\r\n\t\t\tvar tmptitle = options['showTitle'];\r\n\t\t\tvar tmpmode = options['mode'];\r\n\t\t\tvar tmpdateformat = options['dateFormat'];\r\n\t\t\tvar tmptimeformat = options['timeFormat'];\r\n\t\t\tvar tmpstartday = options['startDay'];\r\n\t\t\tvar tmpmindate = options['minDate'];\r\n\t\t\tvar tmpmaxdate = options['maxDate'];\r\n\t\t\tvar tmpdisplay = options['display'];\r\n\t\t\tvar tmpshowmsg = options['showMsg'];\r\n\t\t\tvar tmpblockweekdays = options['blockWeekdays'];\r\n\t\t\tvar tmpblockdates = options['blockDates'];\r\n\t\t\tvar tmpposition = options['position'];\r\n\t\t\tvar tmpshowdate = options['showDate'];\r\n\t\t\t\r\n\t\t\t// Select language\r\n\t\t\tif(typeof(tmplang) != \"undefined\" && tmplang != null){\t\t\t\r\n\t\t\t\tif(this.lang[tmplang] == null){\t\t\t\t\r\n\t\t\t\t\tthis.language = \"en\";\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errLang);\r\n\t\t\t\t}else{\t\t\t\t\t\t\r\n\t\t\t\t\tthis.language = tmplang;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Print the date in the input field on submit\r\n\t\t\tif(typeof(tmpshowdate) != \"undefined\" && tmpshowdate != null){\t\t\t\r\n\t\t\t\tif(typeof(tmpshowdate) === 'boolean'){\t\t\t\t\r\n\t\t\t\t\tthis.showDate = tmpshowdate;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errShowDate);\r\n\t\t\t\t\tthis.showDate = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Show/hide title\t\t\r\n\t\t\tif(typeof(tmptitle) != \"undefined\" && tmptitle != null){\r\n\t\t\t\tif(typeof(tmptitle) === 'boolean'){\r\n\t\t\t\t\tthis.showTitle = tmptitle;\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errTitle);\r\n\t\t\t\t\tthis.showTitle = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the datepicker mode\r\n\t\t\tif(typeof(tmpmode) != \"undefined\" && tmpmode != null){\r\n\t\t\t\tif(tmpmode === \"date\"){\r\n\t\t\t\t\tthis.dpMode = \"date\";\r\n\t\t\t\t}else if(tmpmode === \"time\"){\r\n\t\t\t\t\tthis.dpMode = \"time\";\r\n\t\t\t\t}else if(tmpmode === \"datetime\"){\r\n\t\t\t\t\tthis.dpMode = \"datetime\";\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.dpMode = \"datetime\";\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMode);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\t\t\t// Set date format\r\n\t\t\tif(typeof(tmpdateformat) != \"undefined\" && tmpdateformat != null){\t\t\t\r\n\t\t\t\tif(typeof(tmpdateformat) === 'string' && tmpdateformat.length === 4){\t\t\t\t\r\n\t\t\t\t\tvar sep = tmpdateformat.substr(3);\r\n\t\t\t\t\tif(sep !== '/' && sep !== '-'){\t\t\t\t\t\r\n\t\t\t\t\t\tthis.error = this.lang[this.language].errFormat;\r\n\t\t\t\t\t}else{\t\t\t\t\t\r\n\t\t\t\t\t\tvar p = tmpdateformat.substr(0,3);\t\t\t\t\t\r\n\t\t\t\t\t\tif(p === 'ymd' || p === 'ydm' || p === 'dmy' || p === 'mdy'){\r\n\t\t\t\t\t\t\tthis.dateFormat = tmpdateformat;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tthis.error = this.lang[this.language].errFormat;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.error = this.lang[this.language].errFormat;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set time format\r\n\t\t\tif(typeof(tmptimeformat) != \"undefined\" && tmptimeformat != null){\t\t\t\r\n\t\t\t\tif(tmptimeformat === 'h' || tmptimeformat === 'hm' || tmptimeformat === 'hms'){\r\n\t\t\t\t\tthis.timeFormat = tmptimeformat;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.error = this.lang[this.language].errTimeFormat;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the starting day of the week\r\n\t\t\tif(typeof(tmpstartday) != \"undefined\" && tmpstartday != null){\r\n\t\t\t\tif(tmpstartday >= 0 && tmpstartday < 7){\t\t\t\t\r\n\t\t\t\t\tthis.startDay = tmpstartday;\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errStart);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the minimum date that can be picked\r\n\t\t\tif(typeof(tmpmindate)!= \"undefined\" && tmpmindate != null && this.dpMode !== \"time\"){\r\n\t\t\t\t\r\n\t\t\t\tthis.minDate = this.createDate(tmpmindate);\r\n\t\t\t\tif(!this.isDate(this.minDate)){\t\t\t\t\r\n\t\t\t\t\tthis.minDate = null;\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the maximum date that can be picked\r\n\t\t\tif(typeof(tmpmaxdate)!= \"undefined\" && tmpmaxdate != null && this.dpMode !== \"time\"){\r\n\t\t\t\t\r\n\t\t\t\tthis.maxDate = this.createDate(tmpmaxdate);\r\n\t\t\t\tif(!this.isDate(this.maxDate)){\r\n\t\t\t\t\tthis.maxDate = null;\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMax);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\t\t\t// Set the type of display\r\n\t\t\tif(typeof(tmpdisplay)!= \"undefined\" && tmpdisplay != null){\r\n\t\t\t\tif(tmpdisplay === \"compact\"){\t\t\t\t\r\n\t\t\t\t\tthis.display = \"compact\";\t\t\t\r\n\t\t\t\t}else if(tmpdisplay === \"full\"){\r\n\t\t\t\t\tthis.display = \"full\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errDisplay);\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\t\t\t// Show / hide the error and warning messages\r\n\t\t\tif(typeof(tmpshowmsg)!= \"undefined\" && tmpshowmsg != null){\r\n\t\t\t\tif(tmpshowmsg === true){\r\n\t\t\t\t\tthis.showMsg = true;\r\n\t\t\t\t}else if (tmpshowmsg === false){\r\n\t\t\t\t\tthis.showMsg = false;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errMsg);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the position of the widget\r\n\t\t\tif(typeof(tmpposition)!= \"undefined\" && tmpposition != null){\r\n\t\t\t\tif(tmpposition === \"free\"){\r\n\t\t\t\t\tthis.position = tmpposition;\r\n\t\t\t\t}else if (tmpposition === \"attach\" || tmpposition === \"fixed\"){\r\n\t\t\t\t\tif(this.inputDate !== null ){\r\n\t\t\t\t\t\tthis.position = tmpposition;\r\n\t\t\t\t\t}else{\t\t\t\t\t\r\n\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errPosition);\r\n\t\t\t\t\t\tthis.position = \"free\";\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errPosition2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Set the weekdays that are blocked\r\n\t\t\tif(typeof(tmpblockweekdays) != \"undefined\" && tmpblockweekdays != null && this.dpMode !== \"time\"){\r\n\t\t\t\t// Checks if the object passed is an array\r\n\t\t\t\tif(Object.prototype.toString.call(tmpblockweekdays) === '[object Array]'){\r\n\t\t\t\t\tthis.blockdays = [];\r\n\t\t\t\t\tfor(var i=0;i<tmpblockweekdays.length;i++){\r\n\t\t\t\t\t\tswitch(tmpblockweekdays[i]){\r\n\t\t\t\t\t\t\tcase \"mon\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"tue\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(2);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"wed\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(3);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"thu\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(4);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"fri\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(5);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"sat\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(6);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"sun\":\r\n\t\t\t\t\t\t\t\tthis.blockdays.push(0);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tthis.error.push(this.lang[this.language].errWeekDay + i);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.error.push(this.lang[this.language].errWeekDay);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// Set the dates blocked\r\n\t\t\tif(typeof(tmpblockdates) != \"undefined\" && tmpblockdates != null && this.dpMode !== \"time\"){\t\t\t\r\n\t\t\t\tfor(var i = 0; i< tmpblockdates.length; i++){\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif(tmpblockdates[i].length === 1){\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar d = this.createDate(tmpblockdates[i][0]);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(this.isDate(d)){\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.blockDates.push([d]);\t\t\t\t\t\t\r\n\t\t\t\t\t\t}else{\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else if(tmpblockdates[i].length === 2){\t\t\t\t\t\r\n\t\t\t\t\t\tvar daterange = tmpblockdates[i];\r\n\t\t\t\t\t\tvar d1 = this.createDate(daterange[0]);\r\n\t\t\t\t\t\tvar d2 = this.createDate(daterange[1]);\r\n\t\t\t\t\t\tif(this.isDate(d1) && this.isDate(d2)){\r\n\t\t\t\t\t\t\tif(d1<= d2){\r\n\t\t\t\t\t\t\t\tthis.blockDates.push([d1,d2]);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\t\r\n\t\t\r\n\t\t// Validates min and max dates\r\n\t\tif(this.minDate != null && this.maxDate != null){\r\n\t\t\tif(this.minDate.getTime() > this.maxDate.getTime()){\r\n\t\t\t\tthis.minDate = null;\r\n\t\t\t\tthis.maxDate = null;\r\n\t\t\t\tthis.warning.push(this.lang[this.language].errMinMax);\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// Validates the block dates\r\n\t\tfor(var i = 0; i< this.blockDates.length; i++){\r\n\t\t\tif(this.blockDates[i].length === 1){\t\t\t\r\n\t\t\t\tif(!this.dateInRange(this.blockDates[i][0],\"day\")){\t\t\t\t\t\r\n\t\t\t\t\tthis.blockDates.splice(i);\t\t\t\t\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif( ( (this.maxDate != null && this.blockDates[i][0] > this.maxDate) || (this.minDate != null && this.blockDates[i][1] < this.minDate)) || \r\n\t\t\t\t\tthis.blockDates[i][1] < this.blockDates[i][0]\r\n\t\t\t\t){\t\t\t\t\t\r\n\t\t\t\t\tthis.blockDates.splice(i);\r\n\t\t\t\t\tthis.warning.push(this.lang[this.language].errBlockDate + i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\r\n\t\t\r\n\t\t// Updates the weekdays positions in the array depending on the start day.\r\n\t\tfor(var i=0; i<this.startDay;i++){\r\n\t\t\tthis.lang[this.language].day.push(this.lang[this.language].day.shift());\r\n\t\t\tthis.lang[this.language].dayShort.push(this.lang[this.language].dayShort.shift());\t\t\t\t\r\n\t\t}\t\r\n\t}\r\n\r\n\treset (){\r\n\t\tthis.dpMode = \"datetime\";\t\r\n\t\t//this.inputDate = null;\r\n\t\tthis.showDate = true;\r\n\t\tthis.language = \"en\";\r\n\t\tthis.startDay = 1;\t// Monday\r\n\t\tthis.minDate = null;\r\n\t\tthis.maxDate = null;\r\n\t\tthis.showTitle = true;\r\n\t\tthis.blockdays = [];\r\n\t\tthis.display = \"full\";\r\n\t\tthis.showMsg = true;\r\n\t\tthis.blockDates = [];\r\n\t\tthis.dateFormat = \"dmy/\";\r\n\t\tthis.timeFormat = \"hm\";\r\n\t\tthis.position = \"free\";\r\n\t\t\r\n\t\tthis.error = [];\r\n\t\tthis.warning = [];\r\n\t\tthis.info = [];\r\n\t\t\r\n\t\tthis.fecha = null;\r\n\t\tthis.nuevaFecha = null;\r\n\t\t\r\n\t\tthis.setOptions(this.defOptions);\r\n\t\tthis.dpCurrWindow = \"calendar\";\r\n\t\t\r\n\t}\r\n\tshow (){\r\n\t\tvar dpInstance = this;\t\r\n\t\t\r\n\t\tif(this.initialized){\t\t\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\tthis.error = [];\r\n\t\t\r\n\t\t\r\n\t\tif(this.inputDate != null && this.showDate === true){\t\t\r\n\t\t\tthis.fecha =  this.setStartDate();\t\t\r\n\t\t}\r\n\t\t\r\n\t\t// Check if the setDate method returns a valid date. If the returned value is not a valid date, sets the current date.\r\n\t\tif(!this.isDate(this.fecha)){\r\n\t\t\tthis.fecha = new Date();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.minDate != null && this.fecha < this.minDate){\r\n\t\t\tthis.fecha = new Date(this.minDate.getTime());\r\n\t\t}\r\n\t\tif(this.maxDate != null && this.fecha > this.maxDate){\r\n\t\t\tthis.fecha = new Date(this.maxDate.getTime());\r\n\t\t}\r\n\t\t\r\n\t\tthis.nuevaFecha = new Date(this.fecha.getTime());\r\n\t\t\r\n\t\tthis.contenedor = document.createElement(\"div\");\r\n\t\tif(this.position === \"attach\"){\t\t\r\n\t\t\tthis.contenedor.className = \"orzk-dp_contenedor_attach\";\t\t\r\n\t\t\tvar coord = this.inputDate.getBoundingClientRect();\t\r\n\t\t\t\r\n\t\t\t//this.contenedor.style.top = (coord.top + coord.height + (this.inputDate.offsetTop - coord.top))+'px';\t\r\n\t\t\tthis.contenedor.style.top = (window.scrollY + coord.top + coord.height)+'px';\r\n\t\t\tthis.contenedor.style.left = (window.scrollX + coord.left)+'px';\t\t\r\n\t\t\t\t\r\n\t\t}else{\r\n\t\t\tthis.contenedor.className = \"orzk-dp_contenedor\";\r\n\t\t}\r\n\t\tthis.contenedor.id = \"datepicker\";\r\n\t\tthis.contenedor.onclick = function(){\r\n\t\t\t//this.parentNode.removeChild(this);\r\n\t\t};\r\n\t\t\r\n\t\tthis.dp = document.createElement(\"div\");\r\n\t\tif(this.position === \"attach\"){\r\n\t\t\tthis.dp.className = \"orzk-dp_datepicker_attach\";\r\n\t\t}else{\r\n\t\t\tthis.dp.className = \"orzk-dp_datepicker\";\r\n\t\t}\r\n\t\t\r\n\t\tif(this.title != null && this.showTitle){\r\n\t\t\tthis.titleContainer = document.createElement(\"div\");\r\n\t\t\tthis.titleContainer.className = \"orzk-dp_title\";\r\n\t\t\tthis.titleTxt = document.createTextNode(this.title);\r\n\t\t\tthis.titleContainer.appendChild(this.titleTxt);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.dpMode !== \"time\"){\r\n\t\t\t// Year - month container\r\n\t\t\tthis.ymcontainer = document.createElement(\"div\");\r\n\t\t\t\r\n\t\t\t// Year block\r\n\t\t\tthis.yearContainer = document.createElement(\"div\");\r\n\t\t\tthis.yearContainer.className = \"orzk-dp_year_month_container\";\r\n\t\t\t\r\n\t\t\tthis.yearPrev = document.createElement(\"div\");\t\t\r\n\t\t\tthis.yearPrev.className = \"orzk-dp_arrow orzk-dp_left\";\r\n\t\t\tthis.yearPrev.id = \"dp_year_prev\";\r\n\t\t\tthis.yearPrev.onclick = function() {\t\t\t\r\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear()-1;\t\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t};\t\r\n\t\t\t\r\n\t\t\tthis.yearNext = document.createElement(\"div\");\t\t\r\n\t\t\tthis.yearNext.className = \"orzk-dp_arrow orzk-dp_right\";\r\n\t\t\tthis.yearNext.id = \"dp_year_next\";\r\n\t\t\tthis.yearNext.onclick = function() {\t\t\t\r\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear()+1;\t\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t};\t\t\r\n\t\t\t\r\n\t\t\tthis.year = document.createElement(\"div\");\r\n\t\t\tthis.year.className = \"orzk-dp_year_month\";\r\n\t\t\tthis.yearTxt = document.createTextNode(this.lang[this.language].month[this.fecha.getMonth()]);\r\n\t\t\tthis.year.onclick = function(){\r\n\t\t\t\tdpInstance.showCalendar();\r\n\t\t\t\tif(document.getElementById(\"dp-year-list\")== null || dpInstance.dpCurrWindow === \"time\"){\t\t\t\t\r\n\t\t\t\t\tdpInstance.printYearList(0);\r\n\t\t\t\t}else{\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tthis.year.appendChild(this.yearTxt);\r\n\t\t\t\r\n\t\t\tthis.yearContainer.appendChild(this.yearPrev);\t\t\r\n\t\t\tthis.yearContainer.appendChild(this.year);\r\n\t\t\tthis.yearContainer.appendChild(this.yearNext);\r\n\t\t\t\r\n\t\t\t// Month block\t\t\r\n\t\t\tthis.monthContainer = document.createElement(\"div\");\r\n\t\t\tthis.monthContainer.className=\"orzk-dp_year_month_container\";\r\n\t\t\t\r\n\t\t\tthis.monthPrev = document.createElement(\"div\");\r\n\t\t\tthis.monthPrev.className = \"orzk-dp_arrow orzk-dp_left\";\r\n\t\t\tthis.monthPrev.id = \"dp_month_prev\";\r\n\t\t\tthis.monthPrev.onclick = function() {\r\n\t\t\t\tvar month = dpInstance.nuevaFecha.getMonth() - 1;\r\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear();\r\n\t\t\t\t\r\n\t\t\t\tif(month < 0){\r\n\t\t\t\t\tmonth = 11;\r\n\t\t\t\t\tyear--;\r\n\t\t\t\t}\r\n\t\t\t\tdpInstance.nuevaFecha.setMonth(month);\r\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.updateDisplay();\t\t\t\r\n\t\t\t};\t\r\n\t\t\t\r\n\t\t\tthis.monthNext = document.createElement(\"div\");\r\n\t\t\tthis.monthNext.className = \"orzk-dp_arrow orzk-dp_right\";\r\n\t\t\tthis.monthNext.id = \"dp_month_next\";\t\t\r\n\t\t\tthis.monthNext.onclick = function() {\r\n\t\t\t\tvar month = dpInstance.nuevaFecha.getMonth() + 1;\r\n\t\t\t\tvar year = dpInstance.nuevaFecha.getFullYear();\r\n\t\t\t\t\r\n\t\t\t\tif(month > 11){\r\n\t\t\t\t\tmonth = 0;\r\n\t\t\t\t\tyear++;\r\n\t\t\t\t}\r\n\t\t\t\tdpInstance.nuevaFecha.setMonth(month);\r\n\t\t\t\tdpInstance.nuevaFecha.setFullYear(year);\r\n\t\t\t\t\r\n\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t};\t\t\r\n\t\t\t\r\n\t\t\tthis.month = document.createElement(\"div\");\r\n\t\t\tthis.month.className = \"orzk-dp_year_month\";\r\n\t\t\tthis.monthTxt = document.createTextNode(this.lang[this.language].month[this.fecha.getMonth()]);\r\n\t\t\tthis.month.onclick = function(){\r\n\t\t\t\tdpInstance.showCalendar();\r\n\t\t\t\t\r\n\t\t\t\tif(document.getElementById(\"dp-month-list\")== null || dpInstance.dpCurrWindow === \"time\"){\t\t\t\t\r\n\t\t\t\t\tdpInstance.printMonthList();\r\n\t\t\t\t}else{\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t\tthis.month.appendChild(this.monthTxt);\r\n\t\t\t\r\n\t\t\tthis.monthContainer.appendChild(this.monthPrev);\r\n\t\t\tthis.monthContainer.appendChild(this.month);\r\n\t\t\tthis.monthContainer.appendChild(this.monthNext);\r\n\t\t\t\r\n\t\t\tthis.ymcontainer.appendChild(this.monthContainer);\r\n\t\t\tthis.ymcontainer.appendChild(this.yearContainer);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// Day block\r\n\t\t\tthis.daySelected = document.createElement(\"div\");\r\n\t\t\tthis.daySelected.className=\"orzk-dp_day\";\t\t\r\n\t\t\tthis.daySelectedTxt = document.createTextNode(this.fecha.getDate());\r\n\t\t\tthis.daySelected.appendChild(this.daySelectedTxt);\r\n\t\t\t\r\n\t\t\t// Day of the week block\r\n\t\t\tthis.dayWeek = document.createElement(\"div\");\r\n\t\t\tthis.dayWeek.className=\"orzk-dp_dayweek\";\r\n\t\t\tthis.dayWeekTxt = document.createTextNode(this.lang[this.language].day[this.fecha.getDay()]);\r\n\t\t\tthis.dayWeek.appendChild(this.dayWeekTxt);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.dpMode !== \"date\"){\r\n\t\t\t// Time block\t\r\n\t\t\tthis.timeTxt = document.createElement(\"div\");\r\n\t\t\tthis.timeTxt.className = \"orzk-dp_time\";\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar dayhourContainer = null;\r\n\t\tif(this.dpMode === \"datetime\"){\r\n\t\t\t// Calendar / hour buttons\r\n\t\t\tdayhourContainer = document.createElement(\"div\");\r\n\t\t\tdayhourContainer.className = \"orzk-dp_dayhourcontainer\";\r\n\t\t\tthis.btnCalendar = document.createElement(\"div\");\r\n\t\t\tthis.btnCalendar.className = \"orzk-dp-icon-calendar orzk-dp_calendar_button orzk-dp_dayhour_button_selected\";\r\n\t\t\tthis.btnCalendar.onclick = function (){\r\n\t\t\t\tdpInstance.showCalendar();\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthis.btnHour = document.createElement(\"div\");\r\n\t\t\tthis.btnHour.className = \"orzk-dp-icon-time orzk-dp_hour_button\";\r\n\t\t\tthis.btnHour.onclick = function (){\r\n\t\t\t\tdpInstance.showTime();\t\t\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tdayhourContainer.appendChild(this.btnCalendar);\r\n\t\t\tdayhourContainer.appendChild(this.btnHour);\r\n\t\t}\r\n\t\t\r\n\t\t// Message block\r\n\t\tthis.msgContainer = document.createElement(\"div\");\r\n\t\tthis.msgContainer.className = \"orzk-dp_msg orzk-dp_hide\";\r\n\t\tthis.msgContainer.onclick = function(){\r\n\t\t\tif(dpInstance.msgTxt.className.indexOf(\"hide\") !== -1){\r\n\t\t\t\tdpInstance.msgTxt.style.top = dpInstance.msgContainer.style.top + dpInstance.msgContainer.height;\r\n\t\t\t\tdpInstance.msgTxt.className = dpInstance.msgTxt.className.replace(/\\borzk-dp_hide\\b/,\"\");\r\n\t\t\t\tdpInstance.msgArrow.className = \"orzk-dp_up\";\r\n\t\t\t}else{\r\n\t\t\t\tdpInstance.msgTxt.className += \" orzk-dp_hide\";\t\r\n\t\t\t\tdpInstance.msgArrow.className = \"orzk-dp_down\";\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.msgTxt = document.createElement(\"div\");\r\n\t\tthis.msgTxt.className = \"orzk-dp_msg_list orzk-dp_hide\";\r\n\t\tthis.msgTxt.onclick = function(){\r\n\t\t\tdpInstance.msgTxt.className += \" orzk-dp_hide\";\r\n\t\t\tdpInstance.msgArrow.className = \"orzk-dp_down\";\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\tif(this.dpMode !== \"date\"){\r\n\t\t\t// Clock block\r\n\t\t\tthis.timeContainer = document.createElement(\"div\");\r\n\t\t\tthis.timeContainer.className = \"orzk-dp_time_container orzk-dp_hide\";\r\n\t\t\tif(this.clockType === \"analog\"){\r\n\t\t\t\tthis.timeWindow = \"hour\";\t\r\n\t\t\t\t\r\n\t\t\t\tthis.timeMinutesContainer = document.createElement(\"div\");\r\n\t\t\t\tthis.timeMinutesContainer.className = \"orzk-dp_time_minutes\";\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.analogClockSVG = document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\");\r\n\t\t\t\tthis.svgNS = this.analogClockSVG.namespaceURI;\r\n\t\t\t\tthis.analogClockSVG.setAttribute(\"class\",\"orzk-dp_clock_svg orzk-dp_hide\");\r\n\t\t\t\tthis.clockHand = document.createElementNS(this.svgNS,\"line\");\r\n\t\t\t\tthis.clockHandSelected = document.createElementNS(this.svgNS,\"line\");\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.analogClockSVG.appendChild(this.clockHand);\r\n\t\t\t\tthis.analogClockSVG.appendChild(this.clockHandSelected);\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}/*else if(this.clockType == \"digital\"){\r\n\t\t\t\t\r\n\t\t\t}*/\r\n\t\t}\r\n\t\t\r\n\t\tif(this.dpMode !== \"time\"){\r\n\t\t\t// Calendar block\r\n\t\t\tthis.calendarContainer = document.createElement(\"div\");\t\t\r\n\t\t\tthis.printCalendar();\r\n\t\t}\r\n\t\t\r\n\t\tthis.tableContainer = document.createElement(\"div\");\r\n\t\tthis.tableContainer.className = \"orzk-dp_table_container\";\r\n\t\tif(this.dpMode !== \"time\"){\r\n\t\t\tthis.tableContainer.appendChild(this.calendarContainer);\r\n\t\t}\r\n\t\tif(this.dpMode !== \"date\"){\r\n\t\t\tthis.tableContainer.appendChild(this.timeContainer);\r\n\t\t\tthis.tableContainer.appendChild(this.analogClockSVG);\r\n\t\t}\r\n\t\t\r\n\t\t// Buttons\r\n\t\tvar btnContainer = document.createElement(\"div\");\r\n\t\tbtnContainer.className = \"orzk-dp_btn_container\";\r\n\t\t\r\n\t\tthis.btnCancel = document.createElement(\"div\");\r\n\t\tthis.btnCancel.className = \"orzk-dp_button\";\r\n\t\tthis.btnCancel.appendChild(document.createTextNode(this.lang[this.language].btncancel));\r\n\t\tthis.btnCancel.onclick = function(){\r\n\t\t\tdpInstance.nuevaFecha = dpInstance.fecha;\r\n\t\t\tdpInstance.close();\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\tthis.btnOK = document.createElement(\"div\");\r\n\t\tthis.btnOK.className = \"orzk-dp_button\";\r\n\t\tthis.btnOK.appendChild(document.createTextNode(this.lang[this.language].btnok));\r\n\t\tthis.btnOK.onclick = function(){\t\t\r\n\t\t\tdpInstance.fecha = new Date(dpInstance.nuevaFecha.getTime());\t\t\r\n\t\t\tdpInstance.onSubmit(dpInstance.fecha);\t\t\t\r\n\t\t\tdpInstance.close();\t\t\r\n\t\t};\r\n\t\t\r\n\t\tbtnContainer.appendChild(this.btnCancel);\r\n\t\tbtnContainer.appendChild(this.btnOK);\r\n\t\t\r\n\t\t\r\n\t\tif(this.showTitle){\r\n\t\t\tthis.dp.appendChild(this.titleContainer);\r\n\t\t}\r\n\t\t\r\n\t\tthis.dp.appendChild(this.msgContainer);\r\n\t\tthis.dp.appendChild(this.msgTxt);\r\n\t\t\r\n\t\tif(this.dpMode !== \"time\"){\r\n\t\t\tthis.dp.appendChild(this.ymcontainer);\r\n\t\t\tif(this.display === \"full\"){\r\n\t\t\t\tthis.dp.appendChild(this.dayWeek);\t\r\n\t\t\t\tthis.dp.appendChild(this.daySelected);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif((this.dpMode !== \"date\") || this.dpMode === \"time\"){\t\t\r\n\t\t\tthis.dp.appendChild(this.timeTxt);\r\n\t\t}\r\n\t\tif(this.dpMode === \"datetime\"){\r\n\t\t\tthis.dp.appendChild(dayhourContainer);\r\n\t\t}\r\n\t\t\r\n\t\tthis.dp.appendChild(this.tableContainer);\r\n\t\tthis.dp.appendChild(btnContainer);\r\n\t\t\r\n\t\tif(this.position === \"attach\"){\t\t\r\n\t\t\tvar arrow = document.createElement(\"div\");\r\n\t\t\tarrow.className = \"orzk-dp_arrow_attach\";\t\t\r\n\t\t\tthis.contenedor.appendChild(arrow);\r\n\t\t}\r\n\t\tthis.contenedor.appendChild(this.dp);\t\r\n\t\t\r\n\t\tdocument.body.appendChild(this.contenedor);\r\n\t\tif(this.dpMode === \"time\"){\r\n\t\t\tthis.dpCurrWindow = \"time\";\r\n\t\t}else{\r\n\t\t\tthis.dpCurrWindow = \"calendar\";\r\n\t\t}\r\n\t\tthis.updateDisplay();\r\n\t\t\r\n\t\tthis.initialized = true;\r\n\t}\r\n\r\n\t\r\n\tupdateDisplay (){\t\r\n\t\tif(this.dpMode !== \"time\"){\r\n\t\t\tthis.yearTxt.nodeValue = this.nuevaFecha.getFullYear();\r\n\t\t\tthis.monthTxt.nodeValue = this.lang[this.language].month[this.nuevaFecha.getMonth()];\r\n\t\t\tif(this.dateInRange(this.nuevaFecha,\"day\") && !this.dateIsBlocked(this.nuevaFecha)){\r\n\t\t\t\tthis.daySelectedTxt.nodeValue = this.nuevaFecha.getDate();\r\n\t\t\t\tthis.dayWeekTxt.nodeValue = this.lang[this.language].day[(this.nuevaFecha.getDay()+6)%7];\r\n\t\t\t}else{\r\n\t\t\t\tthis.daySelectedTxt.nodeValue = \"--\";\r\n\t\t\t\tthis.dayWeekTxt.nodeValue = \"-\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.printCalendar();\r\n\t\t\tif(this.daySelectedTxt != null && this.daySelectedTxt.nodeValue !== \"--\"){\t\t\t\r\n\t\t\t\tdocument.getElementById(\"datepicker_d_\"+this.daySelectedTxt.nodeValue).className = \"orzk-dp_calendar_day_selected\";\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\tif(this.dpMode !== \"date\"){\r\n\t\t\tthis.updateTime(this.nuevaFecha);\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif(this.dpCurrWindow === \"time\"){\t\t\r\n\t\t\tthis.showTime();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.dpMode === \"time\" || (this.dpMode !== \"time\" && (this.dateInRange(this.nuevaFecha,\"day\") && !this.dateIsBlocked(this.nuevaFecha))) ){\r\n\t\t\tthis.btnOK.className = this.btnOK.className.replace(/\\borzk-dp_invisible\\b/,\"\");\r\n\t\t}else{\r\n\t\t\tif(this.btnOK.className.indexOf(\"orzk-dp_invisible\") === -1){\r\n\t\t\t\tthis.btnOK.className += \" orzk-dp_invisible\";\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\r\n\t\tif(this.showMsg === true && (this.info.length >0 || this.error.length > 0 || this.warning.length > 0)){\r\n\t\t\tthis.clearMsgContainer();\t\t\r\n\t\t\tvar icon;\r\n\t\t\t/*\r\n\t\t\tif(this.info.length > 0){\r\n\t\t\t\t\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\tif(this.error.length>0){\r\n\t\t\t\ticon = document.createElement(\"div\");\r\n\t\t\t\ticon.className = \"orzk-dp_error_icon\";\r\n\t\t\t\ticon.appendChild(document.createTextNode(this.error.length + \" error\"));\r\n\t\t\t\tthis.msgContainer.appendChild(icon);\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tfor(var i=0; i< this.error.length; i++){\r\n\t\t\t\t\tvar msg = document.createElement(\"div\");\r\n\t\t\t\t\tmsg.className = \"orzk-dp_msg_error\";\r\n\t\t\t\t\tmsg.appendChild(document.createTextNode(this.error[i]));\r\n\t\t\t\t\tthis.msgTxt.appendChild(msg);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.warning.length > 0){\t\r\n\t\t\t\ticon = document.createElement(\"div\");\r\n\t\t\t\ticon.className = \"orzk-dp_warning_icon\";\r\n\t\t\t\ticon.appendChild(document.createTextNode(this.warning.length + \" warning\"));\r\n\t\t\t\tthis.msgContainer.appendChild(icon);\t\r\n\t\t\t\t\r\n\t\t\t\tfor(var i=0; i< this.warning.length; i++){\r\n\t\t\t\t\tvar msg = document.createElement(\"div\");\r\n\t\t\t\t\tmsg.className = \"orzk-dp_msg_warning\";\r\n\t\t\t\t\tmsg.appendChild(document.createTextNode(this.warning[i]));\r\n\t\t\t\t\tthis.msgTxt.appendChild(msg);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.msgArrow = document.createElement(\"div\");\r\n\t\t\tthis.msgArrow.className = \"orzk-dp_down\";\r\n\t\t\tthis.msgContainer.appendChild(this.msgArrow);\r\n\t\t\tthis.msgContainer.className = this.msgContainer.className.replace(/\\borzk-dp_hide\\b/,\"\");\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tdaysInMonth(){\r\n\t\treturn 32 - new Date(this.nuevaFecha.getFullYear(),this.nuevaFecha.getMonth(),32).getDate();\r\n\t}\r\n\t\r\n\tfirstDay (){\r\n\t\tvar wd = new Date(this.nuevaFecha.getFullYear(),this.nuevaFecha.getMonth()).getDay();\t\r\n\t\treturn (wd +(7-this.startDay))%7;\r\n\t}\r\n\t\r\n\tclearCalendarContainer (){\r\n\t\t// Elimina los elementos anteriores\r\n\t\twhile(this.calendarContainer.firstChild){\r\n\t\t\tthis.calendarContainer.removeChild(this.calendarContainer.firstChild);\r\n\t\t}\r\n\t}\r\n\t\r\n\tclearTimeContainer (){\r\n\t\t// Elimina los elementos anteriores\r\n\t\twhile(this.timeContainer.firstChild){\r\n\t\t\tthis.timeContainer.removeChild(this.timeContainer.firstChild);\r\n\t\t}\r\n\t}\r\n\r\n\tclearMsgContainer (){\t\r\n\t\t// Elimina los elementos anteriores\r\n\t\twhile(this.msgContainer.firstChild){\r\n\t\t\tthis.msgContainer.removeChild(this.msgContainer.firstChild);\r\n\t\t}\r\n\t\twhile(this.msgTxt.firstChild){\r\n\t\t\tthis.msgTxt.removeChild(this.msgTxt.firstChild);\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tprintCalendar (){\r\n\t\tvar dpInstance = this;\r\n\t\tthis.clearCalendarContainer();\r\n\t\t\r\n\t\tthis.calendar = document.createElement(\"table\");\r\n\t\tthis.calendar.className=\"orzk-dp_days\";\r\n\t\t\r\n\t\tvar week = document.createElement(\"tr\");\r\n\t\tfor(var i = 0; i< this.lang[this.language].day.length;i++){\r\n\t\t\tvar day = document.createElement(\"th\");\r\n\t\t\tday.appendChild(document.createTextNode(this.lang[this.language].dayShort[i]));\r\n\t\t\tday.id = \"wd_\"+i;\r\n\t\t\tweek.appendChild(day);\r\n\t\t}\r\n\t\tthis.calendar.appendChild(week);\r\n\t\t\r\n\t\tvar first = this.firstDay();\r\n\t\tvar numDays = this.daysInMonth();\t\t\t\r\n\t\tvar numWeeks = Math.ceil((first + numDays)/7);\r\n\t\t\r\n\t\tvar currDate = null;\r\n\t\tvar dayCount = 1;\r\n\t\tfor(var i=0;i<numWeeks;i++){\r\n\t\t\tweek = document.createElement(\"tr\");\r\n\t\t\tfor(var j=0; j<=6;j++){\r\n\t\t\t\tvar day = document.createElement(\"td\");\r\n\t\t\t\tif(\t(i===0 && first > j) ||\t\t\t\t\t\t\t\t\t\t\t\t\t\t//No imprime los días de la primera semana anteriores al día 1 del mes\r\n\t\t\t\t\t(i===numWeeks-1 && ((first+numDays)%7) > 0 && j >= ((first + numDays)%7))\t// No imprime los días de la última semana posteriores al último día del mes\r\n\t\t\t\t){\r\n\t\t\t\t\t\r\n\t\t\t\t}else{\t\t\t\t\t\t\r\n\t\t\t\t\tday.appendChild(document.createTextNode(dayCount));\r\n\t\t\t\t\tday.id = \"datepicker_d_\"+dayCount;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcurrDate = new Date(this.nuevaFecha.getTime());\r\n\t\t\t\t\tcurrDate.setDate(dayCount);\r\n\t\t\t\t\tif( this.dateInRange(currDate,'day') && !this.dateIsBlocked(currDate) ){\r\n\t\t\t\t\t\tday.className = \"orzk-dp_pickable\";\r\n\t\t\t\t\t\tday.onclick = function(){\r\n\t\t\t\t\t\t\tvar oldDaySelected = document.getElementById(\"datepicker_d_\"+dpInstance.daySelectedTxt.nodeValue);\r\n\t\t\t\t\t\t\tif(oldDaySelected != null){\r\n\t\t\t\t\t\t\t\toldDaySelected.className = oldDaySelected.className.replace(/\\borzk-dp_calendar_day_selected\\b/g,\"\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdpInstance.nuevaFecha.setDate(this.id.substr(13));\r\n\t\t\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tday.className = \"orzk-dp_not_pickable\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdayCount++;\r\n\t\t\t\t}\r\n\t\t\t\tweek.appendChild(day);\r\n\t\t\t}\r\n\t\t\tthis.calendar.appendChild(week);\r\n\t\t}\r\n\t\t\r\n\t\tthis.calendarContainer.appendChild(this.calendar);\r\n\t}\r\n\t\r\n\tprintMonthList (){\r\n\t\tvar dpInstance = this;\r\n\t\tthis.clearCalendarContainer();\r\n\t\t\r\n\t\tthis.monthList = document.createElement(\"table\");\r\n\t\tthis.monthList.className = \"orzk-dp_days\";\r\n\t\tthis.monthList.id = \"dp-month-list\";\r\n\t\tfor(var i = 0; i < 4;i++){\r\n\t\t\tvar row = document.createElement(\"tr\");\r\n\t\t\tfor(var j = 0; j < 3; j++){\r\n\t\t\t\tlet currMonth = i*3 + j;\r\n\t\t\t\tvar element = document.createElement(\"td\");\t\t\t\t\r\n\t\t\t\telement.appendChild(document.createTextNode(this.lang[this.language].monthShort[currMonth]));\r\n\t\t\t\tif(currMonth === this.nuevaFecha.getMonth()){\r\n\t\t\t\t\telement.className = \"orzk-dp_calendar_day_selected\";\r\n\t\t\t\t}\r\n\t\t\t\telement.id = \"datepicker_m_\"+currMonth;\r\n\t\t\t\tvar currDate = new Date(this.nuevaFecha.getTime());\r\n\t\t\t\tcurrDate.setMonth(currMonth);\r\n\t\t\t\t\r\n\t\t\t\tif(this.dateInRange(currDate,'month')){\r\n\t\t\t\t\telement.className += \" orzk-dp_pickable\";\r\n\t\t\t\t\telement.onclick = function(){\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.nuevaFecha.setMonth(currMonth);\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t\t};\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.className = \"orzk-dp_not_pickable\";\r\n\t\t\t\t}\r\n\t\t\t\trow.appendChild(element);\r\n\t\t\t}\r\n\t\t\tthis.monthList.appendChild(row);\r\n\t\t}\r\n\t\t\r\n\t\tthis.calendarContainer.appendChild(this.monthList);\r\n\t}\r\n\t\r\n\tprintYearList (decade){\r\n\t\tvar dpInstance = this;\r\n\t\tthis.clearCalendarContainer();\r\n\t\t\r\n\t\tvar decades = Math.floor(this.nuevaFecha.getFullYear() / 20);\r\n\t\t// Removes the effect of rounding with Math.floor, that caused to show the next twenty years block when the year is multiple of 20.\r\n\t\tif(this.nuevaFecha.getFullYear() % 20 === 0){\r\n\t\t\tdecades--;\r\n\t\t}\r\n\t\tthis.decadeShift = this.decadeShift + decade;\r\n\t\t\r\n\t\tvar minYear = (decades + this.decadeShift) * 20 + 1;\r\n\t\tvar currYear = minYear;\t\t\r\n\t\t\r\n\t\tthis.decadeListContainer = document.createElement(\"div\");\r\n\t\tthis.decadeListContainer.className = \"orzk-dp_decade_list_container\";\r\n\t\tthis.decadeList = document.createElement(\"div\");\r\n\t\tthis.decadeList.className = \"orzk-dp_decade_list\";\r\n\t\tvar decadeListTxt = document.createTextNode(minYear + \" - \" + (minYear+19));\r\n\t\tthis.decadeList.appendChild(decadeListTxt);\r\n\t\t\r\n\t\tvar decadePrev = document.createElement(\"div\");\r\n\t\tdecadePrev.className = \"orzk-dp_arrow orzk-dp_left\";\t\r\n\t\tdecadePrev.id = \"dp_decade_prev\";\r\n\t\tdecadePrev.onclick = function() {\r\n\t\t\tdpInstance.printYearList(-1);\r\n\t\t};\t\r\n\t\t\r\n\t\tvar decadeNext = document.createElement(\"div\");\r\n\t\tdecadeNext.className = \"orzk-dp_arrow orzk-dp_right\";\t\r\n\t\tdecadeNext.id = \"dp_decade_next\";\t\t\r\n\t\tdecadeNext.onclick = function() {\r\n\t\t\tdpInstance.printYearList(1);\r\n\t\t};\r\n\t\tthis.decadeListContainer.appendChild(decadePrev);\r\n\t\tthis.decadeListContainer.appendChild(this.decadeList);\r\n\t\tthis.decadeListContainer.appendChild(decadeNext);\r\n\t\t\r\n\t\tthis.yearList = document.createElement(\"table\");\r\n\t\tthis.yearList.className = \"orzk-dp_days\";\r\n\t\tthis.yearList.id = \"dp-year-list\";\r\n\t\tfor(var i = 0; i < 5; i++){\r\n\t\t\tvar row = document.createElement(\"tr\");\r\n\t\t\tfor(var j=0; j<4;j++){\r\n\t\t\t\tvar element = document.createElement(\"td\");\r\n\t\t\t\telement.appendChild(document.createTextNode(currYear));\r\n\t\t\t\tvar tmp = new Date(this.nuevaFecha.getTime());\r\n\t\t\t\ttmp.setFullYear(currYear);\r\n\t\t\t\tif(this.dateInRange(tmp,\"year\")){\r\n\t\t\t\t\telement.className = \"orzk-dp_pickable\";\r\n\t\t\t\t\tif(currYear === this.nuevaFecha.getFullYear()){\r\n\t\t\t\t\t\telement.className += \" orzk-dp_calendar_day_selected\";\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\telement.id = \"datepicker_y_\"+currYear;\r\n\t\t\t\t\telement.onclick = function(){\t\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.nuevaFecha.setFullYear(this.id.substr(13));\r\n\t\t\t\t\t\tdpInstance.decadeShift = 0;\r\n\t\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t\t};\r\n\t\t\t\t}else{\r\n\t\t\t\t\telement.className += \" orzk-dp_not_pickable\";\r\n\t\t\t\t}\r\n\t\t\t\tcurrYear++;\r\n\t\t\t\trow.appendChild(element);\r\n\t\t\t}\r\n\t\t\tthis.yearList.appendChild(row);\r\n\t\t}\r\n\t\t\r\n\t\tthis.calendarContainer.appendChild(this.decadeListContainer);\r\n\t\tthis.calendarContainer.appendChild(this.yearList);\r\n\t\t\t\r\n\t}\r\n\r\n\r\n\tprintAnalogTime (type){\t\r\n\t\tvar dpInstance = this;\r\n\t\t\r\n\t\tvar pos = this.timeContainer.getBoundingClientRect();\t\t\r\n\t\tvar radius = 110;\r\n\t\tvar sradius = 70;\r\n\t\tvar centerX = (pos.right - pos.left)/2 - radius - 15;\r\n\t\tvar scenterX = (pos.right - pos.left)/2 - sradius - 15;\r\n\t\tvar angle = 360 / 12;\r\n\t\tvar selectedItem = null;\r\n\t\t\r\n\t\tvar pTop, pLeft;\r\n\t\t\r\n\t\t\r\n\t\tthis.clearTimeContainer();\t\r\n\t\tthis.hideClockHand(this.clockHand);\r\n\t\t\r\n\t\tif(type === \"hour\"){\t\t\t\r\n\t\t\tselectedItem = this.nuevaFecha.getHours();\r\n\t\t\tfor(var i = 0; i< 12; i++){\r\n\t\t\t\t// 12h\r\n\t\t\t\tvar h = document.createElement(\"div\");\r\n\t\t\t\th.className = \"orzk-dp_time_element\";\t\t\t\r\n\t\t\t\th.appendChild(document.createTextNode(i+1));\r\n\t\t\t\th.id = \"dp_hourelement_\"+(i+1);\r\n\t\t\t\tpTop = (10 + radius + -radius*Math.cos((i+1)*(angle/180)*Math.PI));\r\n\t\t\t\tpLeft = (centerX + radius + radius*Math.sin((i+1)*(angle/180)*Math.PI));\r\n\t\t\t\th.style.top = pTop+'px';\r\n\t\t\t\th.style.left = pLeft+'px';\r\n\t\t\t\t\r\n\t\t\t\tif(selectedItem === i+1){\r\n\t\t\t\t\th.className += \" orzk-dp_time_item_selected\";\r\n\t\t\t\t\tthis.drawClockHand(this.clockHandSelected,pLeft+15,pTop+15);\r\n\t\t\t\t}\r\n\t\t\t\th.onmouseover = function (e){\r\n\t\t\t\t\tvar pos = this.getBoundingClientRect();\r\n\t\t\t\t\tvar dims = dpInstance.timeContainer.getBoundingClientRect();\r\n\t\t\t\t\tvar x = (pos.left - dims.left) +((pos.right-pos.left)/2)   ;\r\n\t\t\t\t\tvar y = pos.top-dims.top + ((pos.bottom-pos.top)/2);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdpInstance.drawClockHand(dpInstance.clockHand, x,y);\r\n\t\t\t\t\tvar tmpFecha = new Date(dpInstance.nuevaFecha.getTime());\t\t\t\t\t\r\n\t\t\t\t\ttmpFecha.setHours(this.id.substr(15));\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateTime(tmpFecha);\r\n\t\t\t\t};\r\n\t\t\t\th.onmouseout = function(e){\r\n\t\t\t\t\tdpInstance.hideClockHand(dpInstance.clockHand);\r\n\t\t\t\t\tdpInstance.updateTime(dpInstance.nuevaFecha);\r\n\t\t\t\t};\r\n\t\t\t\th.onclick = function(){\r\n\t\t\t\t\tdpInstance.nuevaFecha.setHours(this.id.substr(15));\t\t\t\t\t\r\n\t\t\t\t\tif(dpInstance.timeFormat === 'hm' || dpInstance.timeFormat === 'hms'){\t\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.timeWindow = \"minutes\";\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"minutes\");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdpInstance.updateDisplay();\t\t\t\t\r\n\t\t\t\t};\r\n\t\t\t\tthis.timeContainer.appendChild(h);\r\n\t\t\t\t\r\n\t\t\t\t// 24h\r\n\t\t\t\th = document.createElement(\"div\");\r\n\t\t\t\th.className = \"orzk-dp_time_element\";\r\n\t\t\t\tvar value = i+13;\r\n\t\t\t\tif(value === 24)\r\n\t\t\t\t\tvalue = 0;\r\n\t\t\t\t\r\n\t\t\t\th.appendChild(document.createTextNode(this.padInteger(value,2)));\r\n\t\t\t\th.id = \"dp_hourelement_\"+(value);\r\n\t\t\t\tpTop = (50 + sradius + -sradius*Math.cos((i+1)*(angle/180)*Math.PI));\t\t\t\t\r\n\t\t\t\tpLeft = (scenterX + sradius + sradius*Math.sin((i+1)*(angle/180)*Math.PI));\r\n\t\t\t\th.style.top = pTop+'px';\r\n\t\t\t\th.style.left = pLeft+'px';\r\n\t\t\t\tif(selectedItem === value){\r\n\t\t\t\t\th.className += \" orzk-dp_time_item_selected\";\r\n\t\t\t\t\tthis.drawClockHand(this.clockHandSelected,pLeft+15,pTop+15);\r\n\t\t\t\t}\r\n\t\t\t\th.onmouseover = function (){\r\n\t\t\t\t\tvar pos = this.getBoundingClientRect();\r\n\t\t\t\t\tvar dims = dpInstance.timeContainer.getBoundingClientRect();\r\n\t\t\t\t\tvar x = (pos.left - dims.left) +((pos.right-pos.left)/2)   ;\r\n\t\t\t\t\tvar y = pos.top-dims.top + ((pos.bottom-pos.top)/2);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdpInstance.drawClockHand(dpInstance.clockHand, x,y);\r\n\t\t\t\t\tvar tmpFecha = new Date(dpInstance.nuevaFecha.getTime());\t\t\t\t\t\r\n\t\t\t\t\ttmpFecha.setHours(this.id.substr(15));\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateTime(tmpFecha);\r\n\t\t\t\t};\r\n\t\t\t\th.onmouseout = function(e){\r\n\t\t\t\t\tdpInstance.hideClockHand(dpInstance.clockHand);\r\n\t\t\t\t\tdpInstance.updateTime(dpInstance.nuevaFecha);\r\n\t\t\t\t};\r\n\t\t\t\th.onclick = function(){\r\n\t\t\t\t\tdpInstance.nuevaFecha.setHours(this.id.substr(15));\t\t\t\t\r\n\t\t\t\t\tif(dpInstance.timeFormat === 'hm' || dpInstance.timeFormat === 'hms'){\r\n\t\t\t\t\t\tdpInstance.timeWindow = \"minutes\";\t\t\t\t\r\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"minutes\");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t};\r\n\t\t\t\tthis.timeContainer.appendChild(h);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\t\r\n\t\t\tif(type===\"minutes\"){\r\n\t\t\t\tselectedItem = this.nuevaFecha.getMinutes();\r\n\t\t\t}else if(type===\"seconds\"){\r\n\t\t\t\tselectedItem = this.nuevaFecha.getSeconds();\r\n\t\t\t}\t\t\t\r\n\t\t\t\r\n\t\t\tfor(var i = 0; i< 60; i++){\r\n\t\t\t\tangle = 360/60;\t\r\n\t\t\t\tvar e = document.createElement(\"div\");\r\n\t\t\t\te.className = \"orzk-dp_time_min_element\";\r\n\t\t\t\te.id = \"dp_minuteelement_\"+(i);\r\n\t\t\t\te.style.webkitTransform = 'rotate('+(angle*i)+'deg)'; \r\n\t\t\t\te.style.mozTransform    = 'rotate('+(angle*i)+'deg)'; \r\n\t\t\t\te.style.msTransform     = 'rotate('+(angle*i)+'deg)'; \r\n\t\t\t\te.style.oTransform      = 'rotate('+(angle*i)+'deg)'; \r\n\t\t\t\te.style.transform       = 'rotate('+(angle*i)+'deg)'; \r\n\t\t\t\t\r\n\t\t\t\tif(i%5 === 0){\r\n\t\t\t\t\tvar h = document.createElement(\"div\");\r\n\t\t\t\t\th.id = \"dp_minute_\"+(i);\r\n\t\t\t\t\th.className = \"orzk-dp_time_element\";\t\t\t\t\r\n\t\t\t\t\th.appendChild(document.createTextNode(this.padInteger(i,2)));\t\r\n\t\t\t\t\tpTop = (10 + radius + -radius*Math.cos((i)*(angle/180)*Math.PI));\t\t\t\t\r\n\t\t\t\t\tpLeft = (centerX + radius + radius*Math.sin((i)*(angle/180)*Math.PI));\r\n\t\t\t\t\tif(selectedItem === i){\r\n\t\t\t\t\t\th.className += \" orzk-dp_time_item_selected\";\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\th.style.top = pTop+'px';\r\n\t\t\t\t\th.style.left = pLeft+'px';\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.timeContainer.appendChild(h);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tpTop = (5 + radius + -radius*Math.cos((i)*(angle/180)*Math.PI));\t\t\t\t\r\n\t\t\t\tpLeft = (centerX + 10 + radius + radius*Math.sin((i)*(angle/180)*Math.PI));\r\n\t\t\t\tif(selectedItem === i){\t\t\t\t\r\n\t\t\t\t\tthis.drawClockHand(this.clockHandSelected,pLeft+5,pTop+20);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\te.style.top = pTop+'px';\r\n\t\t\t\te.style.left = pLeft+'px';\r\n\t\t\t\te.onmouseover = function (){\r\n\t\t\t\t\tvar pos = this.getBoundingClientRect();\r\n\t\t\t\t\tvar dims = dpInstance.timeContainer.getBoundingClientRect();\r\n\t\t\t\t\tvar x = (pos.left - dims.left) +((pos.right-pos.left)/2)   ;\r\n\t\t\t\t\tvar y = pos.top-dims.top + ((pos.bottom-pos.top)/2);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdpInstance.drawClockHand(dpInstance.clockHand, x,y);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar tmpFecha = new Date(dpInstance.nuevaFecha.getTime());\r\n\t\t\t\t\tif(type===\"minutes\"){\r\n\t\t\t\t\t\ttmpFecha.setMinutes(this.id.substr(17));\r\n\t\t\t\t\t}else if(type===\"seconds\"){\r\n\t\t\t\t\t\ttmpFecha.setSeconds(this.id.substr(17));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdpInstance.updateTime(tmpFecha);\r\n\t\t\t\t};\r\n\t\t\t\te.onmouseout = function(e){\r\n\t\t\t\t\tdpInstance.hideClockHand(dpInstance.clockHand);\t\r\n\t\t\t\t\tdpInstance.updateTime(dpInstance.nuevaFecha);\r\n\t\t\t\t};\r\n\t\t\t\te.onclick = function(){\r\n\t\t\t\t\tvar id = this.id.substr(17);\r\n\t\t\t\t\tif(dpInstance.timeFormat === 'hm'){\r\n\t\t\t\t\t\tdpInstance.nuevaFecha.setMinutes(id);\r\n\t\t\t\t\t\tdpInstance.timeWindow = \"hour\";\r\n\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\r\n\t\t\t\t\t}else if(dpInstance.timeFormat === 'hms'){\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tif(type===\"minutes\"){\r\n\t\t\t\t\t\t\tdpInstance.nuevaFecha.setMinutes(id);\r\n\t\t\t\t\t\t\tdpInstance.timeWindow = \"seconds\";\r\n\t\t\t\t\t\t\tdpInstance.printAnalogTime(\"seconds\");\r\n\t\t\t\t\t\t}else if(type===\"seconds\"){\r\n\t\t\t\t\t\t\tdpInstance.nuevaFecha.setSeconds(id);\r\n\t\t\t\t\t\t\tdpInstance.timeWindow = \"hour\";\r\n\t\t\t\t\t\t\tdpInstance.printAnalogTime(\"hour\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\tdpInstance.updateDisplay();\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t};\r\n\t\t\t\tthis.timeMinutesContainer.appendChild(e);\r\n\t\t\t\tthis.timeContainer.appendChild(this.timeMinutesContainer);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdrawClockHand (line,x2,y2){\r\n\t\tvar dims = this.timeContainer.getBoundingClientRect();\r\n\t\t\r\n\t\tthis.analogClockSVG.setAttribute('width',dims.right - dims.left);\r\n\t\tthis.analogClockSVG.setAttribute('height',dims.bottom - dims.top);\t\r\n\t\t\r\n\t\tvar x1 = (dims.right - dims.left)/2;\r\n\t\tvar y1 = ((dims.bottom - dims.top)/2)+5;\r\n\t\t\r\n\t\tline.setAttribute('x1',x1);\r\n\t\tline.setAttribute('y1',y1);\r\n\t\tline.setAttribute('x2',x2);\r\n\t\tline.setAttribute('y2',y2);\r\n\t\tline.setAttribute('stroke','#8bb6cf');\r\n\t\tline.setAttribute('stroke-width', 4);\r\n\t}\r\n\r\n\thideClockHand (line){\r\n\t\tline.setAttribute('stroke-width',0);\r\n\t}\r\n\r\n\tclose (){\r\n\t\tthis.initialized = false;\r\n\t\tthis.contenedor.parentNode.removeChild(this.contenedor);\r\n\t}\r\n\t\r\n\tprintDate (){\t\r\n\t\tif(this.inputDate != null && this.showDate === true){\r\n\t\t\tthis.inputDate.value = this.getFullDateString();\r\n\t\t}else{\r\n\t\t}\r\n\t}\r\n\r\n\tgetFullDateString (){\t\r\n\t\tif(this.dpMode === 'date'){\r\n\t\t\treturn this.getDateString(this.fecha);\r\n\t\t}else if(this.dpMode === 'time'){\t\t\t\t\r\n\t\t\treturn this.getTimeString(this.fecha);\r\n\t\t}else{\r\n\t\t\treturn (this.getDateString(this.fecha)+\" \"+this.getTimeString(this.fecha));\t\t\t\t\t\t\t\t\t\r\n\t\t}\t\t\r\n\t}\r\n\t\r\n\tshowCalendar (){\t\r\n\t\tif((this.dpMode === \"datetime\" && this.dpCurrWindow === \"time\") || this.dpMode === \"date\"){\r\n\t\t\tif(this.dpMode === \"datetime\"){\r\n\t\t\t\tthis.timeContainer.className += \" orzk-dp_hide\";\r\n\t\t\t\tthis.analogClockSVG.setAttribute('class','orzk-dp_clock_svg orzk-dp_hide');\r\n\t\t\t\tthis.btnHour.className = this.btnHour.className.replace(/\\borzk-dp_dayhour_button_selected\\b/,\"\");\r\n\t\t\t\tthis.btnCalendar.className += \" orzk-dp_dayhour_button_selected\";\r\n\t\t\t}\r\n\t\t\tthis.calendarContainer.className = this.calendarContainer.className.replace(/\\borzk-dp_hide\\b/,\"\");\r\n\t\t\tthis.dpCurrWindow = \"calendar\";\r\n\t\t\t//this.updateTime(this.nuevaFecha);\r\n\t\t\tthis.updateDisplay();\r\n\t\t}\r\n\t}\r\n\r\n\tshowTime (){\r\n\t\tif((this.dpMode === \"datetime\" && this.dpCurrWindow === \"calendar\") || (this.dpMode === \"time\")){\r\n\t\t\tif(this.dpMode === \"datetime\"){\r\n\t\t\t\tthis.calendarContainer.className += \" orzk-dp_hide\";\r\n\t\t\t\tthis.btnCalendar.className = this.btnCalendar.className.replace(/\\borzk-dp_dayhour_button_selected\\b/,\"\");\r\n\t\t\t\tthis.btnHour.className += \" orzk-dp_dayhour_button_selected\";\r\n\t\t\t}\r\n\t\t\tthis.timeContainer.className = this.timeContainer.className.replace(/\\borzk-dp_hide\\b/,\"\");\t\t\r\n\t\t\tthis.analogClockSVG.setAttribute('class','orzk-dp_clock_svg');\r\n\t\t\tif(this.dpMode === 'datetime'){\r\n\t\t\t\tthis.timeWindow = \"hour\";\r\n\t\t\t\tthis.printAnalogTime(\"hour\");\r\n\t\t\t}else{\r\n\t\t\t\tthis.printAnalogTime(this.timeWindow);\r\n\t\t\t}\r\n\t\t\tthis.dpCurrWindow = \"time\";\r\n\t\t\tthis.updateTime(this.nuevaFecha);\r\n\t\t}\r\n\t}\r\n\r\n\tgetDateString (d){\r\n\t\tvar sep = this.dateFormat.substr(3);\r\n\t\tvar year = d.getFullYear();\r\n\t\tvar month = this.padInteger(d.getMonth()+1,2);\r\n\t\tvar day = this.padInteger(d.getDate(),2);\r\n\t\t\r\n\t\tswitch(this.dateFormat.substr(0,3)){\r\n\t\t\tcase \"ymd\":\r\n\t\t\t\treturn year+sep+month+sep+day;\r\n\t\t\tcase \"ydm\":\r\n\t\t\t\treturn year+sep+day+sep+month;\r\n\t\t\tcase \"mdy\":\r\n\t\t\t\treturn month+sep+day+sep+year;\r\n\t\t\tcase \"dmy\":\r\n\t\t\t\treturn day+sep+month+sep+year;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\t\r\n\r\n\tgetTimeString (d,format=false){\r\n\t\tvar time = '';\r\n\t\tswitch (this.timeFormat.length){\t\t\r\n\t\t\tcase 3:\r\n\t\t\t\tif(format===true && this.dpCurrWindow === \"time\" && this.timeWindow===\"seconds\"){\r\n\t\t\t\t\ttime = ':<span class=\"orzk-dp_time_display_selected\">'+this.padInteger(d.getSeconds(),2)+'</span>';\r\n\t\t\t\t}else{\t\t\t\t\r\n\t\t\t\t\ttime = ':'+this.padInteger(d.getSeconds(),2);\r\n\t\t\t\t}\r\n\t\t\tcase 2:\r\n\t\t\t\tif(format===true && this.dpCurrWindow === \"time\" && this.timeWindow===\"minutes\"){\r\n\t\t\t\t\ttime = ':<span class=\"orzk-dp_time_display_selected\">'+this.padInteger(d.getMinutes(),2)+'</span>' + time;\r\n\t\t\t\t}else{\t\t\r\n\t\t\t\t\ttime = ':'+this.padInteger(d.getMinutes(),2) + time;\r\n\t\t\t\t}\r\n\t\t\tcase 1:\r\n\t\t\t\tif(this.timeFormat === 'h'){\r\n\t\t\t\t\ttime += \":00\";\r\n\t\t\t\t}\r\n\t\t\t\tif(format===true && this.dpCurrWindow === \"time\" && this.timeWindow===\"hour\"){\r\n\t\t\t\t\ttime = '<span class=\"orzk-dp_time_display_selected\">'+this.padInteger(d.getHours(),2)+'</span>'\t+ time;\r\n\t\t\t\t}else{\t\t\r\n\t\t\t\t\ttime = this.padInteger(d.getHours(),2) + time;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\treturn time;\r\n\t}\r\n\r\n\tupdateTime (d){\t\r\n\t\tthis.timeTxt.innerHTML = this.getTimeString(d,true);\t\r\n\t}\r\n\r\n\tgetDate (){\r\n\t\tif(this.fecha !== null){\r\n\t\t\treturn new Date(this.fecha.getTime());\r\n\t\t}else{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tcreateDate (d){\r\n\t\tif(this.isDate(d)){\r\n\t\t\treturn d;\r\n\t\t}else{\t\t\r\n\t\t\tif(typeof(d) === 'string'){\r\n\t\t\t\tvar sep = this.dateFormat.substr(3);\t\t\t\r\n\t\t\t\tvar fecha = [];\r\n\t\t\t\tvar hora = [];\r\n\t\t\t\t\r\n\t\t\t\tif(this.dpMode === 'date'){\r\n\t\t\t\t\tfecha = d.split(sep);\r\n\t\t\t\t\tif(fecha.length !== 3){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\thora = [0,0,0,0];\r\n\t\t\t\t}else if(this.dpMode === 'datetime'){\r\n\t\t\t\t\tvar fh = d.split(\" \");\r\n\t\t\t\t\tif(fh.length > 2){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfecha = fh[0].split(sep);\r\n\t\t\t\t\tif(fh.length === 2){\r\n\t\t\t\t\t\thora = fh[1].split(\":\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(fecha.length !== 3){\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(var i = 0; i< 4; i++){\r\n\t\t\t\t\t\tif(typeof(hora[i]) == \"undefined\" || this.timeFormat.length <= i){\r\n\t\t\t\t\t\t\thora.push(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfecha = new Date();\r\n\t\t\t\t\thora = d.split(\":\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var i = 0; i< 4; i++){\r\n\t\t\t\t\t\tif(typeof(hora[i]) == \"undefined\" || this.timeFormat.length <= i){\r\n\t\t\t\t\t\t\thora.push(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfecha.setHours(hora[0],hora[1],hora[2],hora[3]);\t\t\t\t\r\n\t\t\t\t\treturn fecha;\r\n\t\t\t\t\t\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tswitch(this.dateFormat.substr(0,3)){\r\n\t\t\t\t\tcase \"ymd\":\t\t\t\t\t\r\n\t\t\t\t\t\treturn new Date(fecha[0],fecha[1]-1,fecha[2],hora[0],hora[1],hora[2],hora[3]);\r\n\t\t\t\t\tcase \"ydm\":\r\n\t\t\t\t\t\treturn new Date(fecha[0],fecha[2]-1,fecha[1],hora[0],hora[1],hora[2],hora[3]);\r\n\t\t\t\t\tcase \"dmy\":\t\t\t\t\t\r\n\t\t\t\t\t\treturn new Date(fecha[2],fecha[1]-1,fecha[0],hora[0],hora[1],hora[2],hora[3]);\r\n\t\t\t\t\tcase \"mdy\":\t\t\t\t\t\r\n\t\t\t\t\t\treturn new Date(fecha[2],fecha[0]-1,fecha[1],hora[0],hora[1],hora[2],hora[3]);\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetStartDate (){\r\n\t\tvar result = new Date();\r\n\t\t\r\n\t\tif(this.inputDate !== null){\t\t\t\r\n\t\t\tif(this.inputDate.value.length > 0){\r\n\t\t\t\tvar result = this.createDate(this.inputDate.value);\t\t\t\t\r\n\t\t\t\tif(result !== false){\r\n\t\t\t\t\tif(!this.isDate(result)){\r\n\t\t\t\t\t\tresult = new Date();\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.error.push(this.lang[this.language].errDateFormat);\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n\tsetDate (d){\r\n\t\tif(this.isDate(d)){\r\n\t\t\tthis.fecha = new Date(d.getTime());\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tonSubmit (){\r\n\t\tthis.printDate();\r\n\t}\r\n\r\n\tpadInteger (number,max){\r\n\t\tif(number < Math.pow(10,(max-1))){\r\n\t\t\tvar z = '';\r\n\t\t\tfor(var i = 0;i< max; i++)\r\n\t\t\t\tz += '0';\r\n\t\t\tnumber = (z + number).slice(max*-1);\r\n\t\t}\r\n\t\treturn number;\r\n\t}\r\n\r\n\trad2deg (x){\r\n\t\treturn x * (180/Math.PI);\r\n\t}\r\n\r\n\tdeg2rad (x){\r\n\t\treturn x * (Math.PI/180);\r\n\t};\r\n\r\n\r\n\t// Checks if a date object contains is a valid date\r\n\tisDate (date) {\r\n\t\treturn date && Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date);\r\n\t};\r\n\r\n\t// Checks if a date is allowed comparing it with the min and max dates, and the restricted dates list\r\n\tdateInRange (date,type){\r\n\t\t\r\n\t\tif(type === \"year\"){\t\t\t\r\n\t\t\tif(\t(this.minDate == null || (this.minDate.getFullYear() <= date.getFullYear()) ) &&\r\n\t\t\t\t(this.maxDate == null || (this.maxDate.getFullYear() >= date.getFullYear()) ) ){\t\t\t\t\r\n\t\t\t\t\treturn true;\r\n\t\t\t}else{\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tif(type === 'month'){\t\t\r\n\t\t\t\r\n\t\t\tvar tmpdate = new Date(date.getFullYear(),date.getMonth());\r\n\t\t\tvar tmpmindate = null;\r\n\t\t\tvar tmpmaxdate = null;\r\n\t\t\t\r\n\t\t\tif(this.minDate !== null)\t\t\r\n\t\t\t\ttmpmindate = new Date(this.minDate.getFullYear(),this.minDate.getMonth());\r\n\t\t\t\r\n\t\t\tif(this.maxDate !== null)\r\n\t\t\t\ttmpmaxdate = new Date(this.maxDate.getFullYear(),this.maxDate.getMonth());\r\n\t\t\t\r\n\t\t\tif( (tmpmindate === null || (tmpdate >= tmpmindate)) &&\r\n\t\t\t\t(tmpmaxdate === null || (tmpdate <= tmpmaxdate)) )\r\n\t\t\t{\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\tif(type === 'day'){\r\n\t\t\tif( (this.minDate == null || (this.minDate != null && date >= this.minDate)) && \r\n\t\t\t\t(this.maxDate == null || (this.maxDate != null && date <= this.maxDate)) )\r\n\t\t\t{\t\t\t\r\n\t\t\t\treturn true;\r\n\t\t\t}else{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tdateIsBlocked (date){\r\n\t\t// Checks if the date is one of the blocked days\r\n\t\tif(this.blockdays.length > 0 && this.blockdays.indexOf(date.getDay()) > -1){\r\n\t\t\treturn true;\r\n\t\t}\t\r\n\t\t\r\n\t\tvar tmpdate = new Date(date.getTime());\r\n\t\ttmpdate.setHours(0,0,0,0);\r\n\t\t\r\n\t\t// Checks if the date is in the list of blocked dates\r\n\t\tfor(var i = 0; i< this.blockDates.length; i++){\r\n\t\t\tif(this.blockDates[i].length === 1){\t\t\t\r\n\t\t\t\tvar tmp = this.blockDates[i][0];\r\n\t\t\t\tif (tmp.getFullYear() === date.getFullYear() &&\r\n\t\t\t\t\ttmp.getMonth() === date.getMonth() &&\r\n\t\t\t\t\ttmp.getDate() === date.getDate()){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\t\r\n\t\t\t\tif(tmpdate.getTime() >= this.blockDates[i][0].getTime() && (tmpdate.getTime() <= this.blockDates[i][1].getTime())){\t\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n/* Exports public methods for Google Closure Compiler */\r\n/*\r\nwindow['Datepicker'] = Datepicker;\r\nDatepicker.prototype['show'] = Datepicker.prototype.show;\r\nDatepicker.prototype['reset'] = Datepicker.prototype.reset;\r\nDatepicker.prototype['close'] = Datepicker.prototype.close;\r\nDatepicker.prototype['setOptions'] = Datepicker.prototype.setOptions;\r\nDatepicker.prototype['getDate']\t= Datepicker.prototype.getDate;\r\nDatepicker.prototype['setDate']\t= Datepicker.prototype.setDate;\t\r\nDatepicker.prototype['setStartDate']\t= Datepicker.prototype.setStartDate;\t\r\nDatepicker.prototype['printDate'] =\tDatepicker.prototype.printDate;\r\nDatepicker.prototype['onSubmit'] = Datepicker.prototype.onSubmit;\r\nDatepicker.prototype['getFullDateString'] = Datepicker.prototype.getFullDateString;\r\nDatepicker.prototype['isDate'] = Datepicker.prototype.isDate;*/","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\tests\\mocks\\browser.js",[],["375","376"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\handlers\\tasks.ts",["377"],"import { rest } from 'msw'\r\nimport { isEmpty } from 'lodash'\r\nimport { TaskDetail, TaskObject } from '../../../../domain/task'\r\nimport { getTaskerRepository, FileDownload } from '../../../../application/taskerRepository'\r\nimport { ApiResponse, ApiResponseBuilder } from '../../../../domain/api-response'\r\nimport { ISOStringToFormatedDate } from '../../../../../lib/date.utils'\r\n\r\nexport const taskHandlers = [\r\n    rest.post('http://localhost:3000/api/tasks',(req, res, ctx) => { \r\n        const filters = req.body ? req.body as Partial<TaskDetail> : {}  \r\n        const tasks: Array<TaskObject> = getTaskerRepository().getTasks(filters)\r\n        \r\n        const response : ApiResponse = {\r\n            status: 200,\r\n            hasError: false,\r\n            data: tasks\r\n        } \r\n        return res(\r\n            ctx.status(200),\r\n            ctx.json(response)\r\n        )\r\n    }),\r\n    rest.get('http://localhost:3000/api/tasks/:taskid',(req, res, ctx) => {  \r\n        const taskid = req.params.taskid || '';\r\n\r\n        const task = getTaskerRepository().getTaskById(taskid)\r\n        \r\n        if(task.task){            \r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,task,false))\r\n            )\r\n        }else{\r\n            return res(\r\n                ctx.status(404, 'La tarea no existe'),\r\n                ctx.json(ApiResponseBuilder(404,{},true,'La tarea no existe'))\r\n            )            \r\n        }\r\n    }),\r\n\r\n    rest.post('http://localhost:3000/api/tasks/add',(req,res,ctx) =>{\r\n        try{\r\n            const task: TaskDetail | null = req.body ? req.body as TaskDetail : null\r\n\r\n            if(isEmpty(task.id)) {\r\n                task.id = getTaskerRepository().newId('tasks')\r\n            }else{\r\n                throw new Error('Una tarea nueva no puede contener un valor en el campo \"id\"')\r\n            }\r\n            \r\n            task.createdDate = ISOStringToFormatedDate(new Date().toISOString())\r\n            let result = getTaskerRepository().addTask(task)\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,result,false))\r\n            )\r\n        }catch(e){\r\n            return res(\r\n                ctx.status(500),\r\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\r\n            )\r\n        }\r\n    }),\r\n\r\n    rest.delete('http://localhost:3000/api/tasks/delete/:taskid', (req,res,ctx) => {\r\n        try{\r\n            const taskid = req.params.taskid || '';\r\n            if(taskid === ''){\r\n                return res(\r\n                    ctx.status(400),\r\n                    ctx.json(ApiResponseBuilder(400,{},true,'Id de tarea no válida'))\r\n                )\r\n            }else{            \r\n                let result = getTaskerRepository().deleteTask(taskid)\r\n                return res(\r\n                    ctx.status(200),\r\n                    ctx.json(ApiResponseBuilder(200,result,false))\r\n                )\r\n            }\r\n        }catch(e){\r\n            return res(\r\n                ctx.status(500),\r\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\r\n            )\r\n        }\r\n    }),\r\n\r\n    rest.put('http://localhost:3000/api/tasks/update', (req, res, ctx) => {\r\n        try{\r\n            const task: TaskDetail | null = req.body ? req.body as TaskDetail : null\r\n            if(isEmpty(task.id)) {\r\n                throw new Error('Es necesario proporcionar el id de la tarea a editar')\r\n            }\r\n            \r\n            let result: TaskObject = getTaskerRepository().updateTask(task)\r\n            return res(\r\n                ctx.status(200),\r\n                ctx.json(ApiResponseBuilder(200,result,false))\r\n            )\r\n        }catch(e){\r\n            return res(\r\n                ctx.status(500),\r\n                ctx.json(ApiResponseBuilder(500,{},true,e.message))\r\n            )\r\n        }\r\n    }),\r\n]","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\loaddb.component.tsx",["378","379","380","381"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport '../../App.css';\r\nimport { font, color } from '../../styles/theme';\r\nimport { Spinner } from '../components/common/spinner'\r\nimport { BlockContainer, BlockHeaderComponent} from '../components/common/block'\r\nimport { FormBuilder } from '../components/common/form/form'\r\nimport { FaCheck, FaArrowLeft} from 'react-icons/fa'\r\nimport { importDb, importForm } from '../../application/importDatabase'\r\nimport { newDb } from '../../application/newDatabase'\r\nimport { SyncStateContext } from '../../application/contexts/dbSyncContext'\r\n\r\nconst SetupButtons = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 1rem;\r\n    padding: 1.5rem;\r\n`\r\nconst Button = styled.button`\r\n    padding: 1rem;\r\n    justify-content: center;\r\n    background-color: ${color.lightBlue};\r\n    color: ${color.white};\r\n    min-width: 30%;\r\n`\r\nexport const LoadDB = () => {\r\n    const syncCtx = React.useContext(SyncStateContext)\r\n    const {setSync} = syncCtx\r\n\r\n    const [title, setTitle] = React.useState<string>('Base de datos')\r\n    const [error, setError] = React.useState<Error | null>(null)\r\n    const [loading, setLoading] = React.useState<boolean>(false)\r\n    const [submitSuccess, setSubmitSuccess] = React.useState<boolean>(false)\r\n    const [submitError, setSubmitError] = React.useState<Error | null>(null)\r\n    const [setupView, setSetupView] = React.useState<string>('select')\r\n\r\n    const renderView = (): string => {\r\n        if(setupView === 'newDB'){\r\n            return 'newDB'\r\n        }else if(setupView === 'importDB'){\r\n            return 'importDB'\r\n        }else{\r\n            return 'select'\r\n        }\r\n    } \r\n    \r\n    const backButton = () => {\r\n        setSetupView('select')\r\n    }\r\n\r\n    const newEmptyDatabase = () => {\r\n        setLoading(true)\r\n        newDb().then(\r\n            result => {\r\n                setLoading(false)\r\n                if(result.hasError){\r\n                    setSubmitError(error)                    \r\n                }else{\r\n                    setSubmitSuccess(true)\r\n                    setSync({existsDb: true})\r\n                    \r\n                }                \r\n            },\r\n            error => {\r\n                setSubmitError(error)\r\n                setLoading(false)\r\n            }\r\n        )\r\n    }\r\n    let formItems = \r\n         [            \r\n            {\r\n                type: 'file',\r\n                id: 'dbfile',\r\n                label: 'Importar database'\r\n            },            \r\n            {\r\n                type: 'buttons',\r\n                buttons: [\r\n                    {        \r\n                        id: 'submitBtn',\r\n                        type: 'submit',\r\n                        icon: FaCheck,\r\n                        label: 'Guardar',\r\n                        className: 'form-button-submit button-icon'\r\n                    },\r\n                    {        \r\n                        id: 'cancelBtn',\r\n                        type: 'button',\r\n                        icon: FaArrowLeft,\r\n                        label: 'Volver',\r\n                        onClick: backButton,\r\n                        className: 'button-icon'\r\n                    }\r\n                ]\r\n            }            \r\n         ]\r\n\r\n    let initialValues = {dbfile: null}\r\n\r\n    \r\n    const validate = (values: Partial<importForm>) => {\r\n        const errors: any = {}\r\n        if(!values.dbfile){\r\n            errors.dbfile = 'Debes seleccionar un archivo'\r\n        }\r\n       \r\n        return errors\r\n    }\r\n\r\n    const onSubmit = (values: importForm) => {\r\n        setLoading(true)\r\n        importDb(values).then(\r\n            result => {\r\n                setLoading(false)\r\n                if(result.hasError){\r\n                    setSubmitError(error)\r\n                }else{\r\n                    setSubmitSuccess(true)\r\n                    setSync({existsDb: true})\r\n                }                \r\n            },\r\n            error => {\r\n                setSubmitError(error)\r\n                setLoading(false)\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <>            \r\n            <BlockContainer> \r\n            <BlockHeaderComponent \r\n                title=\"Crear base de datos\"\r\n            />  \r\n            {loading ? <Spinner /> : ''}            \r\n           \r\n            {submitSuccess &&                \r\n                <div aria-label='success-message' className='message-success'>                    \r\n                    La base de datos se ha importado correctamente\r\n                </div>  \r\n            }\r\n            {submitError &&\r\n                <div aria-label='error-message' className='message-error'>{submitError.message}</div>\r\n            }\r\n            \r\n            {renderView() === 'select' &&\r\n                <SetupButtons>\r\n                    <Button onClick={newEmptyDatabase}>Nueva base de datos</Button>\r\n                    <Button onClick={() => {setSetupView('importDB')}}>Importar base de datos</Button>\r\n                </SetupButtons>\r\n                \r\n            }\r\n\r\n            {renderView() === 'importDB' &&\r\n                <FormBuilder \r\n                    key = \"setupForm\"\r\n                    formView = \"form\"\r\n                    formItems = {formItems}\r\n                    initValues = {initialValues}\r\n                    validation = {validate}\r\n                    onSubmit = {onSubmit}\r\n                />\r\n            }\r\n            \r\n        </BlockContainer>\r\n        </>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\tasks\\task-detail.component.tsx",["382","383","384","385","386","387"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\isSyncedDatabase.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\getWorklog.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\updateTask.ts",[],["388","389"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\block-actions.tsx",["390","391","392"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { color, font, common } from '../../../styles/theme'\r\nimport { IconLink, IconButton } from '../common/icon-button'\r\nimport { IconType} from 'react-icons'\r\nimport { FormBuilder } from '../common/form/form'\r\n\r\nconst BlockActionsContainer = styled.div`\r\n    display: flex;\r\n    background-color: ${color.lightGrey};\r\n    padding: 0.5rem;\r\n    flex-wrap: wrap;\r\n    flex-direction: row;\r\n`\r\nexport interface Action {\r\n    key: string\r\n    route: string\r\n    text: string\r\n    icon: IconType | null\r\n    handler: any\r\n    type?: string\r\n    view?: string\r\n    items?: Array<Action>\r\n    initValues?: Partial<Action>\r\n    validation?: object\r\n    onSubmit?: object\r\n}\r\n\r\nexport const BlockActions = (props) => {\r\n    const [actions,setActions] = React.useState<Array<Action>>(props.actions || [])    \r\n  \r\n    React.useEffect(() => {\r\n        setActions(props.actions)\r\n    },[props.actions])\r\n\r\n    return (\r\n        <BlockActionsContainer>\r\n            {\r\n                (actions && actions.length > 0) ?\r\n                    actions.map((action: Action) => {                \r\n                        if(!action.type || action.type === 'link'){\r\n                            return (                                \r\n                                <IconLink \r\n                                    key={action.text}\r\n                                    route={action.route}\r\n                                    text={action.text}\r\n                                    icon={action.icon}\r\n                                />\r\n                            )\r\n                        }else if(action.type === 'button'){\r\n                            return (\r\n                                <IconButton \r\n                                    key={action.text}\r\n                                    text={action.text}\r\n                                    icon={action.icon}\r\n                                    onClick={action.handler}\r\n                                />\r\n                            )\r\n                        }else if(action.type === 'form'){\r\n                            return (\r\n                                <FormBuilder \r\n                                    key = {action.key }\r\n                                    formView = {action.view}\r\n                                    formItems = {action.items}\r\n                                    initValues = {action.initValues}\r\n                                    validation = {action.validation}\r\n                                    onSubmit = {action.onSubmit}\r\n                                />\r\n                            )\r\n                        }                        \r\n                    })\r\n                    :\r\n                    ''\r\n            }\r\n        </BlockActionsContainer>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\form\\form.tsx",["393","394","395","396","397","398","399","400","401","402"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { color, common } from '../../../../styles/theme';\r\nimport { Formik, Form, Field, useField, useFormikContext } from 'formik'\r\nimport { IconButton, IconLink } from '../icon-button'\r\nimport { ModalWithComponent } from '../modal'\r\n\r\nimport { FaCalendar } from 'react-icons/fa'\r\nimport  {Datepicker}  from '../../../../../lib/orzkDatepicker/datepicker'\r\nimport '../../../../../lib/orzkDatepicker/datepicker.css'\r\n\r\nexport const FormActionBarWrapper = styled(Form)`\r\n    display: inline-flex;\r\n    flex-direction: row;\r\n    color: ${color.black};\r\n`\r\n\r\nexport const FormWrapper = styled(Form)`\r\n    display: flex;\r\n    flex-direction: column;    \r\n    color: ${color.black};\r\n    margin: 1rem;\r\n`\r\nexport const FormItemWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin: 0.5rem;\r\n`\r\nexport const FormButtons = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    margin: 1rem;\r\n    gap: 1rem;\r\n\r\n`\r\n\r\nexport const FormInputWithIconWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    border-width: 1px;\r\n    border-color: ${color.grey};\r\n    border-style: solid;\r\n    ${common.roundedCorners()};\r\n    \r\n    & > input {\r\n        width: 100%;\r\n        border-style: none !important;\r\n        padding: 0.5rem;\r\n        ${common.roundedCorners()};\r\n        margin: 0;\r\n    }\r\n`\r\nexport const FormInputIcon = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    padding: 0 .5rem;\r\n    transition: background-color .3s;\r\n    color: ${color.darkGrey} !important;\r\n    background-color: ${color.lightGrey};\r\n    ${common.roundedCornersLeft()}  \r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        background-color: ${color.semiLightGrey};\r\n    }\r\n`\r\n\r\nexport const FormSelectIcon = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    white-space: nowrap;\r\n    padding: 0 .5rem;\r\n    transition: background-color .3s;\r\n    color: ${color.white} !important;\r\n    background-color: #3333f1;\r\n    ${common.roundedCornersLeft()}  \r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        background-color: #5555ff;\r\n    }\r\n`\r\n\r\nexport const FormTextInput :React.FC<any> = ({label, ...props}) => {\r\n    const [field, meta] = useField(props)\r\n   \r\n    return (\r\n        <FormItemWrapper>\r\n            {label && <label htmlFor={props.id || props.name}>{label}</label>}\r\n            <Field {...field} {...props} aria-label={props.id || props.name}/>\r\n            {meta.touched && meta.error ? (\r\n                <div aria-label={'validate_' + (props.id || props.name)} className=\"form-item-error\">{meta.error}</div>\r\n            ): null}\r\n        </FormItemWrapper>\r\n    )\r\n}\r\n\r\nexport const FormSelectFromComponent : React.FC<any> = ({label, buttonLabel, selectedLabel, component, resultHandler, ...props}) => {\r\n    const [field, meta, {setValue, setTouched}] = useField(props)\r\n    const [isOpened, setIsOpened] = React.useState<boolean>(false)\r\n    const [selectLabel, setSelectLabel] = React.useState<string>(props.selectedLabel || '')\r\n\r\n    React.useEffect(()=> {\r\n        setSelectLabel(selectedLabel)\r\n    },[selectedLabel])\r\n\r\n    const hideWidget = () => {\r\n        setIsOpened(false)\r\n    }\r\n    const showWidget = () => {\r\n        setIsOpened(true)\r\n    }\r\n    const selectResultHandler = (result: any) => {\r\n        let processed = resultHandler(result)\r\n        setValue(processed.value)\r\n        setSelectLabel(processed.label)\r\n        setTouched(true)\r\n        setIsOpened(false)\r\n    }\r\n    return (\r\n        <FormItemWrapper>\r\n            <ModalWithComponent\r\n                isOpened={isOpened} \r\n                onClose={hideWidget}\r\n                component={component}\r\n                resultHandler={selectResultHandler}\r\n                 />\r\n            <label htmlFor={props.id || props.name} >{label}</label>\r\n            <input type=\"hidden\" name={props.id} />\r\n            <FormInputWithIconWrapper >                \r\n                <FormSelectIcon onClick={showWidget}>{buttonLabel}</FormSelectIcon>\r\n                <Field type=\"hidden\" {...field} {...props} />\r\n                <input \r\n                    type=\"text\" \r\n                    id={\"select_label_\"+props.id}\r\n                    name={\"select_label_\"+props.id}\r\n                    value={selectLabel}\r\n                    aria-label={\"select_label_\"+props.id}\r\n                    readOnly\r\n                />\r\n            </FormInputWithIconWrapper>\r\n            {meta.touched && meta.error ? (\r\n                <div aria-label={'validate_' + (props.id || props.name)} className=\"form-item-error\">{meta.error}</div>\r\n            ): null}\r\n        </FormItemWrapper>\r\n    )\r\n}\r\n\r\nexport const FormDateInput2 :React.FC<any> = ({label, minDate, maxDate, ...props}) => {\r\n    const [field, meta, {setValue, setTouched}] = useField(props)\r\n    const [dp, setDp] = React.useState(null)\r\n    \r\n    const showDp = () => {\r\n        dp.show()\r\n    }\r\n    \r\n    React.useEffect(()=> {\r\n        let options : any = {\r\n            lang: 'es'\r\n        }\r\n        if(props.minDate){\r\n            options.minDate = props.minDate\r\n        }\r\n        if(props.maxDate){\r\n            options.maxDate = props.maxDate\r\n        }\r\n        let picker : Datepicker = new Datepicker(props.id,label,options)\r\n        picker.onSubmit = function(){\r\n            setValue(this.getFullDateString())\r\n            setTouched(true)\r\n        }\r\n        setDp(picker)\r\n    },[])\r\n    \r\n    return (\r\n        <FormItemWrapper>\r\n            <label htmlFor={props.id || props.name} >{label}</label>\r\n            <FormInputWithIconWrapper >                \r\n                <FormInputIcon onClick={showDp}><FaCalendar/></FormInputIcon>\r\n                <Field \r\n                    {...field} \r\n                    {...props}\r\n                    aria-label={props.id || props.name}\r\n                />\r\n            </FormInputWithIconWrapper>\r\n            {meta.touched && meta.error ? (\r\n                <div aria-label={'validate_' + (props.id || props.name)} className=\"form-item-error\">{meta.error}</div>\r\n            ): null}\r\n        </FormItemWrapper>\r\n    )\r\n}\r\n\r\nexport const FormDateInput :React.FC<any> = ({label, icon, handler, dateText, ...props}) => {\r\n    const [field, meta, {setValue, setTouched}] = useField(props)\r\n    const [inputIcon, setInputIcon] = React.useState(null)\r\n\r\n    React.useEffect(()=> {\r\n        setInputIcon(icon)\r\n    },[])\r\n    React.useEffect(()=>{ \r\n        setValue(dateText)\r\n        setTouched(true)\r\n    },[dateText])\r\n\r\n    return (\r\n        <FormItemWrapper>\r\n            <label htmlFor={props.id || props.name}>{label}</label>\r\n            <FormInputWithIconWrapper >\r\n                {inputIcon ?\r\n                    <FormInputIcon key={props.id || props.name + '_icon'} onClick={handler}>{inputIcon}</FormInputIcon>\r\n                    :\r\n                    ''\r\n                }\r\n                <Field \r\n                    {...field} \r\n                    {...props}    \r\n                    aria-label={props.id || props.name}\r\n                />\r\n            </FormInputWithIconWrapper>\r\n            {meta.touched && meta.error ? (\r\n                <div aria-label={'validate_' + (props.id || props.name)} className=\"form-item-error\">{meta.error}</div>\r\n            ): null}\r\n        </FormItemWrapper>\r\n    )\r\n}\r\n\r\nexport const FormSelect: React.FC<any> = ({ label, selOptions, ...props }) => {\r\n    const [field, meta] = useField(props);  \r\n    \r\n    return ( \r\n        <FormItemWrapper>\r\n            <label htmlFor={props.id || props.name}>{label}</label> \r\n            <Field as=\"select\" {...field} {...props} aria-label={props.id || props.name}>\r\n                {selOptions &&\r\n                    selOptions.map((item) =>\r\n                        <option key={item.value} value={item.value}>{item.label}</option>\r\n                    )\r\n                }\r\n            </Field> \r\n            {meta.touched && meta.error ? ( \r\n                <div aria-label={'validate_' + (props.id || props.name)} className=\"form-item-error\">{meta.error}</div> \r\n            ) : null} \r\n        </FormItemWrapper>\r\n    ); \r\n  };\r\n\r\n  export const FormFileupload: React.FC<any> = ({label, ...props}) => {\r\n      const [field, meta,{setValue,setTouched}] = useField(props)\r\n      const {setFieldValue} = useFormikContext()\r\n      \r\n        return(\r\n            <FormItemWrapper>\r\n                {label && <label htmlFor={props.id || props.name}>{label}</label>}            \r\n                <input \r\n                    {...props}\r\n                    type=\"file\" \r\n                    onChange={(event)=>{\r\n                        setFieldValue(props.id,event.currentTarget.files[0])\r\n                    }}\r\n                    key={props.key}\r\n                    name={props.name}            \r\n                    aria-label={props.id || props.name} />\r\n                {meta.touched && meta.error ? (\r\n                    <div aria-label={'validate_' + (props.id || props.name)} className=\"form-item-error\">{meta.error}</div>\r\n                ): null}\r\n            </FormItemWrapper>\r\n        )\r\n  }\r\n  export interface TaskFilterForm {\r\n      search: string\r\n      minDate: Date\r\n      maxDate: Date\r\n      orderBy: string      \r\n  }\r\n\r\n  export interface FormItemType {\r\n        type: 'text' | 'date' | 'select' | 'button' | 'checkbox' | 'textarea' | 'number' | 'submit' | 'reset'\r\n        id: string\r\n        label: string\r\n        icon?: any\r\n        handler?: any\r\n        dateText?: any\r\n        placeholder?: string\r\n        selectOptions?: any\r\n        className?: string\r\n  }\r\n\r\n  export interface FormTextType extends FormItemType{\r\n        placeholder: string\r\n  }\r\n\r\n  export interface FormDateType extends FormItemType{\r\n        icon: any\r\n        handler: any\r\n        dateText: any\r\n  }\r\n\r\n  export interface FormSelectType extends FormItemType{\r\n        selectOptions: any      \r\n  }\r\n  export interface FormButtonType extends FormItemType{\r\n        className: string\r\n  }\r\n\r\n\r\n  //export const FormBuilder: React.FC<any> = ({formView, formItems, initValues, validation, onSubmit, ...props}) => {\r\nexport const FormBuilder: React.FC<any> = (props) => {\r\n      const [items, setItems] = React.useState(props.formItems || null)\r\n      const [view, setView ] = React.useState(props.formView || null)\r\n\r\n      React.useEffect(() => {\r\n        setItems(props.formItems)\r\n      },[])\r\n\r\n      return (\r\n          <>\r\n          {view === 'actionBar' ?\r\n            \r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={props.initValues}               \r\n                validate = {props.validation}\r\n                onSubmit = {(values,{setSubmitting, resetForm}) => {  \r\n                    props.onSubmit(values,{setSubmitting, resetForm})\r\n                }}            \r\n            >\r\n                {(props) =>  {\r\n                    return (                           \r\n                        <FormActionBarWrapper>\r\n                            {\r\n                                items.map((item) => {\r\n                                    if(item.type === 'text'){                                        \r\n                                        return(\r\n                                            <FormTextInput \r\n                                                name={item.id}\r\n                                                id={item.id}\r\n                                                key={item.id}\r\n                                                type=\"text\"\r\n                                                placeholder={item.placeholder}                           \r\n                                            />\r\n                                        )\r\n                                    }else if(item.type === 'date'){\r\n                                        return (\r\n                                            <FormDateInput \r\n                                                    label={item.label}\r\n                                                    name={item.id}\r\n                                                    key={item.id}\r\n                                                    type=\"text\"\r\n                                                    id={item.id}\r\n                                                    icon={item.icon}\r\n                                                    handler={item.handler}   \r\n                                                    dateText={item.dateText}                    \r\n                                                />   \r\n                                        )\r\n                                    }else if(item.type === 'select'){\r\n                                        return (\r\n                                            <FormSelect\r\n                                                label={item.label}\r\n                                                selOptions={item.selectOptions}\r\n                                                name={item.id}\r\n                                                id={item.id}\r\n                                                key={item.id}        \r\n                                            />   \r\n                                        )\r\n                                    }else if(item.type === 'file'){\r\n                                        return(\r\n                                            <FormFileupload\r\n                                                label={item.label}\r\n                                                id={item.id}\r\n                                                name={item.id}\r\n                                                key={item.id}\r\n                                                onChange={item.onChange}                                      \r\n                                            />\r\n                                        )\r\n                                    \r\n                                    }else if(item.type === 'submit'){\r\n                                        return (\r\n                                            <IconButton\r\n                                                    key={item.id}\r\n                                                    text={item.label}\r\n                                                    icon={item.icon}\r\n                                                    type=\"submit\"\r\n                                                    className={item.className}\r\n                                                />\r\n                                        )\r\n                                    }\r\n                                })\r\n                            }\r\n                        </FormActionBarWrapper>                        \r\n                    )\r\n                }}\r\n            </Formik>  \r\n            :\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={props.initValues}               \r\n                validate = {props.validation}\r\n                onSubmit = {(values,{setSubmitting, resetForm}) => {\r\n                    props.onSubmit(values,{setSubmitting, resetForm})\r\n                }}            \r\n            >\r\n                {props =>  {\r\n                    return (                           \r\n                        <FormWrapper>\r\n                            {\r\n                                items.map((item) => {\r\n                                    if(item.type === 'text'){                                        \r\n                                        return(\r\n                                            <FormTextInput \r\n                                                id={item.id}\r\n                                                name={item.id}\r\n                                                key={item.id}\r\n                                                type=\"text\"\r\n                                                label={item.label}\r\n                                                placeholder={item.placeholder}                           \r\n                                            />\r\n                                        )\r\n                                    }else if(item.type === 'date'){\r\n                                        return (\r\n                                            <FormDateInput \r\n                                                    label={item.label}\r\n                                                    name={item.id}\r\n                                                    key={item.id}\r\n                                                    type=\"text\"\r\n                                                    id={item.id}\r\n                                                    icon={item.icon}\r\n                                                    handler={item.handler}   \r\n                                                    dateText={item.dateText}                    \r\n                                                />   \r\n                                        )\r\n                                    }else if(item.type === 'date2'){\r\n                                            return (\r\n                                                <FormDateInput2\r\n                                                        label={item.label}\r\n                                                        name={item.id}\r\n                                                        key={item.id}\r\n                                                        type=\"text\"\r\n                                                        id={item.id}                                                                        \r\n                                                    />   \r\n                                            )\r\n                                    }else if(item.type === 'select'){\r\n                                        return (\r\n                                            <FormSelect\r\n                                                label={item.label}\r\n                                                selOptions={item.selOptions}\r\n                                                id={item.id}\r\n                                                name={item.id}\r\n                                                key={item.id}        \r\n                                            />   \r\n                                        )\r\n                                    }else if(item.type === 'selectFromComponent'){\r\n                                        return (\r\n                                            <FormSelectFromComponent\r\n                                                label={item.label}\r\n                                                id={item.id}\r\n                                                name={item.id}\r\n                                                key={item.id}\r\n                                                selectedLabel={item.selectedLabel}\r\n                                                component={item.component}\r\n                                                buttonLabel={item.buttonLabel}\r\n                                                resultHandler={item.resultHandler}\r\n                                            />\r\n                                        )\r\n                                    }else if(item.type === 'file'){\r\n                                        return(\r\n                                            \r\n                                            <FormFileupload\r\n                                                label={item.label}\r\n                                                id={item.id}\r\n                                                name={item.id}\r\n                                                key={item.id}\r\n                                                onChange={item.onChange}\r\n                                            />\r\n                                        )\r\n                                    }else if(item.type === 'hidden'){\r\n                                        return(\r\n                                            <input \r\n                                                type='hidden'\r\n                                                name={item.id}\r\n                                                key={item.id}\r\n                                                value={item.value}\r\n                                            />\r\n                                        )\r\n                                    }else if(item.type === 'button'){\r\n                                        return(\r\n                                            <IconButton \r\n                                                key={item.id}\r\n                                                text={item.label}\r\n                                                icon={item.icon}\r\n                                                onClick={item.handler}\r\n                                            />\r\n                                        )\r\n                                    }else if(item.type === 'buttons'){\r\n                                        return (\r\n                                            <FormButtons key=\"form_buttons\">\r\n                                            {\r\n                                                item.buttons.map((button) => {\r\n                                                    if(button.type === 'submit'){\r\n                                                        return (\r\n                                                            <IconButton\r\n                                                                    key={button.id}\r\n                                                                    text={button.label}\r\n                                                                    icon={button.icon}\r\n                                                                    type=\"submit\"\r\n                                                                    className={button.className}\r\n                                                                />\r\n                                                        )\r\n                                                    }else if(button.type === 'link'){\r\n                                                        return (\r\n                                                            <IconLink \r\n                                                                key={button.id}\r\n                                                                text={button.label}\r\n                                                                icon={button.icon}\r\n                                                                route={button.route}\r\n                                                                type=\"button\"\r\n                                                                className={button.className}\r\n                                                            />\r\n                                                        )\r\n                                                    }else{\r\n                                                        return (\r\n                                                            <IconButton \r\n                                                                key={button.id}\r\n                                                                text={button.label}\r\n                                                                icon={button.icon}\r\n                                                                onClick={button.onClick}\r\n                                                                type=\"button\"\r\n                                                                className={button.className}\r\n                                                            />\r\n                                                        )\r\n                                                    }\r\n                                                }) \r\n                                            }\r\n                                            </FormButtons>         \r\n                                        )                              \r\n                                    }\r\n                                    \r\n                                })\r\n                            }\r\n                        </FormWrapper>                        \r\n                    )\r\n                }}\r\n            </Formik>  \r\n          }\r\n          </>\r\n      )\r\n  }",["403","404"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\views\\settings.component.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\handlers\\database.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\block.tsx",["405"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {common, font, color } from '../../../styles/theme'\r\nimport { BlockActions } from '../common/block-actions'\r\n\r\nexport const BlockContainer = styled.div`\r\n    margin: 1rem;\r\n    border-style: solid;\r\n    border-color: #000;\r\n    border-width: 1px;\r\n    ${common.roundedCorners()};\r\n`\r\n\r\nconst BlockTitle = styled.div`\r\n    ${font.h3()};\r\n    color: ${color.white};\r\n    background-color: ${color.orange};\r\n    ${common.roundedCornersTop()};\r\n    padding: 1rem;\r\n`\r\nexport const BlockContent = styled.div`\r\n    padding: 1rem;\r\n`\r\n\r\nexport const BlockEmptySet = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    font-style: italic;\r\n    color: ${color.black}\r\n`\r\n\r\nexport const BlockEmptyComponent = () => {\r\n    return (\r\n        <BlockEmptySet>\r\n            No se han encontrado resultados\r\n        </BlockEmptySet>\r\n    )\r\n}\r\nexport const BlockHeaderComponent = (props) => {\r\n    const [title, setTitle] = React.useState<string>(props.title || 'Sin título')\r\n    const [actions, setActions] = React.useState<Array<any>>([])\r\n\r\n    React.useEffect(() => {\r\n        setActions(props.actions)\r\n    },[actions])\r\n\r\n    React.useEffect(() => {\r\n        setTitle(props.title)\r\n    },[props.title])\r\n\r\n    return (\r\n        <>\r\n            <BlockTitle>{title}</BlockTitle>     \r\n            {actions && actions.length > 0 &&\r\n                <BlockActions \r\n                    actions={actions}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-list.component.tsx",["406"],"import React from 'react'\r\nimport { FaPlus, FaFilter } from 'react-icons/fa'\r\nimport { BlockContainer, BlockHeaderComponent, BlockEmptyComponent} from '../common/block'\r\nimport { Spinner } from '../common/spinner'\r\nimport { getWorklogList} from '../../../application/getWorklogList'\r\nimport { Worklog } from '../../../domain/worklog'\r\nimport { Link } from 'react-router-dom'\r\nimport { common, color } from '../../../styles/theme'\r\nimport styled from 'styled-components'\r\n\r\nconst ListItem = styled.li`\r\n    list-style: none;\r\n    padding: 1rem;\r\n    margin: 1rem;\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    border-color: ${color.orange};\r\n    background-color: ${color.orange};\r\n    color: ${color.white};\r\n    ${common.roundedCorners()};\r\n`\r\n\r\nconst WorklogListItem = (props: {worklog: Worklog } ) => {    \r\n    \r\n    return(\r\n        <ul>\r\n            <Link to={`/worklogs/${props.worklog.id}`}>\r\n                <ListItem>{props.worklog.title}</ListItem>\r\n            </Link>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport const WorklogListComponent = ( props ) => {\r\n    const [worklogs, setWorklogs] = React.useState<Array<any>>([])\r\n    const [error, setError] = React.useState<Error | null>(null)\r\n    const [loading, setLoading] = React.useState<boolean>(false)\r\n    const [actions, setActions] = React.useState<Array<any>>([])\r\n    const [filters, setFilters ] = React.useState<Partial<any>>(props.filter ||{})\r\n\r\n    \r\n    React.useEffect(() => {\r\n        let cancelled = false\r\n        setLoading(true)\r\n        setActions(actionItems)\r\n        getWorklogList(filters)\r\n            .then(\r\n                (result) => {\r\n                    if(!cancelled){\r\n                        if(result.hasError){\r\n                            setError(new Error(result.error));\r\n                            setWorklogs([])\r\n                        }else{\r\n                            setWorklogs(result.data); \r\n                            setError(null);\r\n                        }\r\n                        \r\n                        setLoading(false)\r\n                    }\r\n                },\r\n                (error) => {\r\n                    if(!cancelled){\r\n                        setError(error)\r\n                        setLoading(false)\r\n                    }\r\n                }\r\n            )\r\n\r\n        return () => cancelled = true\r\n    },[filters])\r\n\r\n    const searchHandler = (values) => {\r\n        const filter: Partial<Worklog> = {}\r\n        if(values.actionBarSearch){\r\n            filter.title = values.actionBarSearch\r\n        }\r\n        setFilters(filter)\r\n    }\r\n\r\n    const validation = (values) => {\r\n        const errors = []\r\n        return errors\r\n    }\r\n    let actionItems = [\r\n        {\r\n            icon: FaPlus,\r\n            text: 'Nuevo parte',\r\n            route: `/worklogs/new`,\r\n            type: 'link'\r\n        },\r\n        {\r\n            view: 'actionBar',\r\n            type: 'form',         \r\n            key: 'actionBarFilterForm',   \r\n            initValues: {actionBarSearch: ''},\r\n            onSubmit: searchHandler,\r\n            validation: validation,\r\n            items: [\r\n                {\r\n                    type: 'text',\r\n                    id: 'actionBarSearch',\r\n                    placeholder: 'Buscar...'\r\n                },\r\n                {        \r\n                    id: 'filterBtn',\r\n                    type: 'submit',\r\n                    icon: FaFilter,\r\n                    label: 'Filtrar',\r\n                    className: 'button-icon'\r\n                }\r\n            ]\r\n            \r\n        },\r\n        \r\n    ]\r\n    return (\r\n        <BlockContainer>\r\n            <BlockHeaderComponent \r\n                title='Partes de trabajo'\r\n                actions={actions}\r\n            />\r\n            {loading && <Spinner />}\r\n            {worklogs.length ? \r\n                (error!==null ? \r\n                    <div>Error: {error.message?error.message:'unknown error'}</div> \r\n                    :\r\n                    worklogs.map((item: Worklog) => (\r\n                        <WorklogListItem key={item.id} worklog={item} />\r\n                    ))\r\n                )\r\n                :\r\n                <BlockEmptyComponent />\r\n            }\r\n        </BlockContainer>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\importDatabase.ts",["407"],"import { ApiResponse, ApiResponseBuilder } from '../../api/domain/api-response'\r\n\r\nexport interface importForm {\r\n    dbfile: File\r\n}\r\n\r\n// TODO: El archivo debería enviarse como tal, y la comprobación de si es una base de datos válida debería hacerse en el backend dependiendo del \r\n//  repositorio utilizado. Debido a problemas al enviar el archivo a través del fetch con mock service worker se pospone este cambio para poder\r\n//  continuar con el desarrollo\r\nconst readFile = (file: File): Promise<object> => {\r\n    return new Promise((resolve,reject) => {\r\n        let reader = new FileReader()\r\n        reader.onload = (function(theFile) {\r\n            return function(e) {\r\n                try{\r\n                    let res = JSON.parse(reader.result as string)\r\n                    resolve(res) \r\n                }catch(e){\r\n                   reject('El archivo no es una base de datos válida')\r\n                }\r\n            };\r\n        })(file);  \r\n        reader.readAsText(file as File);\r\n    })\r\n    \r\n}\r\nexport const importDb = async (db: importForm): Promise<ApiResponse> => {\r\n    \r\n    let dbfile = null\r\n    await readFile(db.dbfile).then(\r\n        result => {\r\n            console.log(result)\r\n            dbfile = result\r\n        },\r\n        error => {            \r\n            throw new Error(error)            \r\n        }\r\n    )\r\n    \r\n    return await fetch('http://localhost:3000/api/db/import',{\r\n        method: 'POST',\r\n        headers: {'Content-type': 'application/json'},\r\n        body: JSON.stringify(dbfile)\r\n    })\r\n        .then(res => res.json())        \r\n        .then(\r\n            (result) => {              \r\n                return result\r\n             },\r\n            (error) => { \r\n                throw new Error(error)\r\n            }\r\n        )\r\n}\r\n\r\n","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\addWorklog.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\getTaskList.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\getTask.tsx",["408"],"import { ApiResponse } from '../../api/domain/api-response'\r\nimport { mapTaskApiTocomponent } from '../application/dtos/taskApiToComponent.dto'\r\n \r\nexport const getTask = async (taskid: string): Promise<ApiResponse> => {\r\n    return await fetch(`http://localhost:3000/api/tasks/${taskid}`)\r\n        .then(res => res.json())        \r\n        .then(\r\n            (result) => {                \r\n                return result\r\n             },\r\n            (error) => { \r\n                throw new Error(error)\r\n            }\r\n        )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\updateJob.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\icon-button.tsx",["409","410","411","412"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { color, common } from '../../../styles/theme'\r\nimport { Link } from 'react-router-dom'\r\nimport {IconType} from 'react-icons'\r\nimport { BlockActions } from './block-actions'\r\n\r\nconst LinkWrapper = styled(Link)`  \r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: ${color.lightGrey};\r\n    ${common.roundedCorners()};\r\n    padding: 0.5rem;\r\n    flex-wrap: wrap;\r\n    color: ${color.veryDarkGrey} !important;    \r\n    transition: background-color .3s;\r\n\r\n    :hover, :hover span{\r\n        background-color: ${color.semiLightGrey};\r\n    }\r\n`;\r\n\r\nconst ButtonWrapper = styled.button`  \r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: ${color.lightGrey};\r\n    ${common.roundedCorners()};\r\n    padding: 0.5rem;\r\n    color: ${color.veryDarkGrey} !important;\r\n    transition: background-color .3s;\r\n\r\n    :hover, :hover span{\r\n        background-color: ${color.semiLightGrey};\r\n    }\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    \r\n    transition: background-color .3s;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n    margin-left: 1rem;\r\n`\r\n\r\nexport const IconButton = (props) => {\r\n    const [text, setText] = React.useState('')  \r\n    let Icon = props.icon || null\r\n\r\n    React.useEffect(()=> {\r\n        Icon = props.icon\r\n    },[props.icon])\r\n    \r\n    React.useEffect(()=> {\r\n        setText(props.text)\r\n    },[props.text])\r\n\r\n    return (\r\n        <ButtonWrapper\r\n            className={props.className}\r\n            onClick={props.onClick}\r\n            role=\"button\"\r\n            aria-label={props.text}\r\n            type={props.type}\r\n        >\r\n            <IconWrapper className={props.className}><Icon/></IconWrapper>       \r\n            {text && \r\n                <TextWrapper>{text}</TextWrapper>\r\n            }\r\n        </ButtonWrapper>\r\n    )\r\n}\r\n\r\n\r\nexport const IconLink = (props) => {\r\n    const [route, setRoute] = React.useState(props.route || '')\r\n    const [text, setText] = React.useState(props.text || '')\r\n\r\n    let Icon = props.icon || null\r\n\r\n    React.useEffect(()=> {\r\n        Icon = props.icon      \r\n    },[props.icon])\r\n\r\n    React.useEffect(()=> {\r\n        setRoute(props.route)\r\n    },[props.route])\r\n\r\n    React.useEffect(()=> {\r\n        setText(props.text)\r\n    },[props.text])\r\n\r\n    return (\r\n        <LinkWrapper \r\n            to={route} \r\n            className={props.className}\r\n            onClick={props.onClick}\r\n            role=\"button\"\r\n            aria-label={text}\r\n            >\r\n            <IconWrapper className={props.className}><Icon /></IconWrapper>\r\n            {text && \r\n                <TextWrapper>{text}</TextWrapper>\r\n            }\r\n        </LinkWrapper>\r\n    )\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\reportWebVitals.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\domain\\api-response.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\handlers\\jobs.ts",["413","414","415"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\newDatabase.ts",["416"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\getWorklogList.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\deleteTask.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\dtos\\taskApiToComponent.dto.ts",["417"],"import { TaskDetail} from '../../domain/task'\r\nimport { formattedDateToISOString, ISOStringToFormatedDate } from '../../../lib/date.utils'\r\n\r\nexport const mapTaskApiTocomponent = (task: TaskDetail): TaskDetail => {\r\n    if(!task){\r\n        return null\r\n    }\r\n    const dates = {\r\n        createdDate: ISOStringToFormatedDate(task.createdDate),\r\n        limitDate: ISOStringToFormatedDate(task.limitDate),\r\n    }\r\n    return {\r\n        ...task, \r\n        ...dates\r\n    }\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\addTask.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\closeWorklog.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\addJob.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\views\\worklog.view.component.tsx",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\worklog\\worklog-running.component.tsx",["418","419","420","421","422","423","424"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\exportDatabase.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\deleteWorklog.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\domain\\task-definitions.ts",["425"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\dtos\\jobApiToComponent.dto.ts",["426","427"],"import { Worklog } from '../../domain/worklog'\r\nimport { Job} from '../../domain/job'\r\nimport { formattedDateToISOString, ISOStringToFormatedDate } from '../../../lib/date.utils'\r\n\r\nexport const mapApiJobToComponent = (job: Job): Job => {\r\n    if(!job){\r\n        return null\r\n    }\r\n    const dates = {\r\n        //createdDate: formattedDateToISOString(worklog.createdDate),\r\n        startDatetime: ISOStringToFormatedDate(job.startDatetime),\r\n        endDatetime: ISOStringToFormatedDate(job.endDatetime)\r\n    }\r\n    return {\r\n        ...job, \r\n        ...dates\r\n    }\r\n}","C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\application\\getWorklogGroupedData.ts",["428"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\infrastructure\\repositories\\browser\\handlers.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\api\\application\\dtos\\dbToApiDto.ts",[],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\views\\home.component.tsx",["429","430","431"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\spinner.tsx",["432","433"],"C:\\Program Files\\Apache24\\htdocs\\php7\\tasker\\src\\front\\infrastructure\\components\\common\\modal.tsx",["434"],{"ruleId":"435","severity":1,"message":"436","line":17,"column":27,"nodeType":"437","messageId":"438","endLine":17,"endColumn":46},{"ruleId":"435","severity":1,"message":"439","line":17,"column":48,"nodeType":"437","messageId":"438","endLine":17,"endColumn":72},{"ruleId":"435","severity":1,"message":"440","line":60,"column":18,"nodeType":"437","messageId":"438","endLine":60,"endColumn":25},{"ruleId":"435","severity":1,"message":"441","line":62,"column":12,"nodeType":"437","messageId":"438","endLine":62,"endColumn":17},{"ruleId":"442","severity":1,"message":"443","line":115,"column":7,"nodeType":"444","endLine":115,"endColumn":9,"suggestions":"445"},{"ruleId":"446","severity":1,"message":"447","line":207,"column":38,"nodeType":"448","messageId":"449","endLine":207,"endColumn":40},{"ruleId":"446","severity":1,"message":"447","line":267,"column":29,"nodeType":"448","messageId":"449","endLine":267,"endColumn":31},{"ruleId":"450","replacedBy":"451"},{"ruleId":"452","replacedBy":"453"},{"ruleId":"435","severity":1,"message":"454","line":3,"column":17,"nodeType":"437","messageId":"438","endLine":3,"endColumn":23},{"ruleId":"435","severity":1,"message":"455","line":6,"column":25,"nodeType":"437","messageId":"438","endLine":6,"endColumn":32},{"ruleId":"435","severity":1,"message":"456","line":12,"column":10,"nodeType":"437","messageId":"438","endLine":12,"endColumn":23},{"ruleId":"435","severity":1,"message":"457","line":80,"column":18,"nodeType":"437","messageId":"438","endLine":80,"endColumn":26},{"ruleId":"442","severity":1,"message":"458","line":106,"column":10,"nodeType":"444","endLine":106,"endColumn":26,"suggestions":"459"},{"ruleId":"442","severity":1,"message":"460","line":133,"column":7,"nodeType":"444","endLine":133,"endColumn":17,"suggestions":"461"},{"ruleId":"442","severity":1,"message":"462","line":137,"column":7,"nodeType":"444","endLine":137,"endColumn":19,"suggestions":"463"},{"ruleId":"435","severity":1,"message":"464","line":7,"column":22,"nodeType":"437","messageId":"438","endLine":7,"endColumn":32},{"ruleId":"435","severity":1,"message":"465","line":32,"column":7,"nodeType":"437","messageId":"438","endLine":32,"endColumn":19},{"ruleId":"435","severity":1,"message":"466","line":45,"column":21,"nodeType":"437","messageId":"438","endLine":45,"endColumn":31},{"ruleId":"442","severity":1,"message":"467","line":82,"column":7,"nodeType":"444","endLine":82,"endColumn":9,"suggestions":"468"},{"ruleId":"435","severity":1,"message":"469","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":23},{"ruleId":"435","severity":1,"message":"470","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":19},{"ruleId":"442","severity":1,"message":"471","line":72,"column":7,"nodeType":"444","endLine":72,"endColumn":13,"suggestions":"472"},{"ruleId":"435","severity":1,"message":"473","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":25},{"ruleId":"435","severity":1,"message":"455","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":17},{"ruleId":"435","severity":1,"message":"474","line":13,"column":26,"nodeType":"437","messageId":"438","endLine":13,"endColumn":46},{"ruleId":"435","severity":1,"message":"475","line":17,"column":42,"nodeType":"437","messageId":"438","endLine":17,"endColumn":65},{"ruleId":"435","severity":1,"message":"476","line":103,"column":11,"nodeType":"437","messageId":"438","endLine":103,"endColumn":23},{"ruleId":"442","severity":1,"message":"477","line":132,"column":7,"nodeType":"444","endLine":132,"endColumn":24,"suggestions":"478"},{"ruleId":"442","severity":1,"message":"479","line":187,"column":7,"nodeType":"444","endLine":187,"endColumn":18,"suggestions":"480"},{"ruleId":"450","replacedBy":"481"},{"ruleId":"452","replacedBy":"482"},{"ruleId":"450","replacedBy":"451"},{"ruleId":"452","replacedBy":"453"},{"ruleId":"435","severity":1,"message":"483","line":4,"column":34,"nodeType":"437","messageId":"438","endLine":4,"endColumn":42},{"ruleId":"435","severity":1,"message":"484","line":7,"column":80,"nodeType":"437","messageId":"438","endLine":7,"endColumn":96},{"ruleId":"435","severity":1,"message":"485","line":10,"column":19,"nodeType":"437","messageId":"438","endLine":10,"endColumn":23},{"ruleId":"486","severity":1,"message":"487","line":110,"column":38,"nodeType":"488","messageId":"489","endLine":110,"endColumn":40},{"ruleId":"486","severity":1,"message":"487","line":187,"column":41,"nodeType":"488","messageId":"489","endLine":187,"endColumn":43},{"ruleId":"486","severity":1,"message":"487","line":312,"column":29,"nodeType":"488","messageId":"489","endLine":312,"endColumn":31},{"ruleId":"486","severity":1,"message":"487","line":370,"column":36,"nodeType":"488","messageId":"489","endLine":370,"endColumn":38},{"ruleId":"435","severity":1,"message":"490","line":21,"column":10,"nodeType":"437","messageId":"438","endLine":21,"endColumn":31},{"ruleId":"442","severity":1,"message":"491","line":46,"column":6,"nodeType":"444","endLine":46,"endColumn":8,"suggestions":"492"},{"ruleId":"435","severity":1,"message":"493","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":13},{"ruleId":"435","severity":1,"message":"494","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":17},{"ruleId":"435","severity":1,"message":"495","line":7,"column":10,"nodeType":"437","messageId":"438","endLine":7,"endColumn":20},{"ruleId":"435","severity":1,"message":"496","line":8,"column":30,"nodeType":"437","messageId":"438","endLine":8,"endColumn":41},{"ruleId":"446","severity":1,"message":"447","line":139,"column":35,"nodeType":"448","messageId":"449","endLine":139,"endColumn":37},{"ruleId":"446","severity":1,"message":"447","line":289,"column":32,"nodeType":"448","messageId":"449","endLine":289,"endColumn":34},{"ruleId":"435","severity":1,"message":"483","line":1,"column":22,"nodeType":"437","messageId":"438","endLine":1,"endColumn":30},{"ruleId":"435","severity":1,"message":"497","line":8,"column":10,"nodeType":"437","messageId":"438","endLine":8,"endColumn":20},{"ruleId":"435","severity":1,"message":"498","line":9,"column":10,"nodeType":"437","messageId":"438","endLine":9,"endColumn":23},{"ruleId":"435","severity":1,"message":"499","line":70,"column":7,"nodeType":"437","messageId":"438","endLine":70,"endColumn":15},{"ruleId":"435","severity":1,"message":"500","line":77,"column":12,"nodeType":"437","messageId":"438","endLine":77,"endColumn":20},{"ruleId":"435","severity":1,"message":"501","line":77,"column":22,"nodeType":"437","messageId":"438","endLine":77,"endColumn":33},{"ruleId":"442","severity":1,"message":"491","line":81,"column":7,"nodeType":"444","endLine":81,"endColumn":9,"suggestions":"502"},{"ruleId":"442","severity":1,"message":"491","line":103,"column":7,"nodeType":"444","endLine":103,"endColumn":13,"suggestions":"503"},{"ruleId":"435","severity":1,"message":"504","line":2,"column":8,"nodeType":"437","messageId":"438","endLine":2,"endColumn":14},{"ruleId":"435","severity":1,"message":"505","line":3,"column":10,"nodeType":"437","messageId":"438","endLine":3,"endColumn":15},{"ruleId":"435","severity":1,"message":"454","line":3,"column":17,"nodeType":"437","messageId":"438","endLine":3,"endColumn":23},{"ruleId":"435","severity":1,"message":"495","line":16,"column":10,"nodeType":"437","messageId":"438","endLine":16,"endColumn":20},{"ruleId":"435","severity":1,"message":"436","line":18,"column":27,"nodeType":"437","messageId":"438","endLine":18,"endColumn":46},{"ruleId":"435","severity":1,"message":"439","line":18,"column":48,"nodeType":"437","messageId":"438","endLine":18,"endColumn":72},{"ruleId":"435","severity":1,"message":"440","line":42,"column":18,"nodeType":"437","messageId":"438","endLine":42,"endColumn":25},{"ruleId":"435","severity":1,"message":"441","line":44,"column":12,"nodeType":"437","messageId":"438","endLine":44,"endColumn":17},{"ruleId":"442","severity":1,"message":"506","line":198,"column":7,"nodeType":"444","endLine":198,"endColumn":9,"suggestions":"507"},{"ruleId":"508","severity":1,"message":"509","line":459,"column":13,"nodeType":"437","messageId":"510","endLine":459,"endColumn":14},{"ruleId":"508","severity":1,"message":"509","line":503,"column":11,"nodeType":"437","messageId":"510","endLine":503,"endColumn":12},{"ruleId":"508","severity":1,"message":"509","line":521,"column":11,"nodeType":"437","messageId":"510","endLine":521,"endColumn":12},{"ruleId":"508","severity":1,"message":"509","line":954,"column":13,"nodeType":"437","messageId":"510","endLine":954,"endColumn":14},{"ruleId":"508","severity":1,"message":"511","line":955,"column":10,"nodeType":"437","messageId":"510","endLine":955,"endColumn":13},{"ruleId":"508","severity":1,"message":"509","line":1023,"column":11,"nodeType":"437","messageId":"510","endLine":1023,"endColumn":12},{"ruleId":"508","severity":1,"message":"512","line":1026,"column":9,"nodeType":"437","messageId":"510","endLine":1026,"endColumn":12},{"ruleId":"508","severity":1,"message":"509","line":1287,"column":12,"nodeType":"437","messageId":"510","endLine":1287,"endColumn":13},{"ruleId":"508","severity":1,"message":"513","line":1299,"column":10,"nodeType":"437","messageId":"510","endLine":1299,"endColumn":11},{"ruleId":"514","severity":1,"message":"515","line":1469,"column":3,"nodeType":"516","messageId":"517","endLine":1491,"endColumn":4},{"ruleId":"518","severity":1,"message":"519","line":1476,"column":4,"nodeType":"520","messageId":"521","endLine":1481,"endColumn":6},{"ruleId":"518","severity":1,"message":"519","line":1482,"column":4,"nodeType":"520","messageId":"521","endLine":1490,"endColumn":6},{"ruleId":"508","severity":1,"message":"509","line":1544,"column":14,"nodeType":"437","messageId":"510","endLine":1544,"endColumn":15},{"ruleId":"508","severity":1,"message":"522","line":1577,"column":9,"nodeType":"437","messageId":"510","endLine":1577,"endColumn":15},{"ruleId":"450","replacedBy":"523"},{"ruleId":"452","replacedBy":"524"},{"ruleId":"435","severity":1,"message":"525","line":4,"column":31,"nodeType":"437","messageId":"438","endLine":4,"endColumn":43},{"ruleId":"435","severity":1,"message":"526","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":14},{"ruleId":"435","severity":1,"message":"527","line":32,"column":12,"nodeType":"437","messageId":"438","endLine":32,"endColumn":17},{"ruleId":"435","severity":1,"message":"528","line":32,"column":19,"nodeType":"437","messageId":"438","endLine":32,"endColumn":27},{"ruleId":"435","severity":1,"message":"529","line":33,"column":19,"nodeType":"437","messageId":"438","endLine":33,"endColumn":27},{"ruleId":"435","severity":1,"message":"473","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":25},{"ruleId":"435","severity":1,"message":"530","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":20},{"ruleId":"435","severity":1,"message":"474","line":15,"column":26,"nodeType":"437","messageId":"438","endLine":15,"endColumn":46},{"ruleId":"435","severity":1,"message":"476","line":101,"column":11,"nodeType":"437","messageId":"438","endLine":101,"endColumn":23},{"ruleId":"442","severity":1,"message":"531","line":130,"column":7,"nodeType":"444","endLine":130,"endColumn":24,"suggestions":"532"},{"ruleId":"442","severity":1,"message":"479","line":190,"column":7,"nodeType":"444","endLine":190,"endColumn":15,"suggestions":"533"},{"ruleId":"450","replacedBy":"523"},{"ruleId":"452","replacedBy":"524"},{"ruleId":"435","severity":1,"message":"526","line":3,"column":17,"nodeType":"437","messageId":"438","endLine":3,"endColumn":21},{"ruleId":"435","severity":1,"message":"454","line":3,"column":23,"nodeType":"437","messageId":"438","endLine":3,"endColumn":29},{"ruleId":"486","severity":1,"message":"534","line":40,"column":50,"nodeType":"488","messageId":"535","endLine":40,"endColumn":52},{"ruleId":"442","severity":1,"message":"536","line":175,"column":7,"nodeType":"444","endLine":175,"endColumn":9,"suggestions":"537"},{"ruleId":"442","severity":1,"message":"538","line":201,"column":7,"nodeType":"444","endLine":201,"endColumn":9,"suggestions":"539"},{"ruleId":"442","severity":1,"message":"540","line":205,"column":7,"nodeType":"444","endLine":205,"endColumn":17,"suggestions":"541"},{"ruleId":"435","severity":1,"message":"542","line":250,"column":14,"nodeType":"437","messageId":"438","endLine":250,"endColumn":19},{"ruleId":"435","severity":1,"message":"543","line":250,"column":27,"nodeType":"437","messageId":"438","endLine":250,"endColumn":35},{"ruleId":"435","severity":1,"message":"544","line":250,"column":36,"nodeType":"437","messageId":"438","endLine":250,"endColumn":46},{"ruleId":"435","severity":1,"message":"545","line":311,"column":20,"nodeType":"437","messageId":"438","endLine":311,"endColumn":27},{"ruleId":"442","severity":1,"message":"546","line":315,"column":9,"nodeType":"444","endLine":315,"endColumn":11,"suggestions":"547"},{"ruleId":"486","severity":1,"message":"534","line":333,"column":50,"nodeType":"488","messageId":"535","endLine":333,"endColumn":52},{"ruleId":"486","severity":1,"message":"534","line":408,"column":50,"nodeType":"488","messageId":"535","endLine":408,"endColumn":52},{"ruleId":"450","replacedBy":"548"},{"ruleId":"452","replacedBy":"549"},{"ruleId":"442","severity":1,"message":"550","line":46,"column":7,"nodeType":"444","endLine":46,"endColumn":16,"suggestions":"551"},{"ruleId":"442","severity":1,"message":"479","line":70,"column":7,"nodeType":"444","endLine":70,"endColumn":16,"suggestions":"552"},{"ruleId":"435","severity":1,"message":"553","line":1,"column":23,"nodeType":"437","messageId":"438","endLine":1,"endColumn":41},{"ruleId":"435","severity":1,"message":"554","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":31},{"ruleId":"435","severity":1,"message":"555","line":5,"column":9,"nodeType":"437","messageId":"438","endLine":5,"endColumn":17},{"ruleId":"435","severity":1,"message":"556","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":22},{"ruleId":"442","severity":1,"message":"557","line":55,"column":16,"nodeType":"558","endLine":55,"endColumn":26},{"ruleId":"442","severity":1,"message":"557","line":86,"column":16,"nodeType":"558","endLine":86,"endColumn":26},{"ruleId":"435","severity":1,"message":"525","line":4,"column":31,"nodeType":"437","messageId":"438","endLine":4,"endColumn":43},{"ruleId":"435","severity":1,"message":"496","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":21},{"ruleId":"435","severity":1,"message":"475","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":33},{"ruleId":"435","severity":1,"message":"553","line":1,"column":23,"nodeType":"437","messageId":"438","endLine":1,"endColumn":41},{"ruleId":"435","severity":1,"message":"439","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":34},{"ruleId":"435","severity":1,"message":"469","line":2,"column":19,"nodeType":"437","messageId":"438","endLine":2,"endColumn":32},{"ruleId":"435","severity":1,"message":"559","line":7,"column":10,"nodeType":"437","messageId":"438","endLine":7,"endColumn":27},{"ruleId":"435","severity":1,"message":"560","line":7,"column":29,"nodeType":"437","messageId":"438","endLine":7,"endColumn":40},{"ruleId":"435","severity":1,"message":"475","line":7,"column":42,"nodeType":"437","messageId":"438","endLine":7,"endColumn":65},{"ruleId":"435","severity":1,"message":"436","line":7,"column":67,"nodeType":"437","messageId":"438","endLine":7,"endColumn":86},{"ruleId":"435","severity":1,"message":"561","line":32,"column":12,"nodeType":"437","messageId":"438","endLine":32,"endColumn":17},{"ruleId":"435","severity":1,"message":"562","line":32,"column":19,"nodeType":"437","messageId":"438","endLine":32,"endColumn":27},{"ruleId":"486","severity":1,"message":"487","line":17,"column":35,"nodeType":"488","messageId":"489","endLine":17,"endColumn":37},{"ruleId":"435","severity":1,"message":"455","line":1,"column":10,"nodeType":"437","messageId":"438","endLine":1,"endColumn":17},{"ruleId":"435","severity":1,"message":"439","line":3,"column":10,"nodeType":"437","messageId":"438","endLine":3,"endColumn":34},{"ruleId":"435","severity":1,"message":"469","line":2,"column":10,"nodeType":"437","messageId":"438","endLine":2,"endColumn":23},{"ruleId":"435","severity":1,"message":"454","line":3,"column":17,"nodeType":"437","messageId":"438","endLine":3,"endColumn":23},{"ruleId":"435","severity":1,"message":"474","line":4,"column":26,"nodeType":"437","messageId":"438","endLine":4,"endColumn":46},{"ruleId":"435","severity":1,"message":"563","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":27},{"ruleId":"435","severity":1,"message":"564","line":43,"column":12,"nodeType":"437","messageId":"438","endLine":43,"endColumn":19},{"ruleId":"442","severity":1,"message":"565","line":46,"column":7,"nodeType":"444","endLine":46,"endColumn":9,"suggestions":"566"},{"ruleId":"442","severity":1,"message":"567","line":81,"column":21,"nodeType":"437","endLine":81,"endColumn":30},"@typescript-eslint/no-unused-vars","'dateToFormattedDate' is defined but never used.","Identifier","unusedVar","'formattedDateToISOString' is defined but never used.","'setMode' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'mode' and 'taskid'. Either include them or remove the dependency array.","ArrayExpression",["568"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["569"],"no-negated-in-lhs",["570"],"'common' is defined but never used.","'Worklog' is defined but never used.","'updateWorklog' is defined but never used.","'setStart' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'calculateDiff'. Either include it or remove the dependency array.",["571"],"React Hook React.useEffect has a missing dependency: 'pausedJob'. Either include it or remove the dependency array.",["572"],"React Hook React.useEffect has a missing dependency: 'fillSequenceTable'. Either include it or remove the dependency array.",["573"],"'TaskObject' is defined but never used.","'SelectWidget' is assigned a value but never used.","'setWorklog' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.job'. Either include it or remove the dependency array. If 'setJob' needs the current value of 'props.job', you can also switch to useReducer instead of useState and read 'props.job' in the reducer.",["574"],"'WorklogObject' is defined but never used.","'JobObject' is defined but never used.","React Hook React.useEffect has a missing dependency: 'handleRunningJob'. Either include it or remove the dependency array.",["575"],"'Children' is defined but never used.","'BlockHeaderComponent' is defined but never used.","'ISOStringToFormatedDate' is defined but never used.","'childHandler' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'setSync' and 'worklogid'. Either include them or remove the dependency array.",["576"],"React Hook React.useEffect has a missing dependency: 'actionItems'. Either include it or remove the dependency array.",["577"],["569"],["570"],"'TaskItem' is defined but never used.","'mapTaskToApiTask' is defined but never used.","'over' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'RunningWorklogsWidget' is defined but never used.","React Hook React.useEffect has a missing dependency: 'setSync'. Either include it or remove the dependency array.",["578"],"'Job' is defined but never used.","'isEmpty' is defined but never used.","'Datepicker' is defined but never used.","'ApiResponse' is defined but never used.","'IconButton' is defined but never used.","'BrowserRouter' is defined but never used.","'importDB' is assigned a value but never used.","'syncFail' is assigned a value but never used.","'setSyncFail' is assigned a value but never used.",["579"],["580"],"'styled' is defined but never used.","'color' is defined but never used.","React Hook React.useEffect has missing dependencies: 'mode' and 'worklogid'. Either include them or remove the dependency array.",["581"],"no-redeclare","'i' is already defined.","redeclared","'msg' is already defined.","'day' is already defined.","'h' is already defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'result' is already defined.",["569"],["570"],"'FileDownload' is defined but never used.","'font' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'setError' is assigned a value but never used.","'TaskDetail' is defined but never used.","React Hook React.useEffect has missing dependencies: 'setSync' and 'taskid'. Either include them or remove the dependency array.",["582"],["583"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook React.useEffect has missing dependencies: 'label', 'props.id', 'props.maxDate', 'props.minDate', 'setTouched', and 'setValue'. Either include them or remove the dependency array.",["584"],"React Hook React.useEffect has a missing dependency: 'icon'. Either include it or remove the dependency array. If 'setInputIcon' needs the current value of 'icon', you can also switch to useReducer instead of useState and read 'icon' in the reducer.",["585"],"React Hook React.useEffect has missing dependencies: 'setTouched' and 'setValue'. Either include them or remove the dependency array.",["586"],"'field' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setTouched' is assigned a value but never used.","'setView' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.formItems'. Either include it or remove the dependency array. If 'setItems' needs the current value of 'props.formItems', you can also switch to useReducer instead of useState and read 'props.formItems' in the reducer.",["587"],["569"],["570"],"React Hook React.useEffect has a missing dependency: 'props.actions'. Either include it or remove the dependency array. If 'setActions' needs the current value of 'props.actions', you can also switch to useReducer instead of useState and read 'props.actions' in the reducer.",["588"],["589"],"'ApiResponseBuilder' is defined but never used.","'mapTaskApiTocomponent' is defined but never used.","'IconType' is defined but never used.","'BlockActions' is defined but never used.","Assignments to the 'Icon' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","MemberExpression","'formatElapsedTime' is defined but never used.","'elapsedTime' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'TaskListComponent' is defined but never used.","'message' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props.message'. Either include it or remove the dependency array. If 'setMessage' needs the current value of 'props.message', you can also switch to useReducer instead of useState and read 'props.message' in the reducer.",["590"],"Assignments to the 'Component' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.",{"desc":"591","fix":"592"},"no-global-assign","no-unsafe-negation",{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"607","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"616","fix":"617"},{"desc":"618","fix":"619"},{"desc":"620","fix":"621"},{"desc":"622","fix":"623"},{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},"Update the dependencies array to be: [mode, taskid]",{"range":"632","text":"633"},"Update the dependencies array to be: [calculateDiff, initialSeconds]",{"range":"634","text":"635"},"Update the dependencies array to be: [pausedJob, sequence]",{"range":"636","text":"637"},"Update the dependencies array to be: [fillSequenceTable, worklogObj]",{"range":"638","text":"639"},"Update the dependencies array to be: [props.job]",{"range":"640","text":"641"},"Update the dependencies array to be: [handleRunningJob, node]",{"range":"642","text":"643"},"Update the dependencies array to be: [confirmedDelete, setSync, worklogid]",{"range":"644","text":"645"},"Update the dependencies array to be: [actionItems, worklogid]",{"range":"646","text":"647"},"Update the dependencies array to be: [setSync]",{"range":"648","text":"649"},{"range":"650","text":"649"},"Update the dependencies array to be: [setSync, sync]",{"range":"651","text":"652"},"Update the dependencies array to be: [mode, worklogid]",{"range":"653","text":"654"},"Update the dependencies array to be: [confirmedDelete, setSync, taskid]",{"range":"655","text":"656"},"Update the dependencies array to be: [actionItems, taskid]",{"range":"657","text":"658"},"Update the dependencies array to be: [label, props.id, props.maxDate, props.minDate, setTouched, setValue]",{"range":"659","text":"660"},"Update the dependencies array to be: [icon]",{"range":"661","text":"662"},"Update the dependencies array to be: [dateText, setTouched, setValue]",{"range":"663","text":"664"},"Update the dependencies array to be: [props.formItems]",{"range":"665","text":"666"},"Update the dependencies array to be: [actions, props.actions]",{"range":"667","text":"668"},"Update the dependencies array to be: [actionItems, filters]",{"range":"669","text":"670"},"Update the dependencies array to be: [props.message]",{"range":"671","text":"672"},[4249,4251],"[mode, taskid]",[3256,3272],"[calculateDiff, initialSeconds]",[4120,4130],"[pausedJob, sequence]",[4210,4222],"[fillSequenceTable, worklogObj]",[3064,3066],"[props.job]",[2094,2100],"[handleRunningJob, node]",[4233,4250],"[confirmedDelete, setSync, worklogid]",[5829,5840],"[actionItems, worklogid]",[1619,1621],"[setSync]",[2708,2710],[3274,3280],"[setSync, sync]",[7500,7502],"[mode, worklogid]",[4180,4197],"[confirmedDelete, setSync, taskid]",[6244,6252],"[actionItems, taskid]",[5536,5538],"[label, props.id, props.maxDate, props.minDate, setTouched, setValue]",[6516,6518],"[icon]",[6609,6619],"[dateText, setTouched, setValue]",[10501,10503],"[props.formItems]",[1208,1217],"[actions, props.actions]",[2350,2359],"[actionItems, filters]",[1196,1198],"[props.message]"]